{
  "version": "Bears 1.0",
  "type": "passing_passing",
  "repository": {
    "name": "apache/calcite",
    "githubId": 21193524,
    "url": "https://github.com/apache/calcite",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 367658383,
      "url": "http://travis-ci.org/apache/calcite/builds/367658383",
      "date": "Apr 17, 2018 3:59:55 PM"
    },
    "fixerBuild": {
      "id": 368932712,
      "url": "http://travis-ci.org/apache/calcite/builds/368932712",
      "date": "Apr 20, 2018 4:16:14 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Sep 4, 2018 6:21:19 AM",
    "reproductionDateEnd": "Sep 4, 2018 6:36:24 AM",
    "machineInfo": {
      "hostName": "spirals-bears",
      "numberCPU": 16,
      "freeMemory": 216782264,
      "totalMemory": 480247808
    },
    "totalDuration": 898,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 18,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          18
        ]
      },
      "building": {
        "nbSteps": 5,
        "totalDuration": 130,
        "stepNames": [
          "CheckoutPatchedBuildCandidate",
          "ComputeSourceDir",
          "ComputeTestDir",
          "CheckoutBuggyBuildCandidateSourceCode",
          "BuildProjectBuggyBuildCandidateSourceCode"
        ],
        "stepDurations": [
          1,
          0,
          0,
          0,
          129
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 253,
        "stepNames": [
          "TestProjectBuggyBuildCandidateSourceCode"
        ],
        "stepDurations": [
          253
        ]
      }
    },
    "projectRootPomPath": "./workspace/apache/calcite/367658383/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 1,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 5,
      "numberDeleted": 2
    }
  },
  "tests": {
    "failingModule": "/root/workspace/apache/calcite/367658383/core",
    "overallMetrics": {
      "numberRunning": 4551,
      "numberPassing": 4129,
      "numberFailing": 14,
      "numberErroring": 408,
      "numberSkipping": 109,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 14
        },
        {
          "failureName": "org.apache.calcite.avatica.AvaticaSqlException",
          "isError": true,
          "occurrences": 3
        },
        {
          "failureName": "java.lang.RuntimeException",
          "isError": true,
          "occurrences": 374
        },
        {
          "failureName": "java.sql.SQLException",
          "isError": true,
          "occurrences": 29
        },
        {
          "failureName": "java.lang.reflect.InvocationTargetException",
          "isError": true,
          "occurrences": 2
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "org.apache.calcite.test.MultiJdbcSchemaJoinTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "numberRunning": 33,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 26,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.calcite.test.enumerable.EnumerableCorrelateTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "numberRunning": 36,
        "numberPassing": 18,
        "numberFailing": 0,
        "numberErroring": 18,
        "numberSkipping": 2
      },
      {
        "testClass": "org.apache.calcite.test.ExceptionMessageTest",
        "numberRunning": 5,
        "numberPassing": 3,
        "numberFailing": 1,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.calcite.tools.FrameworksTest",
        "numberRunning": 7,
        "numberPassing": 6,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackTest",
        "numberRunning": 5,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 1
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "numberRunning": 18,
        "numberPassing": 5,
        "numberFailing": 0,
        "numberErroring": 13,
        "numberSkipping": 1
      },
      {
        "testClass": "org.apache.calcite.jdbc.CalciteRemoteDriverTest",
        "numberRunning": 28,
        "numberPassing": 21,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "numberRunning": 112,
        "numberPassing": 3,
        "numberFailing": 1,
        "numberErroring": 108,
        "numberSkipping": 17
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "numberRunning": 258,
        "numberPassing": 90,
        "numberFailing": 0,
        "numberErroring": 168,
        "numberSkipping": 18
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 4
      },
      {
        "testClass": "org.apache.calcite.test.LinqFrontJdbcBackTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "numberRunning": 23,
        "numberPassing": 11,
        "numberFailing": 0,
        "numberErroring": 12,
        "numberSkipping": 1
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "numberRunning": 16,
        "numberPassing": 2,
        "numberFailing": 12,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.calcite.profile.ProfilerTest",
        "numberRunning": 8,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 2
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "numberRunning": 26,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 24,
        "numberSkipping": 5
      }
    ],
    "failureDetails": [
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView0",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" + 1 as x from \"emps\" where \"deptno\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ExceptionMessageTest",
        "testMethod": "testValidQuery",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select * from \"entries\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ExceptionMessageTest.TestSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"test\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).entries);\n}\n\n\npublic Class getElementType() {\n  return org.apache.calcite.test.ExceptionMessageTest.Entry.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterializationUKFK1",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"a\".\"empid\" from \n(select * from \"emps\" where \"empid\" \u003d 1) \"a\"\njoin \"dependents\" using (\"empid\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterializationUKFK7",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"emps\".\"empid\" from \"emps\"\njoin \"dependents\" using (\"empid\")\nwhere \"emps\".\"empid\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testUserDefinedAggregateFunction",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"adhoc\".my_sum(\"deptno\") as p from \"adhoc\".EMPLOYEES\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where \"deptno\" - 10 \u003d 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[9: quidem(sql/outer.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/outer.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/outer.iq\n355,363c355,357\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+---------+------------+----------+\n\u003c | EMPNO | ENAME | JOB | MGR | HIREDATE | SAL | COMM | DEPTNO | DEPTNO0 | DNAME      | LOC      |\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+---------+------------+----------+\n\u003c |       |       |     |     |          |     |      |        |      10 | ACCOUNTING | NEW YORK |\n\u003c |       |       |     |     |          |     |      |        |      20 | RESEARCH   | DALLAS   |\n\u003c |       |       |     |     |          |     |      |        |      30 | SALES      | CHICAGO  |\n\u003c |       |       |     |     |          |     |      |        |      40 | OPERATIONS | BOSTON   |\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+---------+------------+----------+\n\u003c (4 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp right join \"scott\".dept on sal \u003c 100\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n364a359,681\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp5_0 \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_100_;\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 inp5_0 \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.lt(inp5_0, v))};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_100_ \u003d new java.math.BigDecimal(\n\u003e             100);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.EnumerableDefaults.thetaJoin(left, org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Predicate2() {\n\u003e     public boolean apply(Object[] left, Object[] right) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.isTrue((Boolean) left[8]);\n\u003e     }\n\u003e     public boolean apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left \u003d\u003d null ? null : left[0],\n\u003e           left \u003d\u003d null ? null : left[1],\n\u003e           left \u003d\u003d null ? null : left[2],\n\u003e           left \u003d\u003d null ? null : left[3],\n\u003e           left \u003d\u003d null ? null : left[4],\n\u003e           left \u003d\u003d null ? null : left[5],\n\u003e           left \u003d\u003d null ? null : left[6],\n\u003e           left \u003d\u003d null ? null : left[7],\n\u003e           left \u003d\u003d null ? null : left[8],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , true, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   current[11]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp5_0 \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_100_;\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 inp5_0 \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.lt(inp5_0, v))};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_100_ \u003d new java.math.BigDecimal(\n\u003e             100);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.EnumerableDefaults.thetaJoin(left, org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Predicate2() {\n\u003e     public boolean apply(Object[] left, Object[] right) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.isTrue((Boolean) left[8]);\n\u003e     }\n\u003e     public boolean apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left \u003d\u003d null ? null : left[0],\n\u003e           left \u003d\u003d null ? null : left[1],\n\u003e           left \u003d\u003d null ? null : left[2],\n\u003e           left \u003d\u003d null ? null : left[3],\n\u003e           left \u003d\u003d null ? null : left[4],\n\u003e           left \u003d\u003d null ? null : left[5],\n\u003e           left \u003d\u003d null ? null : left[6],\n\u003e           left \u003d\u003d null ? null : left[7],\n\u003e           left \u003d\u003d null ? null : left[8],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , true, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   current[11]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOverUnboundedPreceding",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\",\n  \"commission\",\n  count(\"empid\") over (partition by 42\n    order by \"commission\" nulls first\n    rows between UNBOUNDED PRECEDING and current row) as m\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testJoinMismatchedVarchar",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c\nfrom \"customer\" as c\njoin \"product\" as p on c.\"lname\" \u003d p.\"brand_name\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs15",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select floor(cast(\"ts\" as timestamp) to minute), sum(\"eventid\") as s\nfrom \"events\" group by floor(cast(\"ts\" as timestamp) to minute)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[10: quidem(sql/sort.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/sort.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/sort.iq\n22a23,135\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"days\" order by \"day\"\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"days\").asEnumerable();\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"days\").asEnumerable();\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n29,35c142,144\n\u003c +-----+----------+\n\u003c | day | week_day |\n\u003c +-----+----------+\n\u003c |   1 | Sunday   |\n\u003c |   2 | Monday   |\n\u003c +-----+----------+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"days\" order by \"day\" limit 2\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n36a146,260\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"days\").asEnumerable().take(2);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"days\").asEnumerable().take(2);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n44,51c268,270\n\u003c +-----+-----------+\n\u003c | day | week_day  |\n\u003c +-----+-----------+\n\u003c |   2 | Monday    |\n\u003c |   3 | Tuesday   |\n\u003c |   4 | Wednesday |\n\u003c +-----+-----------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"days\" where \"day\" between 2 and 4 order by \"day\"\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n52a272,446\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"days\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final int inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]);\n\u003e                 if (inp0_ \u003e\u003d 2 \u0026\u0026 inp0_ \u003c\u003d 4) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"days\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final int inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]);\n\u003e                 if (inp0_ \u003e\u003d 2 \u0026\u0026 inp0_ \u003c\u003d 4) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n63,70c457,461\n\u003c +----------+--------------+\n\u003c | store_id | grocery_sqft |\n\u003c +----------+--------------+\n\u003c |        0 |              |\n\u003c |        2 |        22271 |\n\u003c |        1 |        17475 |\n\u003c +----------+--------------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"store_id\", \"grocery_sqft\" from \"store\"\n\u003e where \"store_id\" \u003c 3\n\u003e order by 2 DESC\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n71a463,753\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"store\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]) \u003c 3) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10],\n\u003e                 current[11],\n\u003e                 current[12],\n\u003e                 current[13],\n\u003e                 current[14],\n\u003e                 current[15],\n\u003e                 current[16],\n\u003e                 current[17],\n\u003e                 current[18],\n\u003e                 current[19],\n\u003e                 current[20],\n\u003e                 current[21],\n\u003e                 current[22],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v) {\n\u003e       return (Integer) v[16];\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(true, true));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[16]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"store\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]) \u003c 3) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10],\n\u003e                 current[11],\n\u003e                 current[12],\n\u003e                 current[13],\n\u003e                 current[14],\n\u003e                 current[15],\n\u003e                 current[16],\n\u003e                 current[17],\n\u003e                 current[18],\n\u003e                 current[19],\n\u003e                 current[20],\n\u003e                 current[21],\n\u003e                 current[22],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v) {\n\u003e       return (Integer) v[16];\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(true, true));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[16]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n78,85c760,764\n\u003c +----------+--------------+\n\u003c | store_id | grocery_sqft |\n\u003c +----------+--------------+\n\u003c |        0 |              |\n\u003c |        2 |        22271 |\n\u003c |        1 |        17475 |\n\u003c +----------+--------------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"store_id\", \"grocery_sqft\" from \"store\"\n\u003e where \"store_id\" \u003c 3\n\u003e order by \"florist\", 2 DESC\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n86a766,1131\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"store\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]) \u003c 3) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10],\n\u003e                 current[11],\n\u003e                 current[12],\n\u003e                 current[13],\n\u003e                 current[14],\n\u003e                 current[15],\n\u003e                 current[16],\n\u003e                 current[17],\n\u003e                 current[18],\n\u003e                 current[19],\n\u003e                 current[20],\n\u003e                 current[21],\n\u003e                 current[22],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Boolean) v0[23], (Boolean) v1[23]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Integer) v0[16], (Integer) v1[16]);\n\u003e       if (c !\u003d 0) {\n\u003e         return - c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable _inputEnumerable1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[16],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"store\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]) \u003c 3) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10],\n\u003e                 current[11],\n\u003e                 current[12],\n\u003e                 current[13],\n\u003e                 current[14],\n\u003e                 current[15],\n\u003e                 current[16],\n\u003e                 current[17],\n\u003e                 current[18],\n\u003e                 current[19],\n\u003e                 current[20],\n\u003e                 current[21],\n\u003e                 current[22],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Boolean) v0[23], (Boolean) v1[23]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Integer) v0[16], (Integer) v1[16]);\n\u003e       if (c !\u003d 0) {\n\u003e         return - c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable _inputEnumerable1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[16],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(Enumerable (stack truncated)\n93,100c1138,1142\n\u003c +----------+--------------+\n\u003c | store_id | grocery_sqft |\n\u003c +----------+--------------+\n\u003c |        1 |        17475 |\n\u003c |        2 |        22271 |\n\u003c |        0 |              |\n\u003c +----------+--------------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"store_id\", \"grocery_sqft\" from \"store\"\n\u003e where \"store_id\" \u003c 3\n\u003e order by 2\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n101a1144,1434\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"store\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]) \u003c 3) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10],\n\u003e                 current[11],\n\u003e                 current[12],\n\u003e                 current[13],\n\u003e                 current[14],\n\u003e                 current[15],\n\u003e                 current[16],\n\u003e                 current[17],\n\u003e                 current[18],\n\u003e                 current[19],\n\u003e                 current[20],\n\u003e                 current[21],\n\u003e                 current[22],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v) {\n\u003e       return (Integer) v[16];\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[16]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"store\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]) \u003c 3) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10],\n\u003e                 current[11],\n\u003e                 current[12],\n\u003e                 current[13],\n\u003e                 current[14],\n\u003e                 current[15],\n\u003e                 current[16],\n\u003e                 current[17],\n\u003e                 current[18],\n\u003e                 current[19],\n\u003e                 current[20],\n\u003e                 current[21],\n\u003e                 current[22],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v) {\n\u003e       return (Integer) v[16];\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[16]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n109,116c1442,1446\n\u003c +----------+--------------+\n\u003c | store_id | grocery_sqft |\n\u003c +----------+--------------+\n\u003c |        1 |        17475 |\n\u003c |        2 |        22271 |\n\u003c |        0 |              |\n\u003c +----------+--------------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"store_id\", \"grocery_sqft\" from \"store\"\n\u003e where \"store_id\" \u003c 3\n\u003e order by \"florist\", 2\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n117a1448,1813\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"store\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]) \u003c 3) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10],\n\u003e                 current[11],\n\u003e                 current[12],\n\u003e                 current[13],\n\u003e                 current[14],\n\u003e                 current[15],\n\u003e                 current[16],\n\u003e                 current[17],\n\u003e                 current[18],\n\u003e                 current[19],\n\u003e                 current[20],\n\u003e                 current[21],\n\u003e                 current[22],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Boolean) v0[23], (Boolean) v1[23]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Integer) v0[16], (Integer) v1[16]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable _inputEnumerable1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[16],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"store\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]) \u003c 3) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10],\n\u003e                 current[11],\n\u003e                 current[12],\n\u003e                 current[13],\n\u003e                 current[14],\n\u003e                 current[15],\n\u003e                 current[16],\n\u003e                 current[17],\n\u003e                 current[18],\n\u003e                 current[19],\n\u003e                 current[20],\n\u003e                 current[21],\n\u003e                 current[22],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Boolean) v0[23], (Boolean) v1[23]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Integer) v0[16], (Integer) v1[16]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable _inputEnumerable1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[16],\n\u003e                 current[23]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpret (stack truncated)\n126,134c1822,1826\n\u003c +--------+------------+----------+\n\u003c | DEPTNO | DNAME      | LOC      |\n\u003c +--------+------------+----------+\n\u003c |     40 | OPERATIONS | BOSTON   |\n\u003c |     30 | SALES      | CHICAGO  |\n\u003c |     20 | RESEARCH   | DALLAS   |\n\u003c |     10 | ACCOUNTING | NEW YORK |\n\u003c +--------+------------+----------+\n\u003c (4 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select *\n\u003e from \"scott\".DEPT\n\u003e order by deptno desc, dname, deptno\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n135a1828,1980\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compare(org.apache.calcite.runtime.SqlFunctions.toByte(v0[0]), org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]));\n\u003e       if (c !\u003d 0) {\n\u003e         return - c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[1] \u003d\u003d null ? (String) null : v0[1].toString(), v1[1] \u003d\u003d null ? (String) null : v1[1].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable().orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compare(org.apache.calcite.runtime.SqlFunctions.toByte(v0[0]), org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]));\n\u003e       if (c !\u003d 0) {\n\u003e         return - c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[1] \u003d\u003d null ? (String) null : v0[1].toString(), v1[1] \u003d\u003d null ? (String) null : v1[1].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable().orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 24, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n146,154c1991,1994\n\u003c +-------+--------+\n\u003c | EMPID | EMPID0 |\n\u003c +-------+--------+\n\u003c |   100 |    100 |\n\u003c |   100 |    110 |\n\u003c |   110 |    100 |\n\u003c |   110 |    110 |\n\u003c +-------+--------+\n\u003c (4 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"with e as (select \"empid\" as empid from \"hr\".\"emps\" where \"empid\" \u003c 120)\n\u003e select * from e as e1, e as e2 order by e1.empid + e2.empid, e1.empid\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n155a1996,2408\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid \u003c 120) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return ((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid;\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid \u003c 120) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return ((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid;\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(int v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Integer v1) {\n\u003e       return apply(\n\u003e         v1.intValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Integer) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(int v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Integer v1) {\n\u003e       return apply(\n\u003e         v1.intValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Integer) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Integer left, Integer right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Integer) left,\n\u003e         (Integer) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toInt(current[0]) + org.apache.calcite.runtime.SqlFunctions.toInt(current[1])};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compare(org.apache.calcite.runtime.SqlFunctions.toInt(v0[2]), org.apache.calcite.runtime.SqlFunctions.toInt(v1[2]));\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compare(org.apache.calcite.runtime.SqlFunctions.toInt(v0[0]), org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]));\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d child.orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid \u003c 120) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return ((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid;\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if (((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid \u003c 120) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return ((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid;\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(int v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Integer v1) {\n\u003e       return apply(\n\u003e         v1.intValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Integer) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(int v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Integer v1) {\n\u003e       return apply(\n\u003e         v1.intValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Integer) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Integer left, Integer right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Integer) left,\n\u003e         (Integer) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toInt(current[0]) + org.apache.calcite.runtime.SqlFunctions.toInt(current[1])};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compare(org.apache.calcite.runtime.SqlFunctions.toInt(v0[2]), org.apache.calcite.runtime.SqlFunctions.toInt(v1[2]));\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compare(org.apache.calcite.runtime.SqlFunctions.toInt(v0[0]), org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]));\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d child.orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 255: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compil (stack truncated)\n161,167c2414,2417\n\u003c +-------+\n\u003c | EMPID |\n\u003c +-------+\n\u003c |   150 |\n\u003c |   110 |\n\u003c +-------+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"with e as (select \"empid\" as empid from \"hr\".\"emps\" where \"empid\" \u003c 200)\n\u003e select * from e where empid \u003e 100 limit 5\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n168a2419,2686\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final int inp0_ \u003d ((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid;\n\u003e               if (inp0_ \u003c 200 \u0026\u0026 inp0_ \u003e 100) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.empid,\n\u003e                 current.deptno,\n\u003e                 current.name,\n\u003e                 current.salary,\n\u003e                 current.commission};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.take(5);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return int.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final int inp0_ \u003d ((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid;\n\u003e               if (inp0_ \u003c 200 \u0026\u0026 inp0_ \u003e 100) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.empid,\n\u003e                 current.deptno,\n\u003e                 current.name,\n\u003e                 current.salary,\n\u003e                 current.commission};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.take(5);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toInt(((Object[]) inputEnumerator.current())[0]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return int.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 255: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n173,181c2691,2693\n\u003c +-------+--------+-----------+---------+------------+\n\u003c | empid | deptno | name      | salary  | commission |\n\u003c +-------+--------+-----------+---------+------------+\n\u003c |   100 |     10 | Bill      | 10000.0 |       1000 |\n\u003c |   110 |     10 | Theodore  | 11500.0 |        250 |\n\u003c |   150 |     10 | Sebastian |  7000.0 |            |\n\u003c |   200 |     20 | Eric      |  8000.0 |        500 |\n\u003c +-------+--------+-----------+---------+------------+\n\u003c (4 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"hr\".\"emps\" offset 0\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n182a2695,2840\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return org.apache.calcite.test.JdbcTest.Employee.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return org.apache.calcite.test.JdbcTest.Employee.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 200: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n193,199c2851,2867\n\u003c +--------+---+\n\u003c | deptno | C |\n\u003c +--------+---+\n\u003c |     10 | 3 |\n\u003c |     20 | 1 |\n\u003c +--------+---+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select distinct \"deptno\", count(*) as c\n\u003e from \"hr\".\"emps\"\n\u003e group by \"deptno\"\n\u003e order by count(*) desc\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n200a2869,3195\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public int apply(org.apache.calcite.test.JdbcTest.Employee a0) {\n\u003e         return a0.deptno;\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.test.JdbcTest.Employee) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, org.apache.calcite.test.JdbcTest.Employee in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (org.apache.calcite.test.JdbcTest.Employee) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(int key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Integer key, Record1_0 acc) {\n\u003e         return apply(\n\u003e           key.intValue(),\n\u003e           acc);\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Integer) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Object[] v) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toLong(v[1]);\n\u003e       }\n\u003e       public Object apply(Object v) {\n\u003e         return apply(\n\u003e           (Object[]) v);\n\u003e       }\n\u003e     }\n\u003e     , org.apache.calcite.linq4j.function.Functions.nullsComparator(true, true));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public int apply(org.apache.calcite.test.JdbcTest.Employee a0) {\n\u003e         return a0.deptno;\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.test.JdbcTest.Employee) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, org.apache.calcite.test.JdbcTest.Employee in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (org.apache.calcite.test.JdbcTest.Employee) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(int key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Integer key, Record1_0 acc) {\n\u003e         return apply(\n\u003e           key.intValue(),\n\u003e           acc);\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Integer) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Object[] v) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toLong(v[1]);\n\u003e       }\n\u003e       public Object apply(Object v) {\n\u003e         return apply(\n\u003e           (Object[]) v);\n\u003e       }\n\u003e     }\n\u003e     , org.apache.calcite.linq4j.function.Functions.nullsComparator(true, true));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 200: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n207,212c3202,3218\n\u003c +---+\n\u003c | C |\n\u003c +---+\n\u003c | 1 |\n\u003c +---+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select distinct count(\"empid\") as c\n\u003e from \"hr\".\"emps\"\n\u003e group by \"empid\"\n\u003e order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n213a3220,3601\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public int apply(org.apache.calcite.test.JdbcTest.Employee a0) {\n\u003e         return a0.empid;\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.test.JdbcTest.Employee) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, org.apache.calcite.test.JdbcTest.Employee in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (org.apache.calcite.test.JdbcTest.Employee) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(int key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Integer key, Record1_0 acc) {\n\u003e         return apply(\n\u003e           key.intValue(),\n\u003e           acc);\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Integer) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toLong(a0[1]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public long apply(long key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return key;\n\u003e       }\n\u003e       public Long apply(Long key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return apply(\n\u003e           key.longValue(),\n\u003e           acc);\n\u003e       }\n\u003e       public Long apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Long) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     ).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(long v) {\n\u003e         return v;\n\u003e       }\n\u003e       public Object apply(Long v) {\n\u003e         return apply(\n\u003e           v.longValue());\n\u003e       }\n\u003e       public Object apply(Object v) {\n\u003e         return apply(\n\u003e           (Long) v);\n\u003e       }\n\u003e     }\n\u003e     , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public int apply(org.apache.calcite.test.JdbcTest.Employee a0) {\n\u003e         return a0.empid;\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.test.JdbcTest.Employee) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, org.apache.calcite.test.JdbcTest.Employee in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (org.apache.calcite.test.JdbcTest.Employee) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(int key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Integer key, Record1_0 acc) {\n\u003e         return apply(\n\u003e           key.intValue(),\n\u003e           acc);\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Integer) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toLong(a0[1]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public long apply(long key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return key;\n\u003e       }\n\u003e       public Long apply(Long key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return apply(\n\u003e           key.longValue(),\n\u003e           acc);\n\u003e       }\n\u003e       public Long apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Long) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     ).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(long v) {\n\u003e         return v;\n\u003e       }\n\u003e       public Object apply(Long v) {\n\u003e         return apply(\n\u003e           v.longValue());\n\u003e       }\n\u003e       public Object apply(Object v) {\n\u003e         return apply(\n\u003e           (Long) v);\n\u003e       }\n\u003e     }\n\u003e     , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 200: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCo (stack truncated)\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testTableModifyUpdate",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"DELETE FROM \"foodmart\".\"expense_fact\" WHERE \"store_id\"\u003d666\n\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object value;\n              value \u003d resultSet.getLong(1);\n              if (resultSet.wasNull()) {\n                value \u003d null;\n              }\n              return value;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"foodmart\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"DELETE FROM \\\"foodmart\\\".\\\"expense_fact\\\"\\nWHERE \\\"store_id\\\" \u003d 666\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return long.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testGroupEmpty",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c\nfrom \"foodmart\".\"days\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByDesc",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store_id\", \"grocery_sqft\" from \"store\"\nwhere \"store_id\" \u003c 3 order by 2 desc]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization8",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\"\nfrom \"depts\"\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")\njoin \"emps\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testRightJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.\"deptno\", d.\"deptno\"\nfrom \"hr\".\"emps\" as e\n  right join \"hr\".\"depts\" as d using (\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testSelectNOT",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select NOT \"wrapperBoolean\" \"value\" from \"s\".\"everyTypes\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[2: quidem(sql/join.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/join.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/join.iq\n115,122c115,118\n\u003c +--------+--------+\n\u003c | DEPTNO | DEPTNO |\n\u003c +--------+--------+\n\u003c |     10 |     10 |\n\u003c |     20 |     20 |\n\u003c |     30 |     30 |\n\u003c +--------+--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select distinct dept.deptno, emp.deptno\n\u003e from \"scott\".emp join \"scott\".dept using (deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n123a120,474\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[1];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), (Byte) a0[2]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return new Object[] {\n\u003e             org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0)),\n\u003e             (Byte) key.get(1)};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[1];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), (Byte) a0[2]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return new Object[] {\n\u003e             org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0)),\n\u003e             (Byte) key.get(1)};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calci (stack truncated)\n135,142c486,489\n\u003c +--------+\n\u003c | DEPTNO |\n\u003c +--------+\n\u003c |     10 |\n\u003c |     20 |\n\u003c |     30 |\n\u003c +--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select distinct dept.deptno\n\u003e from \"scott\".emp join \"scott\".dept using (deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n143a491,853\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[1];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public byte apply(byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return key;\n\u003e       }\n\u003e       public Byte apply(Byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return apply(\n\u003e           key.byteValue(),\n\u003e           acc);\n\u003e       }\n\u003e       public Byte apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return byte.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[1];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public byte apply(byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return key;\n\u003e       }\n\u003e       public Byte apply(Byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return apply(\n\u003e           key.byteValue(),\n\u003e           acc);\n\u003e       }\n\u003e       public Byte apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return byte.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n157,171c867,871\n\u003c +----+----+\n\u003c | E  | D  |\n\u003c +----+----+\n\u003c | 10 | 10 |\n\u003c | 10 |    |\n\u003c | 20 | 20 |\n\u003c | 20 |    |\n\u003c | 30 | 30 |\n\u003c | 30 |    |\n\u003c |    | 10 |\n\u003c |    | 20 |\n\u003c |    | 30 |\n\u003c |    |    |\n\u003c +----+----+\n\u003c (10 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select emp.deptno as e, dept.deptno as d\n\u003e from \"scott\".emp join \"scott\".dept using (deptno)\n\u003e group by cube(emp.deptno, dept.deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n172a873,1293\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), (Byte) a0[2], false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), null, false, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((byte)0, (Byte) a0[2], true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((byte)0, null, true, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? (Byte) null : Byte.valueOf(org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0))),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (Byte) null : (Byte) key.get(1)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), (Byte) a0[2], false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), null, false, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((byte)0, (Byte) a0[2], true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((byte)0, null, true, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? (Byte) null : Byte.valueOf(org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0))),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (Byte) null : (Byte) key.get(1)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExe (stack truncated)\n181,194c1302,1306\n\u003c +--------+--------+\n\u003c | DEPTNO | ENAME  |\n\u003c +--------+--------+\n\u003c |     10 | CLARK  |\n\u003c |     10 | KING   |\n\u003c |     10 | MILLER |\n\u003c |     20 | ALLEN  |\n\u003c |     20 | BLAKE  |\n\u003c |     20 | JAMES  |\n\u003c |     20 | MARTIN |\n\u003c |     20 | TURNER |\n\u003c |     20 | WARD   |\n\u003c +--------+--------+\n\u003c (9 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select distinct emp1.deptno, emp3.ename\n\u003e from \"scott\".emp emp1 join \"scott\".emp emp2 on (emp1.deptno \u003d emp2.deptno)\n\u003e join \"scott\".emp emp3 on (emp1.deptno + emp2.deptno \u003d emp3.deptno + 10)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n195a1308,1767\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp7_ \u003d (Byte) current[7];\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 inp7_ \u003d\u003d null ? (Integer) null : Integer.valueOf((int) inp7_.byteValue() + 10)};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left0.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp1_0 \u003d (Byte) current[1];\n\u003e             final Byte inp3_ \u003d (Byte) current[3];\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 inp1_0 \u003d\u003d null || inp3_ \u003d\u003d null ? (Integer) null : Integer.valueOf((int) (byte) (inp1_0.byteValue() + inp3_.byteValue()))};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right0, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[1] \u003d\u003d null ? (String) null : a0[1].toString(), (Byte) a0[3]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return new Object[] {\n\u003e           key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           (Byte) key.get(1)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp7_ \u003d (Byte) current[7];\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 inp7_ \u003d\u003d null ? (Integer) null : Integer.valueOf((int) inp7_.byteValue() + 10)};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left0.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp1_0 \u003d (Byte) current[1];\n\u003e             final Byte inp3_ \u003d (Byte) current[3];\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 inp1_0 \u003d\u003d null || inp3_ \u003d\u003d null ? (Integer) null : Integer.valueOf((int) (byte) (inp1_0.byteValue() + inp3_.byteValue()))};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right0, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object (stack truncated)\n217,230c1789,1793\n\u003c +--------+--------+\n\u003c | DEPTNO | DEPTNO |\n\u003c +--------+--------+\n\u003c |     10 |     10 |\n\u003c |     10 |     10 |\n\u003c |     10 |     10 |\n\u003c |     30 |     20 |\n\u003c |     30 |     20 |\n\u003c |     30 |     20 |\n\u003c |     30 |     20 |\n\u003c |     30 |     20 |\n\u003c |     30 |     20 |\n\u003c +--------+--------+\n\u003c (9 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select e.deptno, d.deptno\n\u003e from \"scott\".dept D ,  \"scott\".emp E\n\u003e where e.deptno + 10 \u003d d.deptno * 2\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n231a1795,2139\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 (int) org.apache.calcite.runtime.SqlFunctions.toByte(current[0]) * 2};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp7_0 \u003d (Byte) current[7];\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7],\n\u003e                 inp7_0 \u003d\u003d null ? (Integer) null : Integer.valueOf((int) inp7_0.byteValue() + 10)};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toInt(v1[1]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[0]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 (int) org.apache.calcite.runtime.SqlFunctions.toByte(current[0]) * 2};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp7_0 \u003d (Byte) current[7];\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7],\n\u003e                 inp7_0 \u003d\u003d null ? (Integer) null : Integer.valueOf((int) inp7_0.byteValue() + 10)};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toInt(v1[1]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[0]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n265,279c2173,2177\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | DEPTNO0 | DNAME      | LOC      |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |      30 | SALES      | CHICAGO  |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+\n\u003c (10 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from (select * from \"scott\".emp) e left join (\n\u003e   select * from \"scott\".dept d) using (deptno)\n\u003e order by empno limit 10\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n280a2179,2407\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().take(10).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[7];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Object[] left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left[0],\n\u003e             left[1],\n\u003e             left[2],\n\u003e             left[3],\n\u003e             left[4],\n\u003e             left[5],\n\u003e             left[6],\n\u003e             left[7],\n\u003e             right \u003d\u003d null ? null : right[0],\n\u003e             right \u003d\u003d null ? null : right[1],\n\u003e             right \u003d\u003d null ? null : right[2]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Object[]) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, true).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public short apply(Object[] v) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toShort(v[0]);\n\u003e       }\n\u003e       public Object apply(Object v) {\n\u003e         return apply(\n\u003e           (Object[]) v);\n\u003e       }\n\u003e     }\n\u003e     , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false)).take(10);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().take(10).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[7];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Object[] left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left[0],\n\u003e             left[1],\n\u003e             left[2],\n\u003e             left[3],\n\u003e             left[4],\n\u003e             left[5],\n\u003e             left[6],\n\u003e             left[7],\n\u003e             right \u003d\u003d null ? null : right[0],\n\u003e             right \u003d\u003d null ? null : right[1],\n\u003e             right \u003d\u003d null ? null : right[2]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Object[]) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, true).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public short apply(Object[] v) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toShort(v[0]);\n\u003e       }\n\u003e       public Object apply(Object v) {\n\u003e         return apply(\n\u003e           (Object[]) v);\n\u003e       }\n\u003e     }\n\u003e     , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false)).take(10);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testDateColumn",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"s\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testUnionAllOrderBy",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"name\"\nfrom \"hr\".\"emps\" as e\nunion all\nselect \"name\"\nfrom \"hr\".\"depts\"\norder by 1 desc]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationOnCountDistinctQuery2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", count(distinct \"empid\") as c from (\nselect \"deptno\", \"empid\"\nfrom \"emps\"\ngroup by \"deptno\", \"empid\")\ngroup by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.profile.ProfilerTest",
        "testMethod": "testProfileScott3",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while preparing statement [select * from \"scott\".emp\njoin \"scott\".dept using (deptno)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testCloneGroupBy",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"the_year\", count(*) as c, min(\"the_month\") as m\nfrom \"foodmart2\".\"time_by_day\"\ngroup by \"the_year\"\norder by 1, 2]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testUserDefinedFunctionB",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"adhoc\".my_double(\"deptno\") as p\nfrom \"adhoc\".EMPLOYEES]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testUserDefinedAggregateFunctionWithMultipleParameters",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"adhoc\".my_sum3(\"deptno\",\"name\",\u0027Eric\u0027) as p from \"adhoc\".EMPLOYEES\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testJoinManyWay",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*)\nfrom \"hr\".\"depts\" as d0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.enumerable.EnumerableCorrelateTest",
        "testMethod": "simpleCorrelateDecorrelated",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select empid, name from emps e where exists (select 1 from depts d where d.deptno\u003de.deptno)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs1",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\" from \"emps\" group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSelfJoinDifferentColumns",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e1.\"full_name\"\n  from \"foodmart\".\"employee\" as e1\n  join \"foodmart\".\"employee\" as e2 on e1.\"first_name\" \u003d e2.\"last_name\"\norder by e1.\"last_name\" limit 3]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testFetch",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\" from \"hr\".\"emps\"\nfetch first 2 rows only]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterializationUKFK2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"a\".\"empid\" from \n(select * from \"emps\" where \"empid\" \u003d 1) \"a\"\njoin \"dependents\" using (\"empid\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView6",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where \"deptno\" \u003e 30 and \"salary\" \u003e 3000]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization6",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" \"deptno\" from \"emps\"\njoin \"depts\" using (\"deptno\") where \"empid\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWhereNullable",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\"\nwhere \"commission\" \u003e 800]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testPrePopulated",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\" from \"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationOnCountDistinctQuery4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", count(\"salary\") from (\nselect \"deptno\", \"salary\"\nfrom \"emps\"\ngroup by \"deptno\", \"salary\")\ngroup by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderSorted",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store_id\"\nfrom \"store\"\norder by \"store_id\" limit 3]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByCast",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"customer_id\", \"postal_code\" from \"customer\"\nwhere \"customer_id\" \u003c 5\norder by cast(substring(\"postal_code\" from 3) as integer) desc]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testUnnestArrayScalarArrayWithOrdinal",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select d.\"name\", e.*\nfrom \"hr\".\"depts\" as d,\n UNNEST(d.\"employees\", array[1, 2]) with ordinality as e (ei, d, n, s, c, i, o)\nwhere ei + i \u003e 151]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationNoAggregateFuncs3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\", \"deptno\" from \"emps\" group by \"empid\", \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testTableFieldHasBadType",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"s\".\"badTypes\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testTable",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"foodmart\".\"days\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs5",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"depts\".\"deptno\", sum(\"empid\") + 1 as s\nfrom \"emps\" join \"depts\" using (\"deptno\")\nwhere \"depts\".\"deptno\" \u003e 10 group by \"depts\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testLike",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\"\nwhere \"name\" like \u0027%i__\u0027]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testUserDefinedFunctionInView",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select \"empid\" as EMPLOYEE_ID,\n  \"name\" || \u0027 \u0027 || \"name\" as EMPLOYEE_NAME,\n  \"salary\" as EMPLOYEE_SALARY,\n  POST.MY_INCREMENT(\"empid\", 10) as INCREMENTED_SALARY\nfrom \"hr\".\"emps\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n              final int inp0_ \u003d current.empid;\n              final String inp2_ \u003d current.name;\n              return new Object[] {\n                  inp0_,\n                  inp2_ \u003d\u003d null ? (String) null : org.apache.calcite.runtime.SqlFunctions.concat(org.apache.calcite.runtime.SqlFunctions.concat(inp2_, \" \"), inp2_),\n                  current.salary,\n                  new org.apache.calcite.util.Smalls.MyIncrement().eval(inp0_, 10)};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[1: quidem(sql/sub-query.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/sub-query.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/sub-query.iq\n256,262c256,258\n\u003c +-------+--------+------+\n\u003c | EMPNO | ENAME  | MGR  |\n\u003c +-------+--------+------+\n\u003c |  7782 | CLARK  | 7839 |\n\u003c |  7934 | MILLER | 7782 |\n\u003c +-------+--------+------+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"SELECT empno, ename, mgr FROM \"scott\".emp WHERE 7782 IN (empno, mgr)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n263a260,438\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final Short inp3_ \u003d (Short) current[3];\n\u003e                 if (7782 \u003d\u003d (int) org.apache.calcite.runtime.SqlFunctions.toShort(current[0]) || inp3_ !\u003d null \u0026\u0026 7782 \u003d\u003d (int) inp3_.shortValue()) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[3]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final Short inp3_ \u003d (Short) current[3];\n\u003e                 if (7782 \u003d\u003d (int) org.apache.calcite.runtime.SqlFunctions.toShort(current[0]) || inp3_ !\u003d null \u0026\u0026 7782 \u003d\u003d (int) inp3_.shortValue()) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[3]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n272,277c447,466\n\u003c +---+\n\u003c | C |\n\u003c +---+\n\u003c | 3 |\n\u003c +---+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"SELECT count(*) AS c\n\u003e FROM \"scott\".emp\n\u003e GROUP BY emp.deptno\n\u003e HAVING sum(case when emp.empno in (7369, 7839, 7902) then emp.sal else 0 end)\n\u003e      BETWEEN 5000.0 AND 10000.0\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_0) o).f2;\n\u003e   }\n278a468,860\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal v0 \u003d $L4J$C$new_java_math_BigDecimal_0_;\n\u003e             final short inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(current[0]);\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 inp0_ \u003d\u003d (short)7369 || inp0_ \u003d\u003d (short)7839 || inp0_ \u003d\u003d (short)7902 ? (current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5])) : v0};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_0_ \u003d new java.math.BigDecimal(\n\u003e             \"0\");\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_0 record0;\n\u003e       record0 \u003d new Record3_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_0 apply(Record3_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e       if (inp1_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record3_0 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record3_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp2_ \u003d current[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[2]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_5000_0_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_10000_0_;\n\u003e                 if (inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ge(inp2_, v) \u0026\u0026 (inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp2_, v1))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toLong(((Object[]) inputEnumerator.current())[1]);\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_5000_0_ \u003d new java.math.BigDecimal(\n\u003e               \"5000.0\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_10000_0_ \u003d new java.math.BigDecimal(\n\u003e               \"10000.0\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_0) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal v0 \u003d $L4J$C$new_java_math_BigDecimal_0_;\n\u003e             final short inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(current[0]);\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 inp0_ \u003d\u003d (short)7369 || inp0_ \u003d\u003d (short)7839 || inp0_ \u003d\u003d (short)7902 ? (current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5])) : v0};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_0_ \u003d new java.math.BigDecimal(\n\u003e             \"0\");\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_0 record0;\n\u003e       record0 \u003d new Record3_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_0 apply(Record3_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e       if (inp1_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record3_0 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record3_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp2_ \u003d current[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[2]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_5000_0_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_10000_0_;\n\u003e                 if (inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ge(inp2_, v) \u0026\u0026 (inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp2_, v1))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toLong(((Object[]) inputEnumerator.current())[1]);\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_5000_0_ \u003d new java.math.BigDecimal(\n\u003e               \"5000.0\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_10000_0_ \u003d new java.math.BigDecimal(\n\u003e               \"10000.0\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 51, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(or (stack truncated)\n287,294c869,885\n\u003c +--------+\n\u003c | DEPTNO |\n\u003c +--------+\n\u003c |     10 |\n\u003c |     20 |\n\u003c |     30 |\n\u003c +--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"SELECT emp.deptno\n\u003e FROM \"scott\".emp\n\u003e GROUP BY emp.deptno\n\u003e HAVING max(emp.empno) \u003e (SELECT min(emp.empno) FROM \"scott\".emp)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_1 implements java.io.Serializable {\n\u003e   public short f0;\n\u003e   public Record1_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_1) o).f0;\n\u003e   }\n295a887,1367\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_1 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record2_2 implements java.io.Serializable {\n\u003e   public short f0;\n\u003e   public boolean f1;\n\u003e   public Record2_2() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_2)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_2) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_2) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_2 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       short a0s0;\n\u003e       a0s0 \u003d (short)-32768;\n\u003e       Record1_1 record0;\n\u003e       record0 \u003d new Record1_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_1 apply(Record1_1 acc, Object[] in) {\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       short a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (short)32767;\n\u003e       Record2_2 record0;\n\u003e       record0 \u003d new Record2_2();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_2 apply(Record2_2 acc, Object[] in) {\n\u003e       acc.f1 \u003d true;\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_2 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_2) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Short apply(Record2_2 acc) {\n\u003e       return acc.f1 ? Short.valueOf(acc.f0) : (Short) null;\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_2) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Short v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Short right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final Short inp2_ \u003d (Short) current[2];\n\u003e                 if (inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toShort(current[1]) \u003e inp2_.shortValue()) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return (Byte) ((Object[]) inputEnumerator.current())[0];\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Byte.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_1 implements java.io.Serializable {\n\u003e   public short f0;\n\u003e   public Record1_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_1) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_1 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record2_2 implements java.io.Serializable {\n\u003e   public short f0;\n\u003e   public boolean f1;\n\u003e   public Record2_2() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_2)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_2) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_2) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_2 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       short a0s0;\n\u003e       a0s0 \u003d (short)-32768;\n\u003e       Record1_1 record0;\n\u003e       record0 \u003d new Record1_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_1 apply(Record1_1 acc, Object[] in) {\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       short a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (short)32767;\n\u003e       Record2_2 record0;\n\u003e       record0 \u003d new Record2_2();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_2 apply(Record2_2 acc, Object[] in) {\n\u003e       acc.f1 \u003d true;\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_2 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_2) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Short apply(Record2_2 acc) {\n\u003e       return acc.f1 ? Short.valueOf(acc.f0) : (Short) null;\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_2) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Short v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Short right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final Short inp2_ \u003d (Short) current[2];\n\u003e                 if (inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toShort(current[1]) \u003e inp2_.shortValue()) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return (Byte) ((Object[]) inputEnumerator.current())[0];\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Byte.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.c (stack truncated)\n304,311c1376,1392\n\u003c +--------+------+\n\u003c | DEPTNO | BBBB |\n\u003c +--------+------+\n\u003c |     10 | true |\n\u003c |     20 | true |\n\u003c |     30 | true |\n\u003c +--------+------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"SELECT emp.deptno,\n\u003e   max(emp.empno) \u003e (SELECT min(emp.empno) FROM \"scott\".emp) as bbbb\n\u003e FROM \"scott\".emp\n\u003e GROUP BY emp.deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_1 implements java.io.Serializable {\n\u003e   public short f0;\n\u003e   public Record1_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_1) o).f0;\n\u003e   }\n312a1394,1868\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_1 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record2_2 implements java.io.Serializable {\n\u003e   public short f0;\n\u003e   public boolean f1;\n\u003e   public Record2_2() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_2)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_2) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_2) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_2 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       short a0s0;\n\u003e       a0s0 \u003d (short)-32768;\n\u003e       Record1_1 record0;\n\u003e       record0 \u003d new Record1_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_1 apply(Record1_1 acc, Object[] in) {\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       short a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (short)32767;\n\u003e       Record2_2 record0;\n\u003e       record0 \u003d new Record2_2();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_2 apply(Record2_2 acc, Object[] in) {\n\u003e       acc.f1 \u003d true;\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_2 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_2) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Short apply(Record2_2 acc) {\n\u003e       return acc.f1 ? Short.valueOf(acc.f0) : (Short) null;\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_2) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Short v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Short right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final Short inp2_ \u003d (Short) current[2];\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   inp2_ \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.toShort(current[1]) \u003e inp2_.shortValue())};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_1 implements java.io.Serializable {\n\u003e   public short f0;\n\u003e   public Record1_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_1) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_1 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record2_2 implements java.io.Serializable {\n\u003e   public short f0;\n\u003e   public boolean f1;\n\u003e   public Record2_2() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_2)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_2) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_2) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_2 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       short a0s0;\n\u003e       a0s0 \u003d (short)-32768;\n\u003e       Record1_1 record0;\n\u003e       record0 \u003d new Record1_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_1 apply(Record1_1 acc, Object[] in) {\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       short a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (short)32767;\n\u003e       Record2_2 record0;\n\u003e       record0 \u003d new Record2_2();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_2 apply(Record2_2 acc, Object[] in) {\n\u003e       acc.f1 \u003d true;\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_2 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_2) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Short apply(Record2_2 acc) {\n\u003e       return acc.f1 ? Short.valueOf(acc.f0) : (Short) null;\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_2) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Short v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Short right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final Short inp2_ \u003d (Short) current[2];\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   inp2_ \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.toShort(current[1]) \u003e inp2_.shortValue())};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 79, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.Da (stack truncated)\n319,324c1875,1891\n\u003c +----+\n\u003c | C  |\n\u003c +----+\n\u003c | 14 |\n\u003c +----+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c\n\u003e from \"scott\".emp\n\u003e group by (select deptno from \"scott\".emp where empno \u003d 10)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_3 implements java.io.Serializable {\n\u003e   public boolean f0;\n\u003e   public Byte f1;\n\u003e   public Record2_3() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_3)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_3) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record2_3) o).f1);\n\u003e   }\n325a1893,2403\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_3 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_4 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_4) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_4 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((int) org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]) \u003d\u003d 10) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       boolean a0s0;\n\u003e       Byte a0s1;\n\u003e       a0s0 \u003d false;\n\u003e       a0s1 \u003d (Byte) null;\n\u003e       Record2_3 record0;\n\u003e       record0 \u003d new Record2_3();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_3 apply(Record2_3 acc, Object[] in) {\n\u003e       if (acc.f0) {\n\u003e         throw new IllegalStateException(\n\u003e           \"more than one value in agg SINGLE_VALUE\");\n\u003e       }\n\u003e       acc.f0 \u003d true;\n\u003e       acc.f1 \u003d (Byte) in[7];\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_3 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_3) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Record2_3 acc) {\n\u003e       return acc.f1;\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_3) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(short v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Short v1) {\n\u003e       return apply(\n\u003e         v1.shortValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Byte v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Short left, Byte right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Short) left,\n\u003e         (Byte) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[1];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_4 record0;\n\u003e       record0 \u003d new Record1_4();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_4 apply(Record1_4 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_4 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_4) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_4 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_4) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toLong(((Object[]) inputEnumerator.current())[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_3 implements java.io.Serializable {\n\u003e   public boolean f0;\n\u003e   public Byte f1;\n\u003e   public Record2_3() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_3)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_3) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record2_3) o).f1);\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_3 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_4 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_4) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_4 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((int) org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]) \u003d\u003d 10) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       boolean a0s0;\n\u003e       Byte a0s1;\n\u003e       a0s0 \u003d false;\n\u003e       a0s1 \u003d (Byte) null;\n\u003e       Record2_3 record0;\n\u003e       record0 \u003d new Record2_3();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_3 apply(Record2_3 acc, Object[] in) {\n\u003e       if (acc.f0) {\n\u003e         throw new IllegalStateException(\n\u003e           \"more than one value in agg SINGLE_VALUE\");\n\u003e       }\n\u003e       acc.f0 \u003d true;\n\u003e       acc.f1 \u003d (Byte) in[7];\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_3 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_3) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Record2_3 acc) {\n\u003e       return acc.f1;\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_3) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(short v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Short v1) {\n\u003e       return apply(\n\u003e         v1.shortValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Byte v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Short left, Byte right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object l (stack truncated)\n380,385c2458,2476\n\u003c +---+\n\u003c | C |\n\u003c +---+\n\u003c | 0 |\n\u003c +---+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c\n\u003e from \"scott\".emp\n\u003e where sal + 100 not in (\n\u003e   select comm\n\u003e   from \"scott\".emp)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n386a2478,2953\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_5 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_4 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_4) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_4 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_5 record0;\n\u003e       record0 \u003d new Record2_5();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_5 apply(Record2_5 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if (!(in[6] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]) \u003d\u003d null)) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_5 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_5) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_5 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_5) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[6],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.EnumerableDefaults.thetaJoin(left, child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Predicate2() {\n\u003e     public boolean apply(Object[] left, Object[] right) {\n\u003e       final java.math.BigDecimal inp1_ \u003d left[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(left[1]);\n\u003e       final java.math.BigDecimal inp4_ \u003d right[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(right[0]);\n\u003e       final java.math.BigDecimal v \u003d new java.math.BigDecimal(\n\u003e         100);\n\u003e       return inp1_ !\u003d null \u0026\u0026 inp4_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(org.apache.calcite.runtime.SqlFunctions.plus(inp1_, v), inp4_);\n\u003e     }\n\u003e     public boolean apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , false, true);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e               if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || (current[1] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]) \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_)))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child0.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_4 record0;\n\u003e         record0 \u003d new Record1_4();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_4 apply(Record1_4 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_4 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_4) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Record1_4 acc) {\n\u003e         return acc.f0;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record1_4) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_5 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_4 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_4) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_4 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_5 record0;\n\u003e       record0 \u003d new Record2_5();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record (stack truncated)\n397,402c2964,2982\n\u003c +----+\n\u003c | C  |\n\u003c +----+\n\u003c | 13 |\n\u003c +----+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c\n\u003e from \"scott\".emp\n\u003e where sal + 100 not in (\n\u003e   select comm from \"scott\".emp\n\u003e   where job \u003d \u0027SALESMAN\u0027)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n403a2984,3464\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_5 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_4 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_4) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_4 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp2_ \u003d current[2] \u003d\u003d null ? (String) null : current[2].toString();\n\u003e               if (inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"SALESMAN\")) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_5 record0;\n\u003e       record0 \u003d new Record2_5();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_5 apply(Record2_5 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if (!(in[6] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]) \u003d\u003d null)) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_5 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_5) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_5 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_5) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp2_ \u003d current[2] \u003d\u003d null ? (String) null : current[2].toString();\n\u003e               if (inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"SALESMAN\")) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[6],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.EnumerableDefaults.thetaJoin(left, child0.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Predicate2() {\n\u003e     public boolean apply(Object[] left, Object[] right) {\n\u003e       final java.math.BigDecimal inp1_ \u003d left[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(left[1]);\n\u003e       final java.math.BigDecimal inp4_ \u003d right[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(right[0]);\n\u003e       final java.math.BigDecimal v \u003d new java.math.BigDecimal(\n\u003e         100);\n\u003e       return inp1_ !\u003d null \u0026\u0026 inp4_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(org.apache.calcite.runtime.SqlFunctions.plus(inp1_, v), inp4_);\n\u003e     }\n\u003e     public boolean apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , false, true);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e               if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || (current[1] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]) \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_)))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child1.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_4 record0;\n\u003e         record0 \u003d new Record1_4();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_4 apply(Record1_4 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_4 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_4) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Record1_4 acc) {\n\u003e         return acc.f0;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record1_4) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_5 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_4 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_4) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_4 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apach (stack truncated)\n414,419c3475,3494\n\u003c +----+\n\u003c | C  |\n\u003c +----+\n\u003c | 14 |\n\u003c +----+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c\n\u003e from \"scott\".emp\n\u003e where sal + 100 not in (\n\u003e   select comm\n\u003e   from \"scott\".emp\n\u003e   where comm \u003c 1000)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n420a3496,3959\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_5 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_4 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_4) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_4 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1000_ \u003d new java.math.BigDecimal(\n\u003e             1000);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_5 record0;\n\u003e       record0 \u003d new Record2_5();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_5 apply(Record2_5 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if (!(in[6] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]) \u003d\u003d null)) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_5 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_5) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_5 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_5) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[6],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1000_ \u003d new java.math.BigDecimal(\n\u003e             1000);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.EnumerableDefaults.thetaJoin(left, child0.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Predicate2() {\n\u003e     public boolean apply(Object[] left, Object[] right) {\n\u003e       final java.math.BigDecimal inp1_ \u003d left[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(left[1]);\n\u003e       final java.math.BigDecimal inp4_ \u003d right[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(right[0]);\n\u003e       final java.math.BigDecimal v \u003d new java.math.BigDecimal(\n\u003e         100);\n\u003e       return inp1_ !\u003d null \u0026\u0026 inp4_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(org.apache.calcite.runtime.SqlFunctions.plus(inp1_, v), inp4_);\n\u003e     }\n\u003e     public boolean apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , false, true);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e               if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || (current[1] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]) \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_)))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child1.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_4 record0;\n\u003e         record0 \u003d new Record1_4();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_4 apply(Record1_4 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_4 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_4) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Record1_4 acc) {\n\u003e         return acc.f0;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record1_4) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_5 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_4 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_4) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache (stack truncated)\n472,476c4011,4014\n\u003c +---+---+\n\u003c | A | B |\n\u003c +---+---+\n\u003c +---+---+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"with t (a, b) as (select * from (values (60, \u0027b\u0027)))\n\u003e select * from t where a in (select deptno from \"scott\".dept)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n477a4016,4304\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.EnumerableDefaults.mergeJoin(left, org.apache.calcite.linq4j.Linq4j.asEnumerable(new Object[] {\n\u003e     new Object[] {\n\u003e       60,\n\u003e       \"b\"}}), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(byte left) {\n\u003e       return (int) left;\n\u003e     }\n\u003e     public Object apply(Byte left) {\n\u003e       return apply(\n\u003e         left.byteValue());\n\u003e     }\n\u003e     public Object apply(Object left) {\n\u003e       return apply(\n\u003e         (Byte) left);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(Object[] right) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toInt(right[0]);\n\u003e     }\n\u003e     public Object apply(Object right) {\n\u003e       return apply(\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.EnumerableDefaults.mergeJoin(left, org.apache.calcite.linq4j.Linq4j.asEnumerable(new Object[] {\n\u003e     new Object[] {\n\u003e       60,\n\u003e       \"b\"}}), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(byte left) {\n\u003e       return (int) left;\n\u003e     }\n\u003e     public Object apply(Byte left) {\n\u003e       return apply(\n\u003e         left.byteValue());\n\u003e     }\n\u003e     public Object apply(Object left) {\n\u003e       return apply(\n\u003e         (Byte) left);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(Object[] right) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toInt(right[0]);\n\u003e     }\n\u003e     public Object apply(Object right) {\n\u003e       return apply(\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n490,498c4317,4338\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+---------+------------+----------+\n\u003c | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO | DEPTNO0 | DNAME      | LOC      |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+---------+------------+----------+\n\u003c |  7698 | BLAKE | MANAGER   | 7839 | 1981-01-05 | 2850.00 |      |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 |      |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c |  7839 | KING  | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |\n\u003c |  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 |      |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+---------+------------+----------+\n\u003c (4 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select *\n\u003e from \"scott\".emp as e\n\u003e join \"scott\".dept as d using (deptno)\n\u003e where sal \u003d (\n\u003e   select max(sal)\n\u003e   from \"scott\".emp as e2\n\u003e   join \"scott\".dept as d2 using (deptno)\n\u003e   where d2.deptno \u003d d.deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_6 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_6() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_6)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_6) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_6) o).f1;\n\u003e   }\n499a4340,4812\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_6 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record2_6 record0;\n\u003e       record0 \u003d new Record2_6();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_6 apply(Record2_6 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_6 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_6) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(byte key, Record2_6 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Byte key, Record2_6 acc) {\n\u003e       return apply(\n\u003e         key.byteValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_6) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(_inputEnumerable0, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(v1[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v1[1]), org.apache.calcite.runtime.SqlFunctions.toByte(v1[2]));\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(v1[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v1[5]), (Byte) v1[7]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           left[4],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   current[11],\n\u003e                   current[12],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_6 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_6() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_6)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_6) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_6) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_6 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record2_6 record0;\n\u003e       record0 \u003d n (stack truncated)\n510,518c4823,4843\n\u003c +-------+-------+---------+--------+----------+\n\u003c | EMPNO | ENAME | SAL     | DEPTNO | LOC      |\n\u003c +-------+-------+---------+--------+----------+\n\u003c |  7698 | BLAKE | 2850.00 |     30 | CHICAGO  |\n\u003c |  7788 | SCOTT | 3000.00 |     20 | DALLAS   |\n\u003c |  7839 | KING  | 5000.00 |     10 | NEW YORK |\n\u003c |  7902 | FORD  | 3000.00 |     20 | DALLAS   |\n\u003c +-------+-------+---------+--------+----------+\n\u003c (4 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select empno, ename, sal, e.deptno, loc\n\u003e from \"scott\".emp as e\n\u003e join \"scott\".dept as d using (deptno)\n\u003e where e.sal \u003d (\n\u003e   select max(sal)\n\u003e   from \"scott\".emp as e2\n\u003e   where e2.deptno \u003d e.deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_6 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_6() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_6)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_6) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_6) o).f1;\n\u003e   }\n519a4845,5313\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_6 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((Byte) ((Object[]) inputEnumerator.current())[7] !\u003d null) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record2_6 record0;\n\u003e       record0 \u003d new Record2_6();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_6 apply(Record2_6 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_6 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_6) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_6 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_6) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Byte) v1[0], v1[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v1[1]));\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Byte) v1[3], v1[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v1[2]));\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d left.join(right0, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           left[4],\n\u003e           left[5],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_6 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_6() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_6)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_6) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_6) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_6 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((Byte) ((Object[]) inputEnumerator.current())[7] !\u003d null) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDe (stack truncated)\n530,548c5324,5344\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | DEPTNO0 | DNAME      | LOC      |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |      30 | SALES      | CHICAGO  |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |      20 | RESEARCH   | DALLAS   |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select *\n\u003e from \"scott\".emp as e\n\u003e join \"scott\".dept as d using (deptno)\n\u003e where d.dname \u003d (\n\u003e   select max(dname)\n\u003e   from \"scott\".dept as d2\n\u003e   where d2.deptno \u003d d.deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_7 implements java.io.Serializable {\n\u003e   public String f0;\n\u003e   public boolean f1;\n\u003e   public Record2_7() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_7)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_7) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_7) o).f1;\n\u003e   }\n549a5346,5807\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_7 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       String a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (String) null;\n\u003e       Record2_7 record0;\n\u003e       record0 \u003d new Record2_7();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_7 apply(Record2_7 acc, Object[] in) {\n\u003e       final String inp1_ \u003d in[1] \u003d\u003d null ? (String) null : in[1].toString();\n\u003e       if (inp1_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (String) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_7 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_7) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(byte key, Record2_7 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (String) null};\n\u003e     }\n\u003e     public Object[] apply(Byte key, Record2_7 acc) {\n\u003e       return apply(\n\u003e         key.byteValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_7) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]), v1[1] \u003d\u003d null ? (String) null : v1[1].toString());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]), v1[1] \u003d\u003d null ? (String) null : v1[1].toString());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[2]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[7];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           left[4],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   current[11],\n\u003e                   current[12],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_7 implements java.io.Serializable {\n\u003e   public String f0;\n\u003e   public boolean f1;\n\u003e   public Record2_7() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_7)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_7) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_7) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_7 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       String a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (String) null;\n\u003e       Record2_7 record0;\n\u003e       record0 \u003d new Record2_7();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_7 apply(Record2_7 acc, Object[] in) {\n\u003e       final String inp1_ \u003d in[1] \u003d\u003d null ? (String) null : in[1].toString();\n\u003e       if (inp1_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (String) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_7 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_7) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(byte key, Record2_7 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (String) null};\n\u003e     }\n\u003e     public Object[] apply(Byte key, Record2_7 acc) {\n\u003e       return apply(\n\u003e         key.byteValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_7) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]), v1[1] \u003d\u003d null ? (String) null : v1[1].toString());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]), v1[1] \u003d\u003d null ? (String) null : v1[1].toString());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[2]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[7];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           left[4],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   current[11],\n\u003e                   current[12],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStateme (stack truncated)\n558,563c5816,5821\n\u003c +--------+----------+--------+\n\u003c | DEPTNO | DNAME    | LOC    |\n\u003c +--------+----------+--------+\n\u003c |     20 | RESEARCH | DALLAS |\n\u003c +--------+----------+--------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select *\n\u003e from \"scott\".dept as d\n\u003e where exists (select 1 from \"scott\".emp where empno \u003e d.deptno)\n\u003e and exists (select 0 from \"scott\".emp where deptno \u003d d.deptno and ename \u003d \u0027SMITH\u0027)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n564a5823,6265\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if ((Byte) current[7] !\u003d null \u0026\u0026 (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"SMITH\"))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Byte apply(Byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public Byte apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[0]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable10 \u003d left0.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(byte v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(short v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Short v1) {\n\u003e       return apply(\n\u003e         v1.shortValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Short right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable10.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toShort(current[1]) \u003e (short) org.apache.calcite.runtime.SqlFunctions.toByte(current[0])) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d org.apache.calcite.linq4j.EnumerableDefaults.semiJoin(left, right0, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if ((Byte) current[7] !\u003d null \u0026\u0026 (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"SMITH\"))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Byte apply(Byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public Byte apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     p (stack truncated)\n594,598c6295,6302\n\u003c +-----+\n\u003c | SAL |\n\u003c +-----+\n\u003c +-----+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select sal\n\u003e from \"scott\".emp\n\u003e where empno IN (\n\u003e   select deptno\n\u003e   from \"scott\".dept\n\u003e   where emp.job \u003d dept.dname)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n599a6304,6650\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, inp1_)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(v1[1] \u003d\u003d null ? (String) null : v1[1].toString(), org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]));\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(v1[1] \u003d\u003d null ? (String) null : v1[1].toString(), org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]));\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[4] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[4]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, inp1_)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(v1[1] \u003d\u003d null ? (String) null : v1[1].toString(), org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]));\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(v1[1] \u003d\u003d null ? (String) null : v1[1].toString(), org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]));\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[4] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[4]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at or (stack truncated)\n616,621c6667,6674\n\u003c +--------+----------+--------+\n\u003c | DEPTNO | DNAME    | LOC    |\n\u003c +--------+----------+--------+\n\u003c |     20 | RESEARCH | DALLAS |\n\u003c +--------+----------+--------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select *\n\u003e from \"scott\".dept as d\n\u003e where exists (\n\u003e   select 0 from \"scott\".emp\n\u003e   where deptno \u003d d.deptno\n\u003e   and ename \u003d \u0027SMITH\u0027)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n622a6676,6902\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if ((Byte) current[7] !\u003d null \u0026\u0026 (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"SMITH\"))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.EnumerableDefaults.semiJoin(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[7];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if ((Byte) current[7] !\u003d null \u0026\u0026 (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"SMITH\"))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.EnumerableDefaults.semiJoin(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[7];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n654,662c6934,6939\n\u003c +-------+--------+-------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME  | JOB   | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+--------+-------+------+------------+---------+------+--------+\n\u003c |  7369 | SMITH  | CLERK | 7902 | 1980-12-17 |  800.00 |      |     20 |\n\u003c |  7876 | ADAMS  | CLERK | 7788 | 1987-05-23 | 1100.00 |      |     20 |\n\u003c |  7900 | JAMES  | CLERK | 7698 | 1981-12-03 |  950.00 |      |     30 |\n\u003c |  7934 | MILLER | CLERK | 7782 | 1982-01-23 | 1300.00 |      |     10 |\n\u003c +-------+--------+-------+------+------------+---------+------+--------+\n\u003c (4 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"SELECT *\n\u003e FROM \"scott\".emp\n\u003e WHERE job in (select job from \"scott\".emp ee where ee.hiredate \u003d DATE \u00271980-12-17\u0027)\n\u003e AND EXISTS (select * from \"scott\".emp e where emp.deptno \u003d e.deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n663a6941,7417\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Integer inp4_ \u003d (Integer) ((Object[]) inputEnumerator.current())[4];\n\u003e               if (inp4_ !\u003d null \u0026\u0026 inp4_ \u003d\u003d 4003) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] a0) {\n\u003e       return a0[2] \u003d\u003d null ? (String) null : a0[2].toString();\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public String apply(String key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public String apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (String) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(String v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (String) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v1) {\n\u003e       return v1[2] \u003d\u003d null ? (String) null : v1[2].toString();\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(String left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (String) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[0]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((Byte) ((Object[]) inputEnumerator.current())[7] !\u003d null) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.EnumerableDefaults.semiJoin(left, right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[7];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[7];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Integer inp4_ \u003d (Integer) ((Object[]) inputEnumerator.current())[4];\n\u003e               if (inp4_ !\u003d null \u0026\u0026 inp4_ \u003d\u003d 4003) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] a0) {\n\u003e       return a0[2] \u003d\u003d null ? (String) null : a0[2].toString();\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public String apply(String key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public String apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (String) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   ).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(String v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (String) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v1) {\n\u003e       return v1[2] \u003d\u003d null ? (String) null : v1[2].toString();\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(String left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (String) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[0]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((Byte) ((Object[]) inputEnumerator.current())[7] !\u003d null) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.EnumerableDefaults.semiJoin(left, right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[7];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[7];\n\u003e     }\n\u003e     public Object apply (stack truncated)\n671,684c7425,7441\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK    | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7876 | ADAMS  | CLERK    | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK    | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7934 | MILLER | CLERK    | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c |  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7698 | BLAKE  | MANAGER  | 7839 | 1981-01-05 | 2850.00 |         |     30 |\n\u003c |  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c (9 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"SELECT *\n\u003e FROM \"scott\".emp\n\u003e WHERE job in (select job from \"scott\".emp ee where ee.hiredate \u003d DATE \u00271980-12-17\u0027)\n\u003e OR EXISTS (select * from \"scott\".emp e where emp.deptno \u003d e.deptno + 20)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_4 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_4) o).f0;\n\u003e   }\n685a7443,7947\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_4 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Integer inp4_ \u003d (Integer) ((Object[]) inputEnumerator.current())[4];\n\u003e               if (inp4_ !\u003d null \u0026\u0026 inp4_ \u003d\u003d 4003) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_4 record0;\n\u003e       record0 \u003d new Record1_4();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_4 apply(Record1_4 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_4 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_4) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public long apply(Record1_4 acc) {\n\u003e       return acc.f0;\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record1_4) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(long v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Long v1) {\n\u003e       return apply(\n\u003e         v1.longValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Long) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Long left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Long) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[0]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Integer inp4_ \u003d (Integer) ((Object[]) inputEnumerator.current())[4];\n\u003e               if (inp4_ !\u003d null \u0026\u0026 inp4_ \u003d\u003d 4003) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable00 \u003d child0.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] a0) {\n\u003e       return a0[2] \u003d\u003d null ? (String) null : a0[2].toString();\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public String apply(String key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public String apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (String) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable00.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 inputEnumerator.current() \u003d\u003d null ? (String) null : inputEnumerator.current().toString(),\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Integer inp4_ \u003d (Integer) ((Object[]) inputEnumerator.current())[4];\n\u003e               if (inp4_ !\u003d null \u0026\u0026 inp4_ \u003d\u003d 4003) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable01 \u003d org.apache.calcite.linq4j.EnumerableDefaults.semiJoin(left1, right0, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   ).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[2];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Byte apply(Byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public Byte apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left00 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable01.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Byte current \u003d (Byte) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current,\n\u003e                 current \u003d\u003d null ? (Integer) null : Integer.valueOf((int) current.byteValue())};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right00 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp7_0 \u003d (Byte) current[7];\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7],\n\u003e                 inp7_0 \u003d\u003d null ? (Integer) null : Integer.valueOf((int) inp7_0.byteValue() + 20)};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left00.join(right00, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e  (stack truncated)\n695,702c7957,7976\n\u003c +-------+\n\u003c | EMPNO |\n\u003c +-------+\n\u003c |  7698 |\n\u003c |  7876 |\n\u003c |  7900 |\n\u003c +-------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select empno\n\u003e from \"scott\".emp\n\u003e where (empno in (select empno from \"scott\".emp)\n\u003e     or empno in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n\u003e                  15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))\n\u003e and empno in (7876, 7698, 7900)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n703a7978,8486\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_5 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_8 implements java.io.Serializable {\n\u003e   public boolean f0;\n\u003e   public Record1_8() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_8)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_8) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_8 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final short inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e               if (inp0_ \u003d\u003d (short)7876 || inp0_ \u003d\u003d (short)7698 || inp0_ \u003d\u003d (short)7900) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.linq4j.Linq4j.asEnumerable(new Short[] {\n\u003e     (short)1,\n\u003e     (short)2,\n\u003e     (short)3,\n\u003e     (short)4,\n\u003e     (short)5,\n\u003e     (short)6,\n\u003e     (short)7,\n\u003e     (short)8,\n\u003e     (short)9,\n\u003e     (short)10,\n\u003e     (short)11,\n\u003e     (short)12,\n\u003e     (short)13,\n\u003e     (short)14,\n\u003e     (short)15,\n\u003e     (short)16,\n\u003e     (short)17,\n\u003e     (short)18,\n\u003e     (short)19,\n\u003e     (short)20,\n\u003e     (short)21,\n\u003e     (short)22,\n\u003e     (short)23,\n\u003e     (short)24,\n\u003e     (short)25}).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_5 record0;\n\u003e       record0 \u003d new Record2_5();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_5 apply(Record2_5 acc, short in) {\n\u003e       acc.f0++;\n\u003e       acc.f1++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_5 apply(Record2_5 acc, Short in) {\n\u003e       return apply(\n\u003e         acc,\n\u003e         in.shortValue());\n\u003e     }\n\u003e     public Record2_5 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_5) acc,\n\u003e         (Short) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_5 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_5) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(short v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Short v1) {\n\u003e       return apply(\n\u003e         v1.shortValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Short right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Object inp2_ \u003d current[2];\n\u003e             return new Object[] {\n\u003e                 inp2_,\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 inp2_};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Short[] {\n\u003e     (short)1,\n\u003e     (short)2,\n\u003e     (short)3,\n\u003e     (short)4,\n\u003e     (short)5,\n\u003e     (short)6,\n\u003e     (short)7,\n\u003e     (short)8,\n\u003e     (short)9,\n\u003e     (short)10,\n\u003e     (short)11,\n\u003e     (short)12,\n\u003e     (short)13,\n\u003e     (short)14,\n\u003e     (short)15,\n\u003e     (short)16,\n\u003e     (short)17,\n\u003e     (short)18,\n\u003e     (short)19,\n\u003e     (short)20,\n\u003e     (short)21,\n\u003e     (short)22,\n\u003e     (short)23,\n\u003e     (short)24,\n\u003e     (short)25});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toShort(inputEnumerator.current()),\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d left.join(child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       boolean a0s0;\n\u003e       a0s0 \u003d true;\n\u003e       Record1_8 record0;\n\u003e       record0 \u003d new Record1_8();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_8 apply(Record1_8 acc, Object[] in) {\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toBoolean(in[1]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_8 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_8) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(short key, Record1_8 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Short key, Record1_8 acc) {\n\u003e       return apply(\n\u003e         key.shortValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Short) key,\n\u003e         (Record1_8) acc);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[3]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true).join(right0, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           left[4],\n\u003e           left[5],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 final Boolean inp5_ \u003d (Boolean) current[5];\n\u003e                 final boolean v0 \u003d inp1_ \u003d\u003d 0L;\n\u003e                 if ((Boolean) current[7] !\u003d null || (v0 || (inp5_ !\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u003e\u003d inp1_)) \u0026\u0026 (!v0 \u0026\u0026 inp5_ !\u003d null)) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return short.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int  (stack truncated)\n713,720c8496,8515\n\u003c +-------+\n\u003c | EMPNO |\n\u003c +-------+\n\u003c |  7698 |\n\u003c |  7876 |\n\u003c |  7900 |\n\u003c +-------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select empno\n\u003e from \"scott\".emp\n\u003e where not (empno not in (select empno from \"scott\".emp)\n\u003e   and empno not in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n\u003e                     15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))\n\u003e and empno in (7876, 7698, 7900)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n721a8517,9024\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_5 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record1_8 implements java.io.Serializable {\n\u003e   public boolean f0;\n\u003e   public Record1_8() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_8)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_8) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_8 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final short inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e               if (inp0_ \u003d\u003d (short)7876 || inp0_ \u003d\u003d (short)7698 || inp0_ \u003d\u003d (short)7900) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.linq4j.Linq4j.asEnumerable(new Short[] {\n\u003e     (short)1,\n\u003e     (short)2,\n\u003e     (short)3,\n\u003e     (short)4,\n\u003e     (short)5,\n\u003e     (short)6,\n\u003e     (short)7,\n\u003e     (short)8,\n\u003e     (short)9,\n\u003e     (short)10,\n\u003e     (short)11,\n\u003e     (short)12,\n\u003e     (short)13,\n\u003e     (short)14,\n\u003e     (short)15,\n\u003e     (short)16,\n\u003e     (short)17,\n\u003e     (short)18,\n\u003e     (short)19,\n\u003e     (short)20,\n\u003e     (short)21,\n\u003e     (short)22,\n\u003e     (short)23,\n\u003e     (short)24,\n\u003e     (short)25}).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_5 record0;\n\u003e       record0 \u003d new Record2_5();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_5 apply(Record2_5 acc, short in) {\n\u003e       acc.f0++;\n\u003e       acc.f1++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_5 apply(Record2_5 acc, Short in) {\n\u003e       return apply(\n\u003e         acc,\n\u003e         in.shortValue());\n\u003e     }\n\u003e     public Record2_5 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_5) acc,\n\u003e         (Short) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_5 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_5) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(short v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Short v1) {\n\u003e       return apply(\n\u003e         v1.shortValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Short right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Object inp2_ \u003d current[2];\n\u003e             return new Object[] {\n\u003e                 inp2_,\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 inp2_};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Short[] {\n\u003e     (short)1,\n\u003e     (short)2,\n\u003e     (short)3,\n\u003e     (short)4,\n\u003e     (short)5,\n\u003e     (short)6,\n\u003e     (short)7,\n\u003e     (short)8,\n\u003e     (short)9,\n\u003e     (short)10,\n\u003e     (short)11,\n\u003e     (short)12,\n\u003e     (short)13,\n\u003e     (short)14,\n\u003e     (short)15,\n\u003e     (short)16,\n\u003e     (short)17,\n\u003e     (short)18,\n\u003e     (short)19,\n\u003e     (short)20,\n\u003e     (short)21,\n\u003e     (short)22,\n\u003e     (short)23,\n\u003e     (short)24,\n\u003e     (short)25});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toShort(inputEnumerator.current()),\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d left.join(child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       boolean a0s0;\n\u003e       a0s0 \u003d true;\n\u003e       Record1_8 record0;\n\u003e       record0 \u003d new Record1_8();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_8 apply(Record1_8 acc, Object[] in) {\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toBoolean(in[1]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_8 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_8) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(short key, Record1_8 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Short key, Record1_8 acc) {\n\u003e       return apply(\n\u003e         key.shortValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Short) key,\n\u003e         (Record1_8) acc);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[3]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true).join(right0, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           left[4],\n\u003e           left[5],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 final Boolean inp5_ \u003d (Boolean) current[5];\n\u003e                 final boolean v0 \u003d inp1_ \u003d\u003d 0L;\n\u003e                 if ((Boolean) current[7] !\u003d null || (v0 || (inp5_ !\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u003e\u003d inp1_)) \u0026\u0026 (!v0 \u0026\u0026 inp5_ !\u003d null)) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return short.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_5 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_5) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_5) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCod (stack truncated)\n732,739c9035,9054\n\u003c +-------+\n\u003c | EMPNO |\n\u003c +-------+\n\u003c |  7698 |\n\u003c |  7876 |\n\u003c |  7900 |\n\u003c +-------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select empno\n\u003e from \"scott\".emp\n\u003e where (empno \u003d 12345\n\u003e   or empno in (select empno from \"scott\".emp)\n\u003e   or not empno in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n\u003e                    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))\n\u003e and empno in (7876, 7698, 7900)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_8 implements java.io.Serializable {\n\u003e   public boolean f0;\n\u003e   public Record1_8() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_8)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_8) o).f0;\n\u003e   }\n740a9056,9545\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_8 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final short inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e               if (inp0_ \u003d\u003d (short)7876 || inp0_ \u003d\u003d (short)7698 || inp0_ \u003d\u003d (short)7900) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object inp0_ \u003d ((Object[]) inputEnumerator.current())[0];\n\u003e             return new Object[] {\n\u003e                 inp0_,\n\u003e                 inp0_};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Short[] {\n\u003e     (short)1,\n\u003e     (short)2,\n\u003e     (short)3,\n\u003e     (short)4,\n\u003e     (short)5,\n\u003e     (short)6,\n\u003e     (short)7,\n\u003e     (short)8,\n\u003e     (short)9,\n\u003e     (short)10,\n\u003e     (short)11,\n\u003e     (short)12,\n\u003e     (short)13,\n\u003e     (short)14,\n\u003e     (short)15,\n\u003e     (short)16,\n\u003e     (short)17,\n\u003e     (short)18,\n\u003e     (short)19,\n\u003e     (short)20,\n\u003e     (short)21,\n\u003e     (short)22,\n\u003e     (short)23,\n\u003e     (short)24,\n\u003e     (short)25});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toShort(inputEnumerator.current()),\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       boolean a0s0;\n\u003e       a0s0 \u003d true;\n\u003e       Record1_8 record0;\n\u003e       record0 \u003d new Record1_8();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_8 apply(Record1_8 acc, Object[] in) {\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toBoolean(in[1]));\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_8 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_8) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(short key, Record1_8 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Short key, Record1_8 acc) {\n\u003e       return apply(\n\u003e         key.shortValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Short) key,\n\u003e         (Record1_8) acc);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[1]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true).join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 if ((int) org.apache.calcite.runtime.SqlFunctions.toShort(current[0]) \u003d\u003d 12345 || (Boolean) current[5] !\u003d null || !org.apache.calcite.runtime.SqlFunctions.isTrue((Boolean) current[3])) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return short.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_8 implements java.io.Serializable {\n\u003e   public boolean f0;\n\u003e   public Record1_8() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_8)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_8) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_8 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final short inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e               if (inp0_ \u003d\u003d (short)7876 || inp0_ \u003d\u003d (short)7698 || inp0_ \u003d\u003d (short)7900) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object inp0_ \u003d ((Object[]) inputEnumerator.current())[0];\n\u003e             return new Object[] {\n\u003e                 inp0_,\n\u003e                 inp0_};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Short[] {\n\u003e     (short)1,\n\u003e     (short)2,\n\u003e     (short)3,\n\u003e     (short)4,\n\u003e     (short)5,\n\u003e     (short)6,\n\u003e     (short)7,\n\u003e     (short)8,\n\u003e     (short)9,\n\u003e     (short)10,\n\u003e     (short)11,\n\u003e     (short)12,\n\u003e     (short)13,\n\u003e     (short)14,\n\u003e     (short)15,\n\u003e     (short)16,\n\u003e     (short)17,\n\u003e     (short)18,\n\u003e     (short)19,\n\u003e     (short)20,\n\u003e     (short)21,\n\u003e     (short)22,\n\u003e     (short)23,\n\u003e     (short)24,\n\u003e     (short)25});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toShort(inputEnumerator.current()),\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       boolean a0s0;\n\u003e       a0s0 \u003d true;\n\u003e       Record1_8 record0;\n\u003e       record0 \u003d new Record1_8();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_8 apply(Record1_8 acc, Object[] in) {\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.les (stack truncated)\n749,756c9554,9560\n\u003c +-------+\n\u003c | EMPNO |\n\u003c +-------+\n\u003c |  7698 |\n\u003c |  7876 |\n\u003c |  7900 |\n\u003c +-------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select empno\n\u003e from \"scott\".emp\n\u003e where (empno in (select empno from \"scott\".emp)\n\u003e       and empno in (7876, 7698, 7900))\n\u003e and empno in (7876, 7698, 7900)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n757a9562,9904\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final short inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e               if (inp0_ \u003d\u003d (short)7876 || inp0_ \u003d\u003d (short)7698 || inp0_ \u003d\u003d (short)7900) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.EnumerableDefaults.mergeJoin(left, right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(short left) {\n\u003e       return left;\n\u003e     }\n\u003e     public Object apply(Short left) {\n\u003e       return apply(\n\u003e         left.shortValue());\n\u003e     }\n\u003e     public Object apply(Object left) {\n\u003e       return apply(\n\u003e         (Short) left);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(short right) {\n\u003e       return right;\n\u003e     }\n\u003e     public Object apply(Short right) {\n\u003e       return apply(\n\u003e         right.shortValue());\n\u003e     }\n\u003e     public Object apply(Object right) {\n\u003e       return apply(\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Short left, Short right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Short) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return short.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final short inp0_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e               if (inp0_ \u003d\u003d (short)7876 || inp0_ \u003d\u003d (short)7698 || inp0_ \u003d\u003d (short)7900) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.EnumerableDefaults.mergeJoin(left, right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(short left) {\n\u003e       return left;\n\u003e     }\n\u003e     public Object apply(Short left) {\n\u003e       return apply(\n\u003e         left.shortValue());\n\u003e     }\n\u003e     public Object apply(Object left) {\n\u003e       return apply(\n\u003e         (Short) left);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(short right) {\n\u003e       return right;\n\u003e     }\n\u003e     public Object apply(Short right) {\n\u003e       return apply(\n\u003e         right.shortValue());\n\u003e     }\n\u003e     public Object apply(Object right) {\n\u003e       return apply(\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Short left, Short right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Short) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return short.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testUnionWithSameColumnNames",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\", \"deptno\" from \"hr\".\"depts\" union select \"deptno\", \"empid\" from \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggDenseRankValuesDesc",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select  \"deptno\",\n dense_rank() over (order by \"deptno\" desc) as r\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" from \"emps\"\njoin \"depts\" using (\"deptno\") where \"depts\".\"deptno\" \u003e 20\ngroup by \"empid\", \"depts\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testTrim",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select trim(\"lname\") as \"lname\" from \"customer\" where \"lname\" \u003d \u0027Nowmer\u0027]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", count(*) as c, sum(\"empid\") as s\nfrom \"emps\" group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testWhere2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"foodmart\".\"days\"\nwhere not (lower(\"week_day\") \u003d \u0027wednesday\u0027)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testJdbcDate",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from (\n  select 1 from \"foodmart\".\"employee\" as e1\n  where \"position_title\" \u003d \u0027VP Country Manager\u0027\n  and \"birth_date\" \u003c DATE \u00271950-01-01\u0027\n  and \"gender\" \u003d \u0027F\u0027)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs9",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to year), sum(\"empid\") as s\nfrom \"emps\" group by floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to year)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization10",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\"\nfrom \"depts\"\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")\njoin \"emps\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\nwhere \"depts\".\"deptno\" \u003e 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs19",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" + 10, count(*) + 1 as c\nfrom \"emps\" group by \"empid\" + 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModelWithModifiableView",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"name\" from \"adhoc\".V order by \"name\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByCase",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"time_by_day\".\"the_year\" as \"c0\" from \"time_by_day\" as \"time_by_day\" group by \"time_by_day\".\"the_year\" order by CASE WHEN \"time_by_day\".\"the_year\" IS NULL THEN 1 ELSE 0 END, \"time_by_day\".\"the_year\" ASC]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testExtractFromInterval",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select extract(month from interval \u00272-3\u0027 year to month) as c \nfrom \"foodmart\".\"employee\" where \"employee_id\"\u003d1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs17",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select floor(cast(\"ts\" as timestamp) to hour), sum(\"eventid\") as s\nfrom \"events\" group by floor(cast(\"ts\" as timestamp) to hour)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByNulls",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store_id\", \"grocery_sqft\"\nfrom \"foodmart\".\"store\"\nwhere \"store_id\" \u003c 3 order by 2 desc nulls first]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggRankValues",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select  \"deptno\",\n rank() over (order by \"deptno\") as r\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testJoinPlan2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [SELECT v1.deptno, v2.deptno\nFROM Scott.dept v1 LEFT JOIN Scott.emp v2 ON v1.deptno \u003d v2.deptno\nWHERE v2.job LIKE \u0027PRESIDENT\u0027]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testIntersectMismatchedVarchar",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from (\n  select \"lname\" from \"customer\" as c\n  intersect\n  select \"brand_name\" from \"product\" as p)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testGroupByNull",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\", \"commission\", sum(\"salary\") s\nfrom \"hr\".\"emps\"\ngroup by \"deptno\", \"commission\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView7",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\", \"empid\" + 2 from \"emps\" where \"deptno\" - 10 \u003d 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testTileAlgorithm3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select distinct t.\"the_year\", t.\"quarter\"\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"foodmart\".\"time_by_day\" as t using (\"time_id\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testCustomBoxedSalarCalc",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"value\"*2 \"value\" from \"s\".\"primesCustomBoxed\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testArray2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\", cardinality(\"employees\") as c\nfrom \"hr\".\"depts\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testJoinGroupByOrderBy",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*), c.\"state_province\",\n  sum(s.\"unit_sales\") as s\nfrom \"foodmart\".\"sales_fact_1997\" as s\n  join \"foodmart\".\"customer\" as c\n  on s.\"customer_id\" \u003d c.\"customer_id\"\ngroup by c.\"state_province\"\norder by c.\"state_province\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testTileAlgorithm2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select distinct t.\"the_year\", t.\"quarter\"\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"foodmart\".\"time_by_day\" as t using (\"time_id\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs10",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to year), sum(\"empid\") + 1 as s\nfrom \"emps\" group by floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to year)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs10",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"emps\".\"deptno\", count(distinct \"salary\") as s\nfrom \"emps\"\njoin \"dependents\" on (\"emps\".\"empid\" \u003d \"dependents\".\"empid\")\ngroup by \"emps\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs12",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to month), sum(\"empid\") as s\nfrom \"emps\" group by floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to month)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testCustomSchemaDirectConnection",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select * from \"adhoc\".ELVIS where \"deptno\" \u003d 10\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"adhoc\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              while (inputEnumerator.moveNext()) {\n                if (((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).deptno \u003d\u003d 10) {\n                  return true;\n                }\n              }\n              return false;\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n              return new Object[] {\n                  current.empid,\n                  current.deptno,\n                  current.name,\n                  current.salary,\n                  current.commission};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testUnionAll",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select * from \"emps\" where \"empid\" \u003e 300\nunion all select * from \"emps\" where \"empid\" \u003c 200]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[3: quidem(sql/misc.iq)]",
        "failureName": "java.lang.reflect.InvocationTargetException",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testJavaBoolean",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from \"s\".\"everyTypes\"\nwhere \"primitiveBoolean\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"depts\".\"deptno\", count(*) as c, sum(\"empid\") as s\nfrom \"emps\" join \"depts\" using (\"deptno\")\ngroup by \"depts\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ExceptionMessageTest",
        "testMethod": "testNonSqlException",
        "failureName": "java.lang.AssertionError",
        "detail": "\nExpected: \"Error while executing SQL \\\"select * from \\\"badEntries\\\"\\\": Can\u0027t iterate over badEntries\"\n     but: was \"Error while executing SQL \\\"select * from \\\"badEntries\\\"\\\": Error while compiling generated Java code:\\norg.apache.calcite.DataContext root;\\n\\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\\n  root \u003d root0;\\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ExceptionMessageTest.TestSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\\\"test\\\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).badEntries);\\n}\\n\\n\\npublic Class getElementType() {\\n  return org.apache.calcite.runtime.FlatLists.ComparableList.class;\\n}\\n\\n\\n\"",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView6",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where \"deptno\" - 10 \u003d 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testTableModifyInsert",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"DELETE FROM \"foodmart\".\"expense_fact\" WHERE \"store_id\"\u003d666\n\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object value;\n              value \u003d resultSet.getLong(1);\n              if (resultSet.wasNull()) {\n                value \u003d null;\n              }\n              return value;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"foodmart\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"DELETE FROM \\\"foodmart\\\".\\\"expense_fact\\\"\\nWHERE \\\"store_id\\\" \u003d 666\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return long.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testGroupByNoAggregates",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\"\nfrom \"hr\".\"emps\"\ngroup by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testGroupByNoAggregatesAllColumns",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\"\nfrom \"hr\".\"emps\"\ngroup by \"deptno\", \"empid\", \"name\", \"salary\", \"commission\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testFunOracle",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select nvl(\"commission\", -99) as c from \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggRankValuesDesc",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select  \"deptno\",\n rank() over (order by \"deptno\" desc) as r\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOnConnectionClose",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select * from \"emps\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n}\n\n\npublic Class getElementType() {\n  return org.apache.calcite.test.JdbcTest.Employee.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testGetDate",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"select min(\"date\") mindate from \"foodmart\".\"currency\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object value;\n              value \u003d org.apache.calcite.runtime.SqlFunctions.toIntOptional(resultSet.getDate(1));\n              if (resultSet.wasNull()) {\n                value \u003d null;\n              }\n              return value;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"foodmart\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT MIN(\\\"date\\\") AS \\\"MINDATE\\\"\\nFROM \\\"foodmart\\\".\\\"currency\\\"\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return java.lang.Integer.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterializationUKFK8",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"emps\".\"empid\" from \"emps\"\njoin \"dependents\" using (\"empid\")\nwhere \"emps\".\"empid\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testIsNotDistinctInFilter",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select *\n  from \"foodmart\".\"employee\" as e1\n  where e1.\"last_name\" is distinct from e1.\"last_name\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAgg",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\",\n \"empid\",\nsum(\"salary\" + \"empid\") over w as s,\n 5 as five,\n min(\"salary\") over w as m,\n count(*) over w as c\nfrom \"hr\".\"emps\"\nwindow w as (partition by \"deptno\" order by \"empid\" rows 1 preceding)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testExcept",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\", \"name\" from \"hr\".\"emps\" where \"deptno\"\u003d10\nexcept\nselect \"empid\", \"name\" from \"hr\".\"emps\" where \"empid\"\u003e\u003d150]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testUserDefinedAggregateFunctionWithFilter",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select deptno, \"adhoc\".my_sum(deptno) as p\nfrom scott.emp\ngroup by deptno\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSelfJoinCount",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from \"foodmart\".\"store\" as p1 join \"foodmart\".\"store\" as p2 using (\"store_id\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testGroupingSets",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\", count(*) as c, sum(\"salary\") as s\nfrom \"hr\".\"emps\"\ngroup by grouping sets((\"deptno\"), ())]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testCartesianJoinWithoutKeyPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select empno, ename, d.deptno, dname \nfrom scott.emp e,scott.dept d]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testAggregateFunctions",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select min(\"primitiveBoolean\") as c\nfrom \"s\".\"everyTypes\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs14",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to hour), sum(\"empid\") as s\nfrom \"emps\" group by floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to hour)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggDenseRankValues",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select  \"deptno\",\n dense_rank() over (order by \"deptno\") as r\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MultiJdbcSchemaJoinTest",
        "testMethod": "testEnumerableWithJdbcJoin",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select t.id, t.field1 from \"hr\".\"emps\" e join db.table1 t on e.\"empid\" \u003d t.id\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            return inputEnumerator.moveNext();\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            return ((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid;\n          }\n\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"DB\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"TABLE1\\\"\", new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object[] values \u003d new Object[2];\n              values[0] \u003d resultSet.getInt(1);\n              if (resultSet.wasNull()) {\n                values[0] \u003d null;\n              }\n              values[1] \u003d resultSet.getObject(2);\n              return values;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ).join(right, new org.apache.calcite.linq4j.function.Function1() {\n    public int apply(Object[] v1) {\n      return org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]);\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Object[]) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function1() {\n    public int apply(int v1) {\n      return v1;\n    }\n    public Object apply(Integer v1) {\n      return apply(\n        v1.intValue());\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Integer) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function2() {\n    public Object[] apply(Object[] left, Integer right) {\n      return new Object[] {\n          left[0],\n          left[1],\n          right};\n    }\n    public Object[] apply(Object left, Object right) {\n      return apply(\n        (Object[]) left,\n        (Integer) right);\n    }\n  }\n  , null, false, false);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              return new Object[] {\n                  current[0],\n                  current[1]};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testDialect",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from \"foodmart\".\"employee\" as e1\n  where \"first_name\" \u003d \u0027abcde\u0027\n  and \"gender\" \u003d \u0027F\u0027]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization9",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\"\nfrom \"depts\"\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")\njoin \"locations\" on (\"locations\".\"name\" \u003d \"dependents\".\"name\")\njoin \"emps\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationNoAggregateFuncs8",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\" from \"emps\" group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testGetTimestampObject",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"select \"hire_date\" from \"foodmart\".\"employee\" where \"employee_id\" \u003d 1\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object value;\n              value \u003d org.apache.calcite.runtime.SqlFunctions.toLongOptional(resultSet.getTimestamp(1));\n              if (resultSet.wasNull()) {\n                value \u003d null;\n              }\n              return value;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"foodmart\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT \\\"hire_date\\\"\\nFROM \\\"foodmart\\\".\\\"employee\\\"\\nWHERE \\\"employee_id\\\" \u003d 1\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return java.lang.Long.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testJanino169",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"time_id\" from \"foodmart\".\"time_by_day\" as \"t\"\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testJoinCartesianCount",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [SELECT count(*) as c\nFROM Scott.dept, Scott.emp]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testNotIn",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\"\nwhere \"name\" not in (\u0027a\u0027, \u0027b\u0027) or \"name\" is null]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testUnnestArrayScalarArray",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select d.\"name\", e.*\nfrom \"hr\".\"depts\" as d,\n UNNEST(d.\"employees\", array[1, 2]) as e]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testJoinCartesian",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [SELECT *\nFROM Scott.dept, Scott.emp]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testFilterUnionPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from (\n  select * from \"sales_fact_1997\"\n  union all\n  select * from \"sales_fact_1998\")\nwhere \"product_id\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterializationUKFK9",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"emps\".\"empid\", \"dependents\".\"empid\", \"emps\".\"deptno\"\nfrom \"emps\"\njoin \"dependents\" using (\"empid\")join \"depts\" \"a\" on (\"emps\".\"deptno\"\u003d\"a\".\"deptno\")\nwhere \"emps\".\"name\" \u003d \u0027Bill\u0027]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testReuseExpressionWhenNullChecking",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select upper((case when \"empid\"\u003e\"deptno\"*10 then \u0027y\u0027 else null end)) T from \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testResultSetMetaData",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select \"empid\", \"deptno\" as x, 1 as y\nfrom \"hr\".\"emps\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n              return new Object[] {\n                  current.empid,\n                  current.deptno,\n                  1};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testOneLatticeOneMV",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select * from \"foodmart\".\"sales_fact_1997\" where \"product_id\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testSemiStrict",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select\n  \"adhoc\".null4(upper(\"name\")) as p\n from \"adhoc\".EMPLOYEES]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationOnCountDistinctQuery3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", count(distinct \"salary\") from (\nselect \"deptno\", \"salary\"\nfrom \"emps\"\ngroup by \"deptno\", \"salary\")\ngroup by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" from \"emps\"\njoin \"depts\" using (\"deptno\") where \"depts\".\"deptno\" \u003e 20\ngroup by \"empid\", \"depts\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testWhere",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"foodmart\".\"days\" where \"day\" \u003c 3]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.profile.ProfilerTest",
        "testMethod": "testProfileScott",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while preparing statement [select * from \"scott\".emp\njoin \"scott\".dept using (deptno)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testGroupByEmptyWithPrelude",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select count(distinct \"quarter\") as c\nfrom \"foodmart\".\"sales_fact_1997\"\njoin \"foodmart\".\"time_by_day\" using (\"time_id\")\ngroup by \"the_year\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testPlan3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store\".\"store_country\" as \"c0\", sum(\"inventory_fact_1997\".\"supply_time\") as \"m0\" from \"store\" as \"store\", \"inventory_fact_1997\" as \"inventory_fact_1997\" where \"inventory_fact_1997\".\"store_id\" \u003d \"store\".\"store_id\" group by \"store\".\"store_country\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs18",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\"*\"deptno\", sum(\"empid\") as s\nfrom \"emps\" group by \"empid\"*\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testJoinCorrelatedScalarSubQuery",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.employee_id, d.department_id  from employee e, department d  where e.department_id \u003d d.department_id  and e.salary \u003e (select avg(e2.salary)                  from employee e2                  where e2.store_id \u003d e.store_id)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSelfJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from (\n  select 1 from \"foodmart\".\"employee\" as e1\n  join \"foodmart\".\"employee\" as e2 using (\"position_title\"))]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testExtractMonthFromTimestamp",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select extract(month from \"birth_date\") as c \nfrom \"foodmart\".\"employee\" where \"employee_id\"\u003d1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView5",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\", \"empid\" + 1 as e\nfrom \"emps\" where \"deptno\" - 10 \u003d 2]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testJdbcTimestamp",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from (\n  select 1 from \"foodmart\".\"employee\" as e1\n  where \"hire_date\" \u003c TIMESTAMP \u00271996-06-05 00:00:00\u0027\n  and \"gender\" \u003d \u0027F\u0027)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs6",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"depts\".\"deptno\" from \"depts\"\njoin \"emps\" using (\"deptno\") where \"emps\".\"empid\" \u003e 15\ngroup by \"depts\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", \"empid\", sum(\"empid\") as s, count(*) as c\nfrom \"emps\" group by \"empid\", \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testIntersect",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select substring(\"name\" from 1 for 1) as x\nfrom \"hr\".\"emps\" as e\nintersect\nselect substring(\"name\" from 1 for 1) as y\nfrom \"hr\".\"depts\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testPrimitiveColumnsWithNullValues",
        "failureName": "java.sql.SQLException",
        "detail": "Error while preparing statement [select * from t1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationNoAggregateFuncs7",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\" from \"emps\" where \"deptno\" \u003c 10 group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[12: quidem(sql/sequence.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/sequence.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/sequence.iq\n68,75c68,70\n\u003c +----------+------------+-----------+--------------+---------+---------+-----------+----------+------------------------+---------------+\n\u003c | tableCat | tableSchem | tableName | tableType    | remarks | typeCat | typeSchem | typeName | selfReferencingColName | refGeneration |\n\u003c +----------+------------+-----------+--------------+---------+---------+-----------+----------+------------------------+---------------+\n\u003c |          | metadata   | COLUMNS   | SYSTEM TABLE |         |         |           |          |                        |               |\n\u003c |          | metadata   | TABLES    | SYSTEM TABLE |         |         |           |          |                        |               |\n\u003c |          | s          | my_seq    | SEQUENCE     |         |         |           |          |                        |               |\n\u003c +----------+------------+-----------+--------------+---------+---------+-----------+----------+------------------------+---------------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"metadata\".tables\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n76a72,180\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"metadata\"), org.apache.calcite.avatica.MetaImpl.MetaTable.class, \"TABLES\").asEnumerable();\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return org.apache.calcite.avatica.MetaImpl.MetaTable.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"metadata\"), org.apache.calcite.avatica.MetaImpl.MetaTable.class, \"TABLES\").asEnumerable();\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return org.apache.calcite.avatica.MetaImpl.MetaTable.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testInnerJoinValues",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select empno, desc from sales.emps,\n  (SELECT * FROM (VALUES (10, \u0027SameName\u0027)) AS t (id, desc)) as sn\nwhere emps.deptno \u003d sn.id and sn.desc \u003d \u0027SameName\u0027 group by empno, desc]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testJoin3TablesPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select  empno, ename, dname, grade \nfrom scott.emp e inner join scott.dept d \non e.deptno \u003d d.deptno \ninner join scott.salgrade s \non e.sal \u003e s.losal and e.sal \u003c s.hisal]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggConstantMultipleConstants",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\", sum(1) over (partition by \"deptno\"\n  order by \"empid\" rows between unbounded preceding and current row) as a,\n sum(-1) over (partition by \"deptno\"\n  order by \"empid\" rows between unbounded preceding and current row) as b\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testMultiMaterializationMultiUsage",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select *\nfrom (select * from \"emps\" where \"empid\" \u003c 300)\njoin (select \"deptno\", count(*) as c from \"emps\" group by \"deptno\") using (\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateRollUp",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select count(*) + 1 as c, \"deptno\" from \"emps\" group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testUnnestMultiset2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select*from unnest(\n select \"employees\" from \"hr\".\"depts\"\n where \"deptno\" \u003d 10)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModelWithInvalidModifiableView",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"name\" from \"adhoc\".V order by \"name\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testFloorDate",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select floor(timestamp \u00272011-9-14 19:27:23\u0027 to month) as c \nfrom \"foodmart\".\"employee\" limit 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testUnion",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\", \"name\" from \"hr\".\"emps\" where \"deptno\"\u003d10\nunion\nselect \"empid\", \"name\" from \"hr\".\"emps\" where \"empid\"\u003e\u003d150]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testWhereLike",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select *\nfrom \"hr\".\"emps\" as e\nwhere e.\"empid\" \u003c 120 or e.\"name\" like \u0027S%\u0027]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testUpdateBind",
        "failureName": "java.sql.SQLException",
        "detail": "Error while preparing statement [select * from t2]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testLatticeWithPreDefinedTilesRollUp",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select t.\"the_year\",\n  count(*) as c,\n  min(\"quarter\") as q,\n  sum(\"unit_sales\") * 10 as us\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"foodmart\".\"time_by_day\" as t using (\"time_id\")\ngroup by t.\"the_year\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testVarcharEquals",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"lname\" from \"customer\" where \"lname\" \u003d \u0027Nowmer\u0027]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView8",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\", \"empid\" from \"emps\" where \"deptno\" \u003e 30]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testHavingNot2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select 1\nfrom \"store\"\ngroup by \"store\".\"store_street_address\"\nhaving NOT (sum(\"store\".\"grocery_sqft\") \u003c 20000)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testExistsCorrelated",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select*from \"hr\".\"emps\" where exists (\n select 1 from \"hr\".\"depts\"\n where \"emps\".\"deptno\"\u003d\"depts\".\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MultiJdbcSchemaJoinTest",
        "testMethod": "test",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select table1.id, table1.field1 from db1.table1 join db2.table2 on table1.id \u003d table2.id\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"DB2\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"TABLE2\\\"\", new org.apache.calcite.linq4j.function.Function1() {\n            public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n              return new org.apache.calcite.linq4j.function.Function0() {\n                  public Object apply() {\n                    try {\n                      final Object[] values \u003d new Object[2];\n                      values[0] \u003d resultSet.getObject(1);\n                      values[1] \u003d resultSet.getObject(2);\n                      return values;\n                    } catch (java.sql.SQLException e) {\n                      throw new RuntimeException(\n                        e);\n                    }\n                  }\n                }\n              ;\n            }\n            public Object apply(final Object resultSet) {\n              return apply(\n                (java.sql.ResultSet) resultSet);\n            }\n          }\n          ).enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            return inputEnumerator.moveNext();\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            final Object[] current \u003d (Object[]) inputEnumerator.current();\n            return current[0] \u003d\u003d null ? (String) null : current[0].toString();\n          }\n\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"DB1\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"TABLE1\\\"\", new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object[] values \u003d new Object[2];\n              values[0] \u003d resultSet.getObject(1);\n              values[1] \u003d resultSet.getObject(2);\n              return values;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ).join(right, new org.apache.calcite.linq4j.function.Function1() {\n    public String apply(Object[] v1) {\n      return v1[0] \u003d\u003d null ? (String) null : v1[0].toString();\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Object[]) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function1() {\n    public String apply(String v1) {\n      return v1;\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (String) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function2() {\n    public Object[] apply(Object[] left, String right) {\n      return new Object[] {\n          left[0],\n          left[1],\n          right};\n    }\n    public Object[] apply(Object left, Object right) {\n      return apply(\n        (Object[]) left,\n        (String) right);\n    }\n  }\n  , null, false, false);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              return new Object[] {\n                  current[0],\n                  current[1]};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationNoAggregateFuncs6",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\" from \"emps\" where \"deptno\" \u003e 10 group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggScalarNonNullPhysTypePlusOne",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select 1+min(\"salary\"+1) over w as m\nfrom \"hr\".\"emps\"\nwindow w as (order by \"salary\"+1 rows 1 preceding)\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testReduceCompositeCountNotNullable",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select\n count(\"deptno\", \"commission\", \"commission\" + 1) as cs\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testAvgInt",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select primitiveLong, avg(primitiveInt)\nfrom s.everyTypes\ngroup by primitiveLong order by primitiveLong]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testSchemaFieldHasBadType",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"s\".\"enumerable\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testReduceCountNotNullable",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select\n count(\"deptno\") as cs,\n count(*) as cs2\nfrom \"hr\".\"emps\"\nwhere \"deptno\" \u003c 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs9",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"emps\".\"deptno\", count(distinct \"salary\") as s\nfrom \"emps\"\njoin \"dependents\" on (\"emps\".\"empid\" \u003d \"dependents\".\"empid\")\ngroup by \"dependents\".\"empid\", \"emps\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testScan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select empno, deptno from emp]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[4: quidem(sql/conditions.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/conditions.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/conditions.iq\n109,115c109,111\n\u003c +-------+\n\u003c | value |\n\u003c +-------+\n\u003c | A     |\n\u003c | B     |\n\u003c +-------+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"value\" from \"nullables\" a where \"value\" \u003d \u0027A\u0027 or \"value\" \u003d \u0027B\u0027 order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n116a113,394\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 272: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n121,126c399,401\n\u003c +-------+\n\u003c | value |\n\u003c +-------+\n\u003c | C     |\n\u003c +-------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"value\" from \"nullables\" a where not (\"value\" \u003d \u0027A\u0027 or \"value\" \u003d \u0027B\u0027) order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n127a403,684\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (!(inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (!(inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 272: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n132,138c689,691\n\u003c +-------+\n\u003c | value |\n\u003c +-------+\n\u003c | A     |\n\u003c | B     |\n\u003c +-------+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"value\" from \"nullables\" a where not (not (\"value\" \u003d \u0027A\u0027 or \"value\" \u003d \u0027B\u0027)) order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n139a693,974\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 272: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n154,161c989,991\n\u003c +-------+\n\u003c | value |\n\u003c +-------+\n\u003c | A     |\n\u003c | B     |\n\u003c | C     |\n\u003c +-------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"value\" from \"nullables\" a where not (\"value\" \u003d \u0027A\u0027 and \"value\" \u003d \u0027B\u0027) order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n162a993,1274\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (!((inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\")) \u0026\u0026 (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (!((inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\")) \u0026\u0026 (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 272: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n179,184c1291,1295\n\u003c +-------+\n\u003c | value |\n\u003c +-------+\n\u003c | C     |\n\u003c +-------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"value\" from \"nullables\" a\n\u003e  where case when not (\"value\" \u003d \u0027A\u0027 or \"value\" \u003d \u0027B\u0027) then 1 else 0 end \u003d 1\n\u003e  order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n185a1297,1578\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (!(inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (!(inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 272: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n197,202c1590,1599\n\u003c +-------+\n\u003c | value |\n\u003c +-------+\n\u003c | C     |\n\u003c +-------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"value\" from \"nullables\" a\n\u003e  where\n\u003e    case when not (\"value\"\u003d\u0027A\u0027 or \"value\"\u003d\u0027B\u0027)\n\u003e      then\n\u003e        case when (\"value\"\u003d\u0027A\u0027 or \"value\"\u003d\u0027B\u0027) then 1 else 2 end\n\u003e      else 0\n\u003e    end \u003d 2\n\u003e  order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n203a1601,1882\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if ((inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 0 : inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\") ? 1 : 2) \u003d\u003d 2) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if ((inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 0 : inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\") ? 1 : 2) \u003d\u003d 2) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 272: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n215,220c1894,1903\n\u003c +-------+\n\u003c | value |\n\u003c +-------+\n\u003c | C     |\n\u003c +-------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"value\" from \"nullables\" a\n\u003e  where\n\u003e    case when not (\"value\"\u003d\u0027A\u0027 or \"value\"\u003d\u0027B\u0027)\n\u003e      then\n\u003e        case when not /* \u003c--diff from above */ (\"value\"\u003d\u0027A\u0027 or \"value\"\u003d\u0027B\u0027) then 1 else 2 end\n\u003e      else 0\n\u003e    end \u003d 1 /* \u003c- diff from above*/\n\u003e  order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n221a1905,2186\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if ((inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 0 : inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 2 : 1) \u003d\u003d 1) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if ((inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 0 : inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 2 : 1) \u003d\u003d 1) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 272: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n233,240c2198,2207\n\u003c +-------+\n\u003c | value |\n\u003c +-------+\n\u003c | A     |\n\u003c | B     |\n\u003c |       |\n\u003c +-------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"value\" from \"nullables\" a\n\u003e  where\n\u003e    case when not (\"value\"\u003d\u0027A\u0027 or \"value\"\u003d\u0027B\u0027)\n\u003e      then\n\u003e        case when not (\"value\"\u003d\u0027A\u0027 or \"value\"\u003d\u0027B\u0027) then 1 else 2 end\n\u003e      else 0\n\u003e    end \u003d 0 /* \u003c- diff from above*/\n\u003e  order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n241a2209,2490\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 2 : 1) \u003d\u003d 0) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 2 : 1) \u003d\u003d 0) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 272: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n253,257c2502,2511\n\u003c +-------+\n\u003c | value |\n\u003c +-------+\n\u003c +-------+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select \"value\" from \"nullables\" a\n\u003e  where\n\u003e    case when not (\"value\"\u003d\u0027A\u0027 or \"value\"\u003d\u0027B\u0027)\n\u003e      then\n\u003e        case when not (\"value\"\u003d\u0027A\u0027 or \"value\"\u003d\u0027B\u0027) then 1 else 2 end\n\u003e      else 0\n\u003e    end \u003d 2 /* \u003c- diff from above*/\n\u003e  order by 1\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n258a2513,2794\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if ((inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 0 : inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 2 : 1) \u003d\u003d 2) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.ReflectiveSchemaTest.CatchallSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"s\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).nullables);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final String inp1_ \u003d ((org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current()).value;\n\u003e               if ((inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 0 : inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"A\") || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"B\")) ? 2 : 1) \u003d\u003d 2) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final org.apache.calcite.test.ReflectiveSchemaTest.IntAndString current \u003d (org.apache.calcite.test.ReflectiveSchemaTest.IntAndString) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current.id,\n\u003e                 current.value};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 272: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3178)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccess(UnitCompiler.java:3140)\n\u003e  at org.codehaus.janino.Java$FieldAccess.accept(Java.java:3232)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext2(UnitCompiler.java:3216)\n\u003e  at org.codehaus.janino.UnitCompiler.access$5700(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$9.visitFieldAccessExpression(UnitCompiler.java:3141)\n\u003e  at org.codehaus.janino.Java$FieldAccessExpression.accept(Java.java:3560)\n\u003e  at org.codehaus.janino.UnitCompiler.compileContext(UnitCompiler.java:3148)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4344)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testMultisetQuery",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select multiset(\n  select \"deptno\", \"empid\" from \"hr\".\"emps\") as a\nfrom (values (1))]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testLatticeWithPreDefinedTilesFewerMeasures",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select t.\"the_year\", t.\"quarter\", count(*) as c\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"foodmart\".\"time_by_day\" as t using (\"time_id\")\ngroup by t.\"the_year\", t.\"quarter\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView14",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select * from \"emps\" where (\"salary\" \u003e 1000 or (\"deptno\" \u003e\u003d 30 and \"salary\" \u003c\u003d 500))]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testDivideWraperWrapperMultipleTimes",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"wrapperLong\" / \"wrapperLong\"\n+ \"wrapperLong\" / \"wrapperLong\" as c\n from \"s\".\"everyTypes\" where \"primitiveLong\" \u003c\u003e 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testFetchStar",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\"\nfetch first 2 rows only]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testCartesianJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\", \"hr\".\"depts\" where \"emps\".\"empid\" \u003c 140 and \"depts\".\"deptno\" \u003e 20]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testCountStar",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select count(*) c from \"hr\".\"emps\", \"hr\".\"depts\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testJoinGroupByEmpty",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) from (\n  select *\n  from \"foodmart\".\"sales_fact_1997\" as s\n  join \"foodmart\".\"customer\" as c\n  on s.\"customer_id\" \u003d c.\"customer_id\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByView",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"name\" from \"adhoc\".V order by \"name\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs13",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"emps\".\"deptno\", count(\"salary\") as s\nfrom \"emps\"\njoin \"dependents\" on (\"emps\".\"empid\" \u003d \"dependents\".\"empid\")\ngroup by \"dependents\".\"empid\", \"emps\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregate",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select count(*) + 1 as c, \"deptno\" from \"emps\" group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testDistinctCount",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"time_by_day\".\"the_year\" as \"c0\",\n count(distinct \"sales_fact_1997\".\"unit_sales\") as \"m0\"\nfrom \"time_by_day\" as \"time_by_day\",\n \"sales_fact_1997\" as \"sales_fact_1997\"\nwhere \"sales_fact_1997\".\"time_id\" \u003d \"time_by_day\".\"time_id\"\nand \"time_by_day\".\"the_year\" \u003d 1997\ngroup by \"time_by_day\".\"the_year\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs7",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\"\nfrom \"depts\"\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")\njoin \"locations\" on (\"locations\".\"name\" \u003d \"dependents\".\"name\")\njoin \"emps\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\nwhere \"depts\".\"deptno\" \u003e 10\ngroup by \"dependents\".\"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModelWithComment",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from \"foodmart\".\"time_by_day\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[15: quidem(sql/agg.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/agg.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/agg.iq\n589,611c589,605\n\u003c +--------+-----------+----+---+---+---+\n\u003c | DEPTNO | JOB       | C  | D | J | X |\n\u003c +--------+-----------+----+---+---+---+\n\u003c |     10 | CLERK     |  1 | 0 | 0 | 0 |\n\u003c |     10 | MANAGER   |  1 | 0 | 0 | 0 |\n\u003c |     10 | PRESIDENT |  1 | 0 | 0 | 0 |\n\u003c |     10 |           |  3 | 0 | 1 | 1 |\n\u003c |     20 | ANALYST   |  2 | 0 | 0 | 0 |\n\u003c |     20 | CLERK     |  2 | 0 | 0 | 0 |\n\u003c |     20 | MANAGER   |  1 | 0 | 0 | 0 |\n\u003c |     20 |           |  5 | 0 | 1 | 1 |\n\u003c |     30 | CLERK     |  1 | 0 | 0 | 0 |\n\u003c |     30 | MANAGER   |  1 | 0 | 0 | 0 |\n\u003c |     30 | SALESMAN  |  4 | 0 | 0 | 0 |\n\u003c |     30 |           |  6 | 0 | 1 | 1 |\n\u003c |        | ANALYST   |  2 | 1 | 0 | 2 |\n\u003c |        | CLERK     |  4 | 1 | 0 | 2 |\n\u003c |        | MANAGER   |  3 | 1 | 0 | 2 |\n\u003c |        | PRESIDENT |  1 | 1 | 0 | 2 |\n\u003c |        | SALESMAN  |  4 | 1 | 0 | 2 |\n\u003c |        |           | 14 | 1 | 1 | 3 |\n\u003c +--------+-----------+----+---+---+---+\n\u003c (18 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno, job, count(*) as c, grouping(deptno) as d,\n\u003e   grouping(job) j, grouping(deptno, job) as x\n\u003e from \"scott\".emp\n\u003e group by cube(deptno, job)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n612a607,972\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7], false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), null, false, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Byte) a0[7], true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, null, true, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (Byte) null : (Byte) key.get(1),\n\u003e           acc.f0,\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 1L : 0L,\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? 1L : 0L,\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7], false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), null, false, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Byte) a0[7], true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, null, true, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (Byte) null : (Byte) key.get(1),\n\u003e           acc.f0,\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 1L : 0L,\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? 1L : 0L,\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 170: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7480)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at or (stack truncated)\n866,874c1226,1241\n\u003c +--------+---+----+\n\u003c | DEPTNO | G | C  |\n\u003c +--------+---+----+\n\u003c |     10 | 0 |  3 |\n\u003c |     20 | 0 |  5 |\n\u003c |     30 | 0 |  6 |\n\u003c |        | 0 | 14 |\n\u003c +--------+---+----+\n\u003c (4 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno, group_id() as g, count(*) as c\n\u003e from \"scott\".emp\n\u003e group by grouping sets (deptno, (), ())\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n875a1243,1520\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of((Byte) a0[7], false);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(null, true);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a1s0;\n\u003e         a1s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a1s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(1)) ? (Byte) null : (Byte) key.get(0),\n\u003e             0L,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of((Byte) a0[7], false);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(null, true);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a1s0;\n\u003e         a1s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a1s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(1)) ? (Byte) null : (Byte) key.get(0),\n\u003e             0L,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 115: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7480)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n896,927c1541,1570\n\u003c +--------+-----------+-------+--------+----------+-----------------------------------+\n\u003c | DEPTNO | JOB       | EMPNO | ENAME  | SUMSAL   | GR_TEXT                           |\n\u003c +--------+-----------+-------+--------+----------+-----------------------------------+\n\u003c |     10 | CLERK     |  7934 | MILLER |  1300.00 | grouped by deptno,job,empno,ename |\n\u003c |     10 | CLERK     |       |        |  1300.00 | grouped by deptno,job             |\n\u003c |     10 | MANAGER   |  7782 | CLARK  |  2450.00 | grouped by deptno,job,empno,ename |\n\u003c |     10 | MANAGER   |       |        |  2450.00 | grouped by deptno,job             |\n\u003c |     10 | PRESIDENT |  7839 | KING   |  5000.00 | grouped by deptno,job,empno,ename |\n\u003c |     10 | PRESIDENT |       |        |  5000.00 | grouped by deptno,job             |\n\u003c |     10 |           |       |        |  8750.00 | grouped by deptno                 |\n\u003c |     20 | ANALYST   |  7788 | SCOTT  |  3000.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | ANALYST   |  7902 | FORD   |  3000.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | ANALYST   |       |        |  6000.00 | grouped by deptno,job             |\n\u003c |     20 | CLERK     |  7369 | SMITH  |   800.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | CLERK     |  7876 | ADAMS  |  1100.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | CLERK     |       |        |  1900.00 | grouped by deptno,job             |\n\u003c |     20 | MANAGER   |  7566 | JONES  |  2975.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | MANAGER   |       |        |  2975.00 | grouped by deptno,job             |\n\u003c |     20 |           |       |        | 10875.00 | grouped by deptno                 |\n\u003c |     30 | CLERK     |  7900 | JAMES  |   950.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | CLERK     |       |        |   950.00 | grouped by deptno,job             |\n\u003c |     30 | MANAGER   |  7698 | BLAKE  |  2850.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | MANAGER   |       |        |  2850.00 | grouped by deptno,job             |\n\u003c |     30 | SALESMAN  |  7499 | ALLEN  |  1600.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | SALESMAN  |  7521 | WARD   |  1250.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | SALESMAN  |  7654 | MARTIN |  1250.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | SALESMAN  |  7844 | TURNER |  1500.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | SALESMAN  |       |        |  5600.00 | grouped by deptno,job             |\n\u003c |     30 |           |       |        |  9400.00 | grouped by deptno                 |\n\u003c |        |           |       |        | 29025.00 | grouped by ()                     |\n\u003c +--------+-----------+-------+--------+----------+-----------------------------------+\n\u003c (27 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno\n\u003e        , job\n\u003e        , empno\n\u003e        , ename\n\u003e        , sum(sal) sumsal\n\u003e        , case grouping_id(deptno,job,empno)\n\u003e            when 0 then \u0027grouped by deptno,job,empno,ename\u0027\n\u003e            when 1 then \u0027grouped by deptno,job\u0027\n\u003e            when 3 then \u0027grouped by deptno\u0027\n\u003e            when 7 then \u0027grouped by ()\u0027\n\u003e          end gr_text\n\u003e     from \"scott\".emp\n\u003e    group by rollup(deptno,job,(empno,ename))\n\u003e    order by deptno\n\u003e        , job\n\u003e        , empno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n928a1572,1978\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Byte) v0[3], (Byte) v1[3]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[2] \u003d\u003d null ? (String) null : v0[2].toString(), v1[2] \u003d\u003d null ? (String) null : v1[2].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Short) v0[0], (Short) v1[0]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]),\n\u003e           a0[1] \u003d\u003d null ? (String) null : a0[1].toString(),\n\u003e           a0[2] \u003d\u003d null ? (String) null : a0[2].toString(),\n\u003e           (Byte) a0[7],\n\u003e           false,\n\u003e           false,\n\u003e           false,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           a0[2] \u003d\u003d null ? (String) null : a0[2].toString(),\n\u003e           (Byte) a0[7],\n\u003e           true,\n\u003e           true,\n\u003e           false,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           null,\n\u003e           (Byte) a0[7],\n\u003e           true,\n\u003e           true,\n\u003e           true,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           null,\n\u003e           null,\n\u003e           true,\n\u003e           true,\n\u003e           true,\n\u003e           true});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? (Short) null : Short.valueOf(org.apache.calcite.runtime.SqlFunctions.toShort(key.get(0))),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? (String) null : key.get(1) \u003d\u003d null ? (String) null : key.get(1).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(6)) ? (String) null : key.get(2) \u003d\u003d null ? (String) null : key.get(2).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(7)) ? (Byte) null : (Byte) key.get(3),\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(7)) ? 4L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(6)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ).orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final long inp5_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[5]);\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[2],\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[4],\n\u003e                   inp5_ \u003d\u003d 0L ? \"grouped by deptno,job,empno,ename\" : inp5_ \u003d\u003d 1L ? $L4J$C$org_apache_calcite_runtime_SqlFunctions_truncateOrPad_grouped_b70a77e94 : inp5_ \u003d\u003d 3L ? $L4J$C$org_apache_calcite_runtime_SqlFunctions_truncateOrPad_grouped_b80bc7d96 : inp5_ \u003d\u003d 7L ? $L4J$C$org_apache_calcite_runtime_SqlFunctions_truncateOrPad_grouped_b5af5fb6f : (String) null};\n\u003e             }\n\u003e \n\u003e             static final String $L4J$C$org_apache_calcite_runtime_SqlFunctions_truncateOrPad_grouped_b70a77e94 \u003d org.apache.calcite.runtime.SqlFunctions.truncateOrPad(\"grouped by deptno,job\", 33);\n\u003e             static final String $L4J$C$org_apache_calcite_runtime_SqlFunctions_truncateOrPad_grouped_b80bc7d96 \u003d org.apache.calcite.runtime.SqlFunctions.truncateOrPad(\"grouped by deptno\", 33);\n\u003e             static final String $L4J$C$org_apache_calcite_runtime_SqlFunctions_truncateOrPad_grouped_b5af5fb6f \u003d org.apache.calcite.runtime.SqlFunctions.truncateOrPad(\"grouped by ()\", 33);\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Byte) v0[3], (Byte) v1[3]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[2] \u003d\u003d null ? (String) null : v0[2].toString(), v1[2] \u003d\u003d null ? (String) null : v1[2].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Short) v0[0], (Short) v1[0]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]),\n\u003e           a0[1] \u003d\u003d null ? (String) null : a0[1].toString(),\n\u003e           a0[2] \u003d\u003d null ? (String) null : a0[2].toString(),\n\u003e           (Byte) a0[7],\n\u003e           false,\n\u003e           false,\n\u003e           false,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           a0[2] \u003d\u003d null ? (String) null : a0[2].toString(),\n\u003e           (Byte) a0[7],\n\u003e           true,\n\u003e           true,\n\u003e           false,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           null,\n\u003e           (Byte) a0[7],\n\u003e           true,\n\u003e           true,\n\u003e           true,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           null,\n\u003e           null,\n\u003e           true,\n\u003e           true,\n\u003e           true,\n\u003e           true});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? (Short) null : Short.valueOf(org.apache.calcite.runtime.SqlFunctions.toShort(key.get(0))),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? (String) null : key.get(1) \u003d\u003d null ? (String) null : key.get(1).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(6)) ? (String) null : key.get(2) \u003d (stack truncated)\n960,991c2010,2046\n\u003c +--------+-----------+-------+--------+----------+-----------------------------------+\n\u003c | DEPTNO | JOB       | EMPNO | ENAME  | SUMSAL   | GR_TEXT                           |\n\u003c +--------+-----------+-------+--------+----------+-----------------------------------+\n\u003c |     10 | CLERK     |  7934 | MILLER |  1300.00 | grouped by deptno,job,empno,ename |\n\u003c |     10 | CLERK     |       |        |  1300.00 | grouped by deptno,job             |\n\u003c |     10 | MANAGER   |  7782 | CLARK  |  2450.00 | grouped by deptno,job,empno,ename |\n\u003c |     10 | MANAGER   |       |        |  2450.00 | grouped by deptno,job             |\n\u003c |     10 | PRESIDENT |  7839 | KING   |  5000.00 | grouped by deptno,job,empno,ename |\n\u003c |     10 | PRESIDENT |       |        |  5000.00 | grouped by deptno,job             |\n\u003c |     10 |           |       |        |  8750.00 | grouped by deptno, grouping set 3 |\n\u003c |     20 | ANALYST   |  7788 | SCOTT  |  3000.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | ANALYST   |  7902 | FORD   |  3000.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | ANALYST   |       |        |  6000.00 | grouped by deptno,job             |\n\u003c |     20 | CLERK     |  7369 | SMITH  |   800.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | CLERK     |  7876 | ADAMS  |  1100.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | CLERK     |       |        |  1900.00 | grouped by deptno,job             |\n\u003c |     20 | MANAGER   |  7566 | JONES  |  2975.00 | grouped by deptno,job,empno,ename |\n\u003c |     20 | MANAGER   |       |        |  2975.00 | grouped by deptno,job             |\n\u003c |     20 |           |       |        | 10875.00 | grouped by deptno, grouping set 3 |\n\u003c |     30 | CLERK     |  7900 | JAMES  |   950.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | CLERK     |       |        |   950.00 | grouped by deptno,job             |\n\u003c |     30 | MANAGER   |  7698 | BLAKE  |  2850.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | MANAGER   |       |        |  2850.00 | grouped by deptno,job             |\n\u003c |     30 | SALESMAN  |  7499 | ALLEN  |  1600.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | SALESMAN  |  7521 | WARD   |  1250.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | SALESMAN  |  7654 | MARTIN |  1250.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | SALESMAN  |  7844 | TURNER |  1500.00 | grouped by deptno,job,empno,ename |\n\u003c |     30 | SALESMAN  |       |        |  5600.00 | grouped by deptno,job             |\n\u003c |     30 |           |       |        |  9400.00 | grouped by deptno, grouping set 3 |\n\u003c |        |           |       |        | 29025.00 | grouped by (), grouping set 5     |\n\u003c +--------+-----------+-------+--------+----------+-----------------------------------+\n\u003c (27 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno\n\u003e        , job\n\u003e        , empno\n\u003e        , ename\n\u003e        , sum(sal) sumsal\n\u003e        , case grouping_id(deptno,job,empno)\n\u003e            when 0 then \u0027grouped by deptno,job,empno,ename\u0027\n\u003e            when 1 then \u0027grouped by deptno,job\u0027\n\u003e            when 3 then \u0027grouped by deptno, grouping set \u0027 || cast(3+group_id() as varchar)\n\u003e            when 7 then \u0027grouped by (), grouping set \u0027 || cast(5+group_id() as varchar)\n\u003e          end gr_text\n\u003e     from \"scott\".emp\n\u003e    group by grouping sets\n\u003e          ( (deptno,job,empno,ename)\n\u003e          , (deptno,job)\n\u003e          , deptno\n\u003e          , deptno\n\u003e          , ()\n\u003e          , ()\n\u003e          )\n\u003e    order by deptno\n\u003e        , job\n\u003e        , empno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n992a2048,2456\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Byte) v0[3], (Byte) v1[3]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[2] \u003d\u003d null ? (String) null : v0[2].toString(), v1[2] \u003d\u003d null ? (String) null : v1[2].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Short) v0[0], (Short) v1[0]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]),\n\u003e           a0[1] \u003d\u003d null ? (String) null : a0[1].toString(),\n\u003e           a0[2] \u003d\u003d null ? (String) null : a0[2].toString(),\n\u003e           (Byte) a0[7],\n\u003e           false,\n\u003e           false,\n\u003e           false,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           a0[2] \u003d\u003d null ? (String) null : a0[2].toString(),\n\u003e           (Byte) a0[7],\n\u003e           true,\n\u003e           true,\n\u003e           false,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           null,\n\u003e           (Byte) a0[7],\n\u003e           true,\n\u003e           true,\n\u003e           true,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           null,\n\u003e           null,\n\u003e           true,\n\u003e           true,\n\u003e           true,\n\u003e           true});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? (Short) null : Short.valueOf(org.apache.calcite.runtime.SqlFunctions.toShort(key.get(0))),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? (String) null : key.get(1) \u003d\u003d null ? (String) null : key.get(1).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(6)) ? (String) null : key.get(2) \u003d\u003d null ? (String) null : key.get(2).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(7)) ? (Byte) null : (Byte) key.get(3),\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(7)) ? 4L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(6)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? 1L : 0L),\n\u003e           0L};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ).orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final long inp6_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[6]);\n\u003e               final long inp5_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[5]);\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[2],\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[4],\n\u003e                   inp5_ \u003d\u003d 0L ? \"grouped by deptno,job,empno,ename\" : inp5_ \u003d\u003d 1L ? \"grouped by deptno,job\" : inp5_ \u003d\u003d 3L ? org.apache.calcite.runtime.SqlFunctions.concat(\"grouped by deptno, grouping set \", Long.toString(3L + inp6_)) : inp5_ \u003d\u003d 7L ? org.apache.calcite.runtime.SqlFunctions.concat(\"grouped by (), grouping set \", Long.toString(5L + inp6_)) : (String) null};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Byte) v0[3], (Byte) v1[3]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[2] \u003d\u003d null ? (String) null : v0[2].toString(), v1[2] \u003d\u003d null ? (String) null : v1[2].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Short) v0[0], (Short) v1[0]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]),\n\u003e           a0[1] \u003d\u003d null ? (String) null : a0[1].toString(),\n\u003e           a0[2] \u003d\u003d null ? (String) null : a0[2].toString(),\n\u003e           (Byte) a0[7],\n\u003e           false,\n\u003e           false,\n\u003e           false,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           a0[2] \u003d\u003d null ? (String) null : a0[2].toString(),\n\u003e           (Byte) a0[7],\n\u003e           true,\n\u003e           true,\n\u003e           false,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           null,\n\u003e           (Byte) a0[7],\n\u003e           true,\n\u003e           true,\n\u003e           true,\n\u003e           false});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.copyOf(new Comparable[] {\n\u003e           (short)0,\n\u003e           null,\n\u003e           null,\n\u003e           null,\n\u003e           true,\n\u003e           true,\n\u003e           true,\n\u003e           true});\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? (Short) null : Short.valueOf(org.apache.calcite.runtime.SqlFunctions.toShort(key.get(0))),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? (String) null : key.get(1) \u003d\u003d null ? (String) null : key.get(1).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(6)) ? (String) null : key.get(2) \u003d\u003d null ? (String) null : key.get(2).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(7)) ? (Byte) null : (Byte) key.get(3),\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e (          org.apache.calcite.runtime.SqlFunc (stack truncated)\n1035,1040c2499,2516\n\u003c +----+\n\u003c | S  |\n\u003c +----+\n\u003c | 14 |\n\u003c +----+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"SELECT SUM(\n\u003e   CASE WHEN deptno IN (SELECT deptno FROM \"scott\".dept) THEN 1\n\u003e   ELSE 0 END) as s\n\u003e FROM \"scott\".emp\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_3 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_3() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_3)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_3) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_3) o).f1;\n\u003e   }\n1041a2518,3009\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_3 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record2_4 implements java.io.Serializable {\n\u003e   public int f0;\n\u003e   public boolean f1;\n\u003e   public Record2_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_4) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_4) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_4 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_3 record0;\n\u003e       record0 \u003d new Record2_3();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_3 apply(Record2_3 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       acc.f1++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_3 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_3) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_3 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_3) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d left.join(right0, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) !\u003d 0L \u0026\u0026 (Boolean) current[5] !\u003d null ? 1 : 0;\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         int a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d 0;\n\u003e         Record2_4 record0;\n\u003e         record0 \u003d new Record2_4();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_4 apply(Record2_4 acc, int in) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0 + in;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_4 apply(Record2_4 acc, Integer in) {\n\u003e         return apply(\n\u003e           acc,\n\u003e           in.intValue());\n\u003e       }\n\u003e       public Record2_4 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_4) acc,\n\u003e           (Integer) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Integer apply(Record2_4 acc) {\n\u003e         return acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_4) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Integer.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_3 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_3() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_3)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_3) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_3) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_3 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record2_4 implements java.io.Serializable {\n\u003e   public int f0;\n\u003e   public boolean f1;\n\u003e   public Record2_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_4) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_4) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_4 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_3 record0;\n\u003e       record0 \u003d new Record2_3();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_3 apply(Record2_3 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       acc.f1++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_3 apply(O (stack truncated)\n1046,1051c3014,3029\n\u003c +-----+\n\u003c | S   |\n\u003c +-----+\n\u003c | 140 |\n\u003c +-----+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"SELECT SUM((select min(cast(deptno as integer)) from \"scott\".dept)) as s\n\u003e FROM \"scott\".emp\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_4 implements java.io.Serializable {\n\u003e   public int f0;\n\u003e   public boolean f1;\n\u003e   public Record2_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_4) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_4) o).f1;\n\u003e   }\n1052a3031,3483\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_4 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return (int) org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         int a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d 2147483647;\n\u003e         Record2_4 record0;\n\u003e         record0 \u003d new Record2_4();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_4 apply(Record2_4 acc, int in) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_4 apply(Record2_4 acc, Integer in) {\n\u003e         return apply(\n\u003e           acc,\n\u003e           in.intValue());\n\u003e       }\n\u003e       public Record2_4 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_4) acc,\n\u003e           (Integer) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Integer apply(Record2_4 acc) {\n\u003e         return acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_4) acc);\n\u003e       }\n\u003e     }\n\u003e     )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(short v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e       }\n\u003e       public Object apply(Short v1) {\n\u003e         return apply(\n\u003e           v1.shortValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Short) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Integer v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Integer) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Short left, Integer right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Short) left,\n\u003e           (Integer) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, true).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         int a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d 0;\n\u003e         Record2_4 record0;\n\u003e         record0 \u003d new Record2_4();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_4 apply(Record2_4 acc, Object[] in) {\n\u003e         final Integer inp1_ \u003d (Integer) in[1];\n\u003e         if (inp1_ !\u003d null) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0 + inp1_.intValue();\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_4 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_4) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Integer apply(Record2_4 acc) {\n\u003e         return acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_4) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Integer.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_4 implements java.io.Serializable {\n\u003e   public int f0;\n\u003e   public boolean f1;\n\u003e   public Record2_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_4) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_4) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_4 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return (int) org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         int a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d 2147483647;\n\u003e         Record2_4 record0;\n\u003e         record0 \u003d new Record2_4();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_4 apply(Record2_4 acc, int in) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_4 apply(Record2_4 acc, Integer in) {\n\u003e         return apply(\n\u003e           acc,\n\u003e           in.intValue());\n\u003e       }\n\u003e       public Record2_4 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_4) acc,\n\u003e           (Integer) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Integer apply(Record2_4 acc) {\n\u003e         return acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_4) acc);\n\u003e       }\n\u003e     }\n\u003e     )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(short v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e       }\n\u003e       public Object apply(Short v1) {\n\u003e         return apply(\n\u003e           v1.shortValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Short) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Integer v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Integer) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Short left, Integer right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Short) left,\n\u003e           (Integer) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, true).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         int a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d 0;\n\u003e         Record2_4 record0;\n\u003e         record0 \u003d new Record2_4();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_4 apply(Record2_4 acc, Object[] in) {\n\u003e         final Integer inp1_ \u003d (Integer) in[1];\n\u003e         if (inp1_ !\u003d null) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0 + inp1_.intValue();\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_4 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_4) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Integer apply(Record2_4 acc) {\n\u003e         return acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_4) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Integer.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.cal (stack truncated)\n1059,1066c3490,3506\n\u003c +----+--------+\n\u003c | S  | DEPTNO |\n\u003c +----+--------+\n\u003c | 30 |     10 |\n\u003c | 50 |     20 |\n\u003c | 60 |     30 |\n\u003c +----+--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"SELECT SUM((select min(cast(deptno as integer)) from \"scott\".dept)) as s, deptno\n\u003e FROM \"scott\".emp\n\u003e GROUP BY deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_4 implements java.io.Serializable {\n\u003e   public int f0;\n\u003e   public boolean f1;\n\u003e   public Record2_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_4) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_4) o).f1;\n\u003e   }\n1067a3508,3987\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_4 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return (int) org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       int a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d 2147483647;\n\u003e       Record2_4 record0;\n\u003e       record0 \u003d new Record2_4();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_4 apply(Record2_4 acc, int in) {\n\u003e       acc.f1 \u003d true;\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_4 apply(Record2_4 acc, Integer in) {\n\u003e       return apply(\n\u003e         acc,\n\u003e         in.intValue());\n\u003e     }\n\u003e     public Record2_4 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_4) acc,\n\u003e         (Integer) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Record2_4 acc) {\n\u003e       return acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null;\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_4) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Integer v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Integer) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Integer right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Integer) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[1];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       int a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d 0;\n\u003e       Record2_4 record0;\n\u003e       record0 \u003d new Record2_4();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_4 apply(Record2_4 acc, Object[] in) {\n\u003e       final Integer inp2_ \u003d (Integer) in[2];\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0 + inp2_.intValue();\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_4 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_4) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_4 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_4) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_4 implements java.io.Serializable {\n\u003e   public int f0;\n\u003e   public boolean f1;\n\u003e   public Record2_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_4) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_4) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_4 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return (int) org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       int a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d 2147483647;\n\u003e       Record2_4 record0;\n\u003e       record0 \u003d new Record2_4();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_4 apply(Record2_4 acc, int in) {\n\u003e       acc.f1 \u003d true;\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_4 apply(Record2_4 acc, Integer in) {\n\u003e       return apply(\n\u003e         acc,\n\u003e         in.intValue());\n\u003e     }\n\u003e     public Record2_4 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_4) acc,\n\u003e         (Integer) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Record2_4 acc) {\n\u003e       return acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null;\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_4) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Integer v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Integer) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Integer right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Integer) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[1];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       int a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d 0;\n\u003e       Record2_4 record0;\n\u003e       record0 \u003d new Record2_4();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_4 apply(Record2_4 acc, Object[] in) {\n\u003e       final Integer inp2_ \u003d (Integer) in[2];\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0 + inp2_.intValue();\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_4 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_4) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_4 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (stack truncated)\n1082,1089c4002,4017\n\u003c +--------+--------------------------------------+\n\u003c | DEPTNO | EMPNOS                               |\n\u003c +--------+--------------------------------------+\n\u003c |     10 | [7782, 7839, 7934]                   |\n\u003c |     20 | [7369, 7566, 7788, 7876, 7902]       |\n\u003c |     30 | [7499, 7521, 7654, 7698, 7844, 7900] |\n\u003c +--------+--------------------------------------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno, collect(empno) as empnos\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_5 implements java.io.Serializable {\n\u003e   public java.util.List f0;\n\u003e   public Record1_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record1_5) o).f0);\n\u003e   }\n1090a4019,4274\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_5 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[7];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.util.List a0s0;\n\u003e         a0s0 \u003d new java.util.ArrayList();\n\u003e         Record1_5 record0;\n\u003e         record0 \u003d new Record1_5();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_5 apply(Record1_5 acc, Object[] in) {\n\u003e         acc.f0.add(org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_5 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_5) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_5 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_5) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_5 implements java.io.Serializable {\n\u003e   public java.util.List f0;\n\u003e   public Record1_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record1_5) o).f0);\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_5 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[7];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.util.List a0s0;\n\u003e         a0s0 \u003d new java.util.ArrayList();\n\u003e         Record1_5 record0;\n\u003e         record0 \u003d new Record1_5();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_5 apply(Record1_5 acc, Object[] in) {\n\u003e         acc.f0.add(org.apache.calcite.runtime.SqlFunctions.toShort(in[0]));\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_5 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_5) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_5 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_5) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n1099,1106c4283,4298\n\u003c +--------+-----------------------------+\n\u003c | DEPTNO | JOBS                        |\n\u003c +--------+-----------------------------+\n\u003c |     10 | [MANAGER, CLERK, PRESIDENT] |\n\u003c |     20 | [CLERK, ANALYST, MANAGER]   |\n\u003c |     30 | [SALESMAN, MANAGER, CLERK]  |\n\u003c +--------+-----------------------------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno, collect(distinct job) as jobs\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_5 implements java.io.Serializable {\n\u003e   public java.util.List f0;\n\u003e   public Record1_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record1_5) o).f0);\n\u003e   }\n1107a4300,4641\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_5 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return new Object[] {\n\u003e             key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e             (Byte) key.get(1)};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     ).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[1];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.util.List a0s0;\n\u003e         a0s0 \u003d new java.util.ArrayList();\n\u003e         Record1_5 record0;\n\u003e         record0 \u003d new Record1_5();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_5 apply(Record1_5 acc, Object[] in) {\n\u003e         final String inp0_ \u003d in[0] \u003d\u003d null ? (String) null : in[0].toString();\n\u003e         if (inp0_ !\u003d null) {\n\u003e           acc.f0.add(inp0_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_5 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_5) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_5 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_5) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem$IfCommand.execute(Quidem.java:1413)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_5 implements java.io.Serializable {\n\u003e   public java.util.List f0;\n\u003e   public Record1_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record1_5) o).f0);\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_5 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return new Object[] {\n\u003e             key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e             (Byte) key.get(1)};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     ).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[1];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.util.List a0s0;\n\u003e         a0s0 \u003d new java.util.ArrayList();\n\u003e         Record1_5 record0;\n\u003e         record0 \u003d new Record1_5();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_5 apply(Record1_5 acc, Object[] in) {\n\u003e         final String inp0_ \u003d in[0] \u003d\u003d null ? (String) null : in[0].toString();\n\u003e         if (inp0_ !\u003d null) {\n\u003e           acc.f0.add(inp0_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_5 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_5) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_5 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_5) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 26 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 36 more\n1115,1122c4649,4664\n\u003c +--------+--------------+\n\u003c | DEPTNO | EMPNOS       |\n\u003c +--------+--------------+\n\u003c |     10 | []           |\n\u003c |     20 | [7369]       |\n\u003c |     30 | [7499, 7521] |\n\u003c +--------+--------------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno, collect(empno) filter (where empno \u003c 7550) as empnos\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_5 implements java.io.Serializable {\n\u003e   public java.util.List f0;\n\u003e   public Record1_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record1_5) o).f0);\n\u003e   }\n1123a4666,4977\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_5 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[0],\n\u003e                 (int) org.apache.calcite.runtime.SqlFunctions.toShort(current[0]) \u003c 7550};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[0];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.util.List a0s0;\n\u003e         a0s0 \u003d new java.util.ArrayList();\n\u003e         Record1_5 record0;\n\u003e         record0 \u003d new Record1_5();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_5 apply(Record1_5 acc, Object[] in) {\n\u003e         if (org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e           acc.f0.add(org.apache.calcite.runtime.SqlFunctions.toShort(in[1]));\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_5 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_5) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_5 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_5) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_5 implements java.io.Serializable {\n\u003e   public java.util.List f0;\n\u003e   public Record1_5() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_5)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record1_5) o).f0);\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_5 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[0],\n\u003e                 (int) org.apache.calcite.runtime.SqlFunctions.toShort(current[0]) \u003c 7550};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[0];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.util.List a0s0;\n\u003e         a0s0 \u003d new java.util.ArrayList();\n\u003e         Record1_5 record0;\n\u003e         record0 \u003d new Record1_5();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_5 apply(Record1_5 acc, Object[] in) {\n\u003e         if (org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e           acc.f0.add(org.apache.calcite.runtime.SqlFunctions.toShort(in[1]));\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_5 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_5) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_5 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_5) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n1138,1145c4992,5026\n\u003c +--------+---------+---------+---------+---------+---------+---------+\n\u003c | DEPTNO | C_SAL   | C10_SAL | MAX_C   | MIN_C   | RANGE_C | RANGE_M |\n\u003c +--------+---------+---------+---------+---------+---------+---------+\n\u003c |     10 | 1300.00 |         | 1300.00 | 1300.00 |    0.00 |         |\n\u003c |     20 | 1900.00 | 1900.00 | 1100.00 |  800.00 |  300.00 |         |\n\u003c |     30 |  950.00 |  950.00 |  950.00 |  950.00 |    0.00 |  350.00 |\n\u003c +--------+---------+---------+---------+---------+---------+---------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno,\n\u003e   sum(sal) filter (where job \u003d \u0027CLERK\u0027) c_sal,\n\u003e   sum(sal) filter (where job \u003d \u0027CLERK\u0027 and deptno \u003e 10) c10_sal,\n\u003e   max(sal) filter (where job \u003d \u0027CLERK\u0027) as max_c,\n\u003e   min(sal) filter (where job \u003d \u0027CLERK\u0027) as min_c,\n\u003e   max(sal) filter (where job \u003d \u0027CLERK\u0027)\n\u003e     - min(sal) filter (where job \u003d \u0027CLERK\u0027) as range_c,\n\u003e   max(sal) filter (where job \u003d \u0027SALESMAN\u0027)\n\u003e     - min(sal) filter (where job \u003d \u0027SALESMAN\u0027) as range_m\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record12_6 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public java.math.BigDecimal f2;\n\u003e   public boolean f3;\n\u003e   public java.math.BigDecimal f4;\n\u003e   public boolean f5;\n\u003e   public java.math.BigDecimal f6;\n\u003e   public boolean f7;\n\u003e   public java.math.BigDecimal f8;\n\u003e   public boolean f9;\n\u003e   public java.math.BigDecimal f10;\n\u003e   public boolean f11;\n\u003e   public Record12_6() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record12_6)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record12_6) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record12_6) o).f1 \u0026\u0026 java.util.Objects.equals(this.f2, ((Record12_6) o).f2) \u0026\u0026 this.f3 \u003d\u003d ((Record12_6) o).f3 \u0026\u0026 java.util.Objects.equals(this.f4, ((Record12_6) o).f4) \u0026\u0026 this.f5 \u003d\u003d ((Record12_6) o).f5 \u0026\u0026 java.util.Objects.equals(this.f6, ((Record12_6) o).f6) \u0026\u0026 this.f7 \u003d\u003d ((Record12_6) o).f7 \u0026\u0026 java.util.Objects.equals(this.f8, ((Record12_6) o).f8) \u0026\u0026 this.f9 \u003d\u003d ((Record12_6) o).f9 \u0026\u0026 java.util.Objects.equals(this.f10, ((Record12_6) o).f10) \u0026\u0026 this.f11 \u003d\u003d ((Record12_6) o).f11;\n\u003e   }\n1146a5028,5388\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f6);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f7);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f8);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f9);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f10);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f11);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record12_6 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f5, that.f5);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f6, that.f6);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f7, that.f7);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f8, that.f8);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f9, that.f9);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f10, that.f10);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f11, that.f11);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \", f5\u003d\" + this.f5 + \", f6\u003d\" + this.f6 + \", f7\u003d\" + this.f7 + \", f8\u003d\" + this.f8 + \", f9\u003d\" + this.f9 + \", f10\u003d\" + this.f10 + \", f11\u003d\" + this.f11 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp2_ \u003d current[2] \u003d\u003d null ? (String) null : current[2].toString();\n\u003e             final Byte inp7_0 \u003d (Byte) current[7];\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[5],\n\u003e                 inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"CLERK\"),\n\u003e                 inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"CLERK\") \u0026\u0026 (inp7_0 !\u003d null \u0026\u0026 (int) inp7_0.byteValue() \u003e 10),\n\u003e                 inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"SALESMAN\")};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       java.math.BigDecimal a2s0;\n\u003e       boolean a2s1;\n\u003e       a2s1 \u003d false;\n\u003e       a2s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a3s0;\n\u003e       boolean a3s1;\n\u003e       a3s1 \u003d false;\n\u003e       a3s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a4s0;\n\u003e       boolean a4s1;\n\u003e       a4s1 \u003d false;\n\u003e       a4s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a5s0;\n\u003e       boolean a5s1;\n\u003e       a5s1 \u003d false;\n\u003e       a5s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record12_6 record0;\n\u003e       record0 \u003d new Record12_6();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a1s1;\n\u003e       record0.f4 \u003d a2s0;\n\u003e       record0.f5 \u003d a2s1;\n\u003e       record0.f6 \u003d a3s0;\n\u003e       record0.f7 \u003d a3s1;\n\u003e       record0.f8 \u003d a4s0;\n\u003e       record0.f9 \u003d a4s1;\n\u003e       record0.f10 \u003d a5s0;\n\u003e       record0.f11 \u003d a5s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record12_6 apply(Record12_6 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e       final boolean inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2]);\n\u003e       if (inp1_ !\u003d null \u0026\u0026 inp2_) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp1_);\n\u003e       }\n\u003e       if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[3])) {\n\u003e         acc.f3 \u003d true;\n\u003e         acc.f2 \u003d acc.f2.add(inp1_);\n\u003e       }\n\u003e       if (inp1_ !\u003d null \u0026\u0026 inp2_) {\n\u003e         acc.f5 \u003d true;\n\u003e         acc.f4 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f4, inp1_);\n\u003e       }\n\u003e       if (inp1_ !\u003d null \u0026\u0026 inp2_) {\n\u003e         acc.f7 \u003d true;\n\u003e         acc.f6 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f6, inp1_);\n\u003e       }\n\u003e       final boolean inp4_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[4]);\n\u003e       if (inp1_ !\u003d null \u0026\u0026 inp4_) {\n\u003e         acc.f9 \u003d true;\n\u003e         acc.f8 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f8, inp1_);\n\u003e       }\n\u003e       if (inp1_ !\u003d null \u0026\u0026 inp4_) {\n\u003e         acc.f11 \u003d true;\n\u003e         acc.f10 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f10, inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record12_6 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record12_6) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record12_6 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f3 ? acc.f2 : (java.math.BigDecimal) null,\n\u003e           acc.f5 ? acc.f4 : (java.math.BigDecimal) null,\n\u003e           acc.f7 ? acc.f6 : (java.math.BigDecimal) null,\n\u003e           acc.f9 ? acc.f8 : (java.math.BigDecimal) null,\n\u003e           acc.f11 ? acc.f10 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record12_6) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp3_0 \u003d current[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[3]);\n\u003e               final java.math.BigDecimal inp4_0 \u003d current[4] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[4]);\n\u003e               final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   inp3_0 \u003d\u003d null || inp4_0 \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.minus(inp3_0, inp4_0),\n\u003e                   inp5_ \u003d\u003d null || inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.minus(inp5_, inp6_)};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record12_6 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public java.math.BigDecimal f2;\n\u003e   public boolean f3;\n\u003e   public java.math.BigDecimal f4;\n\u003e   public boolean f5;\n\u003e   public java.math.BigDecimal f6;\n\u003e   public boolean f7;\n\u003e   public java.math.BigDecimal f8;\n\u003e   public boolean f9;\n\u003e   public java.math.BigDecimal f10;\n\u003e   public boolean f11;\n\u003e   public Record12_6() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record12_6)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record12_6) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record12_6) o).f1 \u0026\u0026 java.util.Objects.equals(this.f2, ((Record12_6) o).f2) \u0026\u0026 this.f3 \u003d\u003d ((Record12_6) o).f3 \u0026\u0026 java.util.Objects.equals(this.f4, ((Record12_6) o).f4) \u0026\u0026 this.f5 \u003d\u003d ((Record12_6) o).f5 \u0026\u0026 java.util.Objects.equals(this.f6, ((Record12_6) o).f6) \u0026\u0026 this.f7 \u003d\u003d ((Record12_6) o).f7 \u0026\u0026 java.util.Objects.equals(this.f8, ((Record12_6) o).f8) \u0026\u0026 this.f9 \u003d\u003d ((Record12_6) o).f9 \u0026\u0026 java.util.Objects.equals(this.f10, ((Record12_6) o).f10) \u0026\u0026 this.f11 \u003d\u003d ((Record12_6) o).f11;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f6);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f7);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f8);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f9);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f10);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f11);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record12_6 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f5, that.f5);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apac (stack truncated)\n1157,1164c5399,5451\n\u003c +--------+---------+\n\u003c | DEPTNO | SAL_10  |\n\u003c +--------+---------+\n\u003c |     10 | 8750.00 |\n\u003c |     20 |         |\n\u003c |     30 |         |\n\u003c +--------+---------+\n\u003c (3 rows)\n---\n\u003e Error while executing command TypeCommand [sql: select deptno,\n\u003e   sum(sal) filter (where deptno \u003d 10) sal_10\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e ]\n\u003e java.sql.SQLException: Error while preparing statement [select deptno,\n\u003e   sum(sal) filter (where deptno \u003d 10) sal_10\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e ]\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.prepareStatement_(CalciteConnectionImpl.java:210)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.prepareStatement(CalciteConnectionImpl.java:192)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.prepareStatement(CalciteConnectionImpl.java:89)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareStatement(AvaticaConnection.java:168)\n\u003e  at net.hydromatic.quidem.Quidem$TypeCommand.execute(Quidem.java:1190)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1165a5453,5978\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp7_0 \u003d (Byte) current[7];\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[5],\n\u003e                 inp7_0 !\u003d null \u0026\u0026 (int) inp7_0.byteValue() \u003d\u003d 10};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[0];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record2_1 record0;\n\u003e         record0 \u003d new Record2_1();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e         if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp1_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_1 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_1) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record2_1 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record2_1) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.prepareStatement_(CalciteConnectionImpl.java:203)\n\u003e  ... 26 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno,\n\u003e   sum(sal) filter (where deptno \u003d 10) sal_10\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp7_0 \u003d (Byte) current[7];\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[5],\n\u003e                 inp7_0 !\u003d null \u0026\u0026 (int) inp7_0.byteValue() \u003d\u003d 10};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[0];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record2_1 record0;\n\u003e         record0 \u003d new Record2_1();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e         if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp1_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_1 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_1) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record2_1 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record2_1) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Byte inp7_0 \u003d (Byte) current[7];\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[5],\n\u003e                 inp7_0 !\u003d null \u0026\u0026 (int) inp7_0.byteValue() \u003d\u003d 10};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[0];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record2_1 record0;\n\u003e         record0 \u003d new Record2_1();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e         if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp1_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_1 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_1) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record2_1 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record2_1) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n1173,1179c5986,6003\n\u003c +--------+\n\u003c | DEPTNO |\n\u003c +--------+\n\u003c |     10 |\n\u003c |     20 |\n\u003c +--------+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e having sum(sal) filter (where job \u003d \u0027CLERK\u0027) \u003e 1000\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1180a6005,6386\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp2_ \u003d current[2] \u003d\u003d null ? (String) null : current[2].toString();\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[5],\n\u003e                 inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"CLERK\")};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e       if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp1_ \u003d current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1000_;\n\u003e                 if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp1_, v)) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return (Byte) ((Object[]) inputEnumerator.current())[0];\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1000_ \u003d new java.math.BigDecimal(\n\u003e               1000);\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Byte.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp2_ \u003d current[2] \u003d\u003d null ? (String) null : current[2].toString();\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[5],\n\u003e                 inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"CLERK\")};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e       if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp1_ \u003d current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1000_;\n\u003e                 if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp1_, v)) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return (Byte) ((Object[]) inputEnumerator.current())[0];\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1000_ \u003d new java.math.BigDecimal(\n\u003e               1000);\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Byte.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$Loc (stack truncated)\n1188,1195c6394,6411\n\u003c +--------+\n\u003c | DEPTNO |\n\u003c +--------+\n\u003c |     30 |\n\u003c |     10 |\n\u003c |     20 |\n\u003c +--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e order by sum(sal) filter (where job \u003d \u0027CLERK\u0027)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1196a6413,6798\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp2_ \u003d current[2] \u003d\u003d null ? (String) null : current[2].toString();\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[5],\n\u003e                 inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"CLERK\")};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e       if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.math.BigDecimal apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v[1]);\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return (Byte) ((Object[]) inputEnumerator.current())[0];\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Byte.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp2_ \u003d current[2] \u003d\u003d null ? (String) null : current[2].toString();\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 current[5],\n\u003e                 inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"CLERK\")};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e       if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.math.BigDecimal apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v[1]);\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return (Byte) ((Object[]) inputEnumerator.current())[0];\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Byte.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:50 (stack truncated)\n1207,1214c6809,6832\n\u003c +--------+----------+----------+---+\n\u003c | DEPTNO | S        | S1       | C |\n\u003c +--------+----------+----------+---+\n\u003c |     10 |  8750.00 |  8750.00 | 0 |\n\u003c |     20 | 10875.00 | 10875.00 | 3 |\n\u003c |     30 |  9400.00 |  9400.00 | 4 |\n\u003c +--------+----------+----------+---+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select dept.deptno,\n\u003e   sum(sal) filter (where 1 \u003c 2) as s,\n\u003e   sum(sal) as s1,\n\u003e   count(*) filter (where emp.ename \u003c dept.dname) as c\n\u003e from \"scott\".emp\n\u003e join \"scott\".dept using (deptno)\n\u003e group by dept.deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record5_7 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public java.math.BigDecimal f2;\n\u003e   public boolean f3;\n\u003e   public long f4;\n\u003e   public Record5_7() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_7)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record5_7) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record5_7) o).f1 \u0026\u0026 java.util.Objects.equals(this.f2, ((Record5_7) o).f2) \u0026\u0026 this.f3 \u003d\u003d ((Record5_7) o).f3 \u0026\u0026 this.f4 \u003d\u003d ((Record5_7) o).f4;\n\u003e   }\n1215a6834,7271\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_7 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp3_ \u003d current[3] \u003d\u003d null ? (String) null : current[3].toString();\n\u003e             final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[4],\n\u003e                 true,\n\u003e                 inp3_ !\u003d null \u0026\u0026 inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp3_, inp1_)};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         java.math.BigDecimal a1s0;\n\u003e         boolean a1s1;\n\u003e         a1s1 \u003d false;\n\u003e         a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e         long a2s0;\n\u003e         a2s0 \u003d 0L;\n\u003e         Record5_7 record0;\n\u003e         record0 \u003d new Record5_7();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         record0.f2 \u003d a1s0;\n\u003e         record0.f3 \u003d a1s1;\n\u003e         record0.f4 \u003d a2s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record5_7 apply(Record5_7 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e         if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2])) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp1_);\n\u003e         }\n\u003e         if (inp1_ !\u003d null) {\n\u003e           acc.f3 \u003d true;\n\u003e           acc.f2 \u003d acc.f2.add(inp1_);\n\u003e         }\n\u003e         if (org.apache.calcite.runtime.SqlFunctions.toBoolean(in[3])) {\n\u003e           acc.f4++;\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record5_7 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record5_7) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(byte key, Record5_7 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e             acc.f3 ? acc.f2 : (java.math.BigDecimal) null,\n\u003e             acc.f4};\n\u003e       }\n\u003e       public Object[] apply(Byte key, Record5_7 acc) {\n\u003e         return apply(\n\u003e           key.byteValue(),\n\u003e           acc);\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record5_7) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record5_7 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public java.math.BigDecimal f2;\n\u003e   public boolean f3;\n\u003e   public long f4;\n\u003e   public Record5_7() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_7)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record5_7) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record5_7) o).f1 \u0026\u0026 java.util.Objects.equals(this.f2, ((Record5_7) o).f2) \u0026\u0026 this.f3 \u003d\u003d ((Record5_7) o).f3 \u0026\u0026 this.f4 \u003d\u003d ((Record5_7) o).f4;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_7 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerat (stack truncated)\n1223,1230c7279,7295\n\u003c +--------+-----+\n\u003c | DEPTNO | CDJ |\n\u003c +--------+-----+\n\u003c |     10 |   3 |\n\u003c |     20 |   3 |\n\u003c |     30 |   3 |\n\u003c +--------+-----+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno,\n\u003e  count(distinct job) as cdj\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n1231a7297,7634\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return new Object[] {\n\u003e             key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e             (Byte) key.get(1)};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     ).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[1];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         if (!(in[0] \u003d\u003d null || in[0].toString() \u003d\u003d null)) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] a0) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7]);\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return new Object[] {\n\u003e             key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e             (Byte) key.get(1)};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     ).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[1];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         if (!(in[0] \u003d\u003d null || in[0].toString() \u003d\u003d null)) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n1238,1245c7641,7657\n\u003c +--------+-----+\n\u003c | DEPTNO | CDJ |\n\u003c +--------+-----+\n\u003c |     10 |   3 |\n\u003c |     20 |   3 |\n\u003c |     30 |   2 |\n\u003c +--------+-----+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno,\n\u003e  count(distinct job) filter (where job \u003c\u003e \u0027SALESMAN\u0027) as cdj\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n1246a7659,7970\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp2_ \u003d current[2] \u003d\u003d null ? (String) null : current[2].toString();\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ne(inp2_, \"SALESMAN\") ? inp2_ : (String) null};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[0];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         if (!(in[1] \u003d\u003d null || in[1].toString() \u003d\u003d null)) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp2_ \u003d current[2] \u003d\u003d null ? (String) null : current[2].toString();\n\u003e             return new Object[] {\n\u003e                 current[7],\n\u003e                 inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ne(inp2_, \"SALESMAN\") ? inp2_ : (String) null};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[0];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         if (!(in[1] \u003d\u003d null || in[1].toString() \u003d\u003d null)) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n1254,1261c7978,7993\n\u003c +----+---+\n\u003c | CD | C |\n\u003c +----+---+\n\u003c |  1 | 3 |\n\u003c |  1 | 5 |\n\u003c |  1 | 6 |\n\u003c +----+---+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(distinct deptno) as cd, count(*) as c\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n1262a7995,8514\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record3_8 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public Record3_8() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_8)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_8) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record3_8) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_8) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_8 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           0L};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u003d\u003d 0L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 9223372036854775807L;\n\u003e       Record3_8 record0;\n\u003e       record0 \u003d new Record3_8();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_8 apply(Record3_8 acc, Object[] in) {\n\u003e       final boolean inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2]);\n\u003e       if ((Byte) in[0] !\u003d null \u0026\u0026 inp2_) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       if (inp2_) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, org.apache.calcite.runtime.SqlFunctions.toLong(in[1]));\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_8 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_8) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record3_8 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? Long.valueOf(acc.f1) : (Long) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record3_8) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e (                  (Long) current[2]).longValue()};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record3_8 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public Record3_8() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_8)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_8) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record3_8) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_8) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_8 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           0L};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u003d\u003d 0L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 9223372036854775807L;\n\u003e       Record3_8 record0;\n\u003e       record0 \u003d new Record3_8();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_8 apply(Record3_8 acc, Object[] in) {\n\u003e       final boolean inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2]);\n\u003e       if ((Byte) in[0] !\u003d null \u0026\u0026 inp2_) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       if (inp2_) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, org.apache.calcite.runtime.SqlFunctions.toLong(in[1]));\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_8 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_8) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record3_8 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? Long.valueOf(acc.f1) : (Long) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record3_8) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e (                  (Long) current[2]).longValue()};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepa (stack truncated)\n1268,1276c8520,8535\n\u003c +----+---+\n\u003c | CD | C |\n\u003c +----+---+\n\u003c |  1 | 3 |\n\u003c |  1 | 5 |\n\u003c |  1 | 6 |\n\u003c |  3 | 3 |\n\u003c +----+---+\n\u003c (4 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(distinct deptno) as cd, count(*) as c\n\u003e from \"scott\".emp\n\u003e group by cube(deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n1277a8537,9036\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record3_8 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public Record3_8() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_8)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_8) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record3_8) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_8) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_8 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           0L};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u003d\u003d 0L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(child, java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Byte) a0[0], false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 9223372036854775807L;\n\u003e       Record3_8 record0;\n\u003e       record0 \u003d new Record3_8();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_8 apply(Record3_8 acc, Object[] in) {\n\u003e       final boolean inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2]);\n\u003e       if ((Byte) in[0] !\u003d null \u0026\u0026 inp2_) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       if (inp2_) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, org.apache.calcite.runtime.SqlFunctions.toLong(in[1]));\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_8 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_8) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_8 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(1)) ? (Byte) null : (Byte) key.get(0),\n\u003e           acc.f0,\n\u003e           acc.f2 ? Long.valueOf(acc.f1) : (Long) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_8) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e (                  (Long) current[2]).longValue()};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record3_8 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public Record3_8() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_8)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_8) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record3_8) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_8) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_8 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           0L};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u003d\u003d 0L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(child, java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Byte) a0[0], false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 9223372036854775807L;\n\u003e       Record3_8 record0;\n\u003e       record0 \u003d new Record3_8();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_8 apply(Record3_8 acc, Object[] in) {\n\u003e       final boolean inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[2]);\n\u003e       if ((Byte) in[0] !\u003d null \u0026\u0026 inp2_) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       if (inp2_) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, org.apache.calcite.runtime.SqlFunctions.toLong(in[1]));\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_8 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_8) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_8 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(1)) ? (Byte) null : (Byte) key.get(0),\n\u003e           acc.f0,\n\u003e           acc.f2 ? Long.valueOf(acc.f1) : (Long) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_8) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e          (stack truncated)\n1283,1290c9042,9057\n\u003c +--------+---+\n\u003c | DEPTNO | C |\n\u003c +--------+---+\n\u003c |     10 | 1 |\n\u003c |     20 | 1 |\n\u003c |     30 | 1 |\n\u003c +--------+---+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno, count(distinct deptno) as c\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n1291a9059,9374\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[7];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Byte apply(Byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return key;\n\u003e       }\n\u003e       public Byte apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     ).groupBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Byte in) {\n\u003e         if (in !\u003d null) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Byte) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[7];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e         return acc;\n\u003e       }\n\u003e       public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (org.apache.calcite.runtime.Unit) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Byte apply(Byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e         return key;\n\u003e       }\n\u003e       public Byte apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (org.apache.calcite.runtime.Unit) acc);\n\u003e       }\n\u003e     }\n\u003e     ).groupBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Byte in) {\n\u003e         if (in !\u003d null) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Byte) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record1_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n1297,1304c9380,9395\n\u003c +---+\n\u003c | C |\n\u003c +---+\n\u003c | 1 |\n\u003c | 1 |\n\u003c | 1 |\n\u003c +---+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(distinct deptno) as c\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n1305a9397,9760\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Byte apply(Byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public Byte apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   ).groupBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Byte in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Byte) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toLong(((Object[]) inputEnumerator.current())[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[7];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Byte apply(Byte key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public Byte apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   ).groupBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Byte in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Byte) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               return org.apache.calcite.runtime.SqlFunctions.toLong(((Object[]) inputEnumerator.current())[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n1313,1320c9768,9785\n\u003c +--------+---+---+\n\u003c | DEPTNO | J | M |\n\u003c +--------+---+---+\n\u003c |     10 | 3 | 2 |\n\u003c |     20 | 3 | 4 |\n\u003c |     30 | 3 | 2 |\n\u003c +--------+---+---+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno,\n\u003e  count(distinct job) as j, count(distinct mgr) as m\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_3 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_3() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_3)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_3) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_3) o).f1;\n\u003e   }\n1321a9787,10182\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_3 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), null, (Byte) a0[7], false, true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Short) a0[3], (Byte) a0[7], true, false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? (Short) null : (Short) key.get(1),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? (Byte) null : (Byte) key.get(2),\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 4L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final long inp3_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[3]);\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 inp3_ \u003d\u003d 2L,\n\u003e                 inp3_ \u003d\u003d 4L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[2];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         long a1s0;\n\u003e         a1s0 \u003d 0L;\n\u003e         Record2_3 record0;\n\u003e         record0 \u003d new Record2_3();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a1s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_3 apply(Record2_3 acc, Object[] in) {\n\u003e         if (!(in[0] \u003d\u003d null || in[0].toString() \u003d\u003d null) \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[3])) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         if ((Short) in[1] !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[4])) {\n\u003e           acc.f1++;\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_3 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_3) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record2_3 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0,\n\u003e             acc.f1};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record2_3) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_3 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_3() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_3)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_3) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_3) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_3 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), null, (Byte) a0[7], false, true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Short) a0[3], (Byte) a0[7], true, false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? (Short) null : (Short) key.get(1),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? (Byte) null : (Byte) key.get(2),\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 4L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final long inp3_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[3]);\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 inp3_ \u003d\u003d 2L,\n\u003e                 inp3_ \u003d\u003d 4L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[2];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         long a1s0;\n\u003e         a1s0 \u003d 0L;\n\u003e         Record2_3 record0;\n\u003e         record0 \u003d new Record2_3();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a1s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_3 apply(Record2_3 acc, Object[] in) {\n\u003e         if (!(in[0] \u003d\u003d null || in[0].toString() \u003d\u003d null) \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[3])) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         if ((Short) in[1] !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[4])) {\n\u003e           acc.f1++;\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_3 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_3) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record2_3 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0,\n\u003e             acc.f1};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record2_3) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 170: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.sch (stack truncated)\n1332,1339c10193,10214\n\u003c +--------+----+---+---+----------+\n\u003c | DEPTNO | DJ | J | M | S        |\n\u003c +--------+----+---+---+----------+\n\u003c |     10 |  3 | 3 | 2 |  8750.00 |\n\u003c |     20 |  3 | 5 | 4 | 10875.00 |\n\u003c |     30 |  3 | 6 | 2 |  9400.00 |\n\u003c +--------+----+---+---+----------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno,\n\u003e  count(distinct job) as dj,\n\u003e  count(job) as j,\n\u003e  count(distinct mgr) as m,\n\u003e  sum(sal) as s\n\u003e from \"scott\".emp\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n1340a10216,10663\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record6_10 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public long f3;\n\u003e   public java.math.BigDecimal f4;\n\u003e   public boolean f5;\n\u003e   public Record6_10() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record6_10)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record6_10) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record6_10) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record6_10) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record6_10) o).f3 \u0026\u0026 java.util.Objects.equals(this.f4, ((Record6_10) o).f4) \u0026\u0026 this.f5 \u003d\u003d ((Record6_10) o).f5;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record6_10 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f5, that.f5);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \", f5\u003d\" + this.f5 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), null, (Byte) a0[7], false, true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Short) a0[3], (Byte) a0[7], true, false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, null, (Byte) a0[7], true, true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       if (!(in[2] \u003d\u003d null || in[2].toString() \u003d\u003d null)) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? (Short) null : (Short) key.get(1),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? (Byte) null : (Byte) key.get(2),\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null,\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? 4L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final long inp5_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[5]);\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 inp5_ \u003d\u003d 1L,\n\u003e                 inp5_ \u003d\u003d 2L,\n\u003e                 inp5_ \u003d\u003d 3L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 9223372036854775807L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       java.math.BigDecimal a3s0;\n\u003e       boolean a3s1;\n\u003e       a3s1 \u003d false;\n\u003e       a3s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record6_10 record0;\n\u003e       record0 \u003d new Record6_10();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       record0.f4 \u003d a3s0;\n\u003e       record0.f5 \u003d a3s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record6_10 apply(Record6_10 acc, Object[] in) {\n\u003e       if (!(in[1] \u003d\u003d null || in[1].toString() \u003d\u003d null) \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[5])) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       final boolean inp7_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[7]);\n\u003e       if (inp7_) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, org.apache.calcite.runtime.SqlFunctions.toLong(in[3]));\n\u003e       }\n\u003e       if ((Short) in[2] !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[6])) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       final java.math.BigDecimal inp4_ \u003d in[4] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[4]);\n\u003e       if (inp4_ !\u003d null \u0026\u0026 inp7_) {\n\u003e         acc.f5 \u003d true;\n\u003e         acc.f4 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f4, inp4_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record6_10 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record6_10) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record6_10 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? Long.valueOf(acc.f1) : (Long) null,\n\u003e           acc.f3,\n\u003e           acc.f5 ? acc.f4 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record6_10) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e (                  (Long) current[2]).longValue(),\n\u003e                   current[3],\n\u003e                   current[4]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record6_10 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public long f3;\n\u003e   public java.math.BigDecimal f4;\n\u003e   public boolean f5;\n\u003e   public Record6_10() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record6_10)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record6_10) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record6_10) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record6_10) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record6_10) o).f3 \u0026\u0026 java.util.Objects.equals(this.f4, ((Record6_10) o).f4) \u0026\u0026 this.f5 \u003d\u003d ((Record6_10) o).f5;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record6_10 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast (stack truncated)\n1349,1354c10672,10691\n\u003c +----+----+---+----------+\n\u003c | DJ | J  | M | S        |\n\u003c +----+----+---+----------+\n\u003c |  5 | 14 | 6 | 29025.00 |\n\u003c +----+----+---+----------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(distinct job) as dj,\n\u003e  count(job) as j,\n\u003e  count(distinct mgr) as m,\n\u003e  sum(sal) as s\n\u003e from \"scott\".emp\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n1355a10693,11147\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record6_10 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public long f3;\n\u003e   public java.math.BigDecimal f4;\n\u003e   public boolean f5;\n\u003e   public Record6_10() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record6_10)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record6_10) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record6_10) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record6_10) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record6_10) o).f3 \u0026\u0026 java.util.Objects.equals(this.f4, ((Record6_10) o).f4) \u0026\u0026 this.f5 \u003d\u003d ((Record6_10) o).f5;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record6_10 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f5, that.f5);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \", f5\u003d\" + this.f5 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), null, false, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Short) a0[3], true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, null, true, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       if (!(in[2] \u003d\u003d null || in[2].toString() \u003d\u003d null)) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (Short) null : (Short) key.get(1),\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null,\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final long inp4_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[4]);\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 inp4_ \u003d\u003d 1L,\n\u003e                 inp4_ \u003d\u003d 2L,\n\u003e                 inp4_ \u003d\u003d 3L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 9223372036854775807L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       java.math.BigDecimal a3s0;\n\u003e       boolean a3s1;\n\u003e       a3s1 \u003d false;\n\u003e       a3s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record6_10 record0;\n\u003e       record0 \u003d new Record6_10();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       record0.f4 \u003d a3s0;\n\u003e       record0.f5 \u003d a3s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record6_10 apply(Record6_10 acc, Object[] in) {\n\u003e       if (!(in[0] \u003d\u003d null || in[0].toString() \u003d\u003d null) \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[4])) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       final boolean inp6_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[6]);\n\u003e       if (inp6_) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, org.apache.calcite.runtime.SqlFunctions.toLong(in[2]));\n\u003e       }\n\u003e       if ((Short) in[1] !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[5])) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null \u0026\u0026 inp6_) {\n\u003e         acc.f5 \u003d true;\n\u003e         acc.f4 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f4, inp3_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record6_10 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record6_10) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record6_10 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f2 ? Long.valueOf(acc.f1) : (Long) null,\n\u003e           acc.f3,\n\u003e           acc.f5 ? acc.f4 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record6_10) acc);\n\u003e     }\n\u003e   }\n\u003e   ));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e (                  (Long) current[1]).longValue(),\n\u003e                   current[2],\n\u003e                   current[3]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record6_10 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public long f3;\n\u003e   public java.math.BigDecimal f4;\n\u003e   public boolean f5;\n\u003e   public Record6_10() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record6_10)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record6_10) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record6_10) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record6_10) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record6_10) o).f3 \u0026\u0026 java.util.Objects.equals(this.f4, ((Record6_10) o).f4) \u0026\u0026 this.f5 \u003d\u003d ((Record6_10) o).f5;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record6_10 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f5, that.f5);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \", f5\u003d\" + this.f5 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.lin (stack truncated)\n1362,1367c11154,11168\n\u003c +-------------------+---+\n\u003c | A                 | C |\n\u003c +-------------------+---+\n\u003c | 733.3333333333333 | 3 |\n\u003c +-------------------+---+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select avg(comm) as a, count(comm) as c from \"scott\".emp where empno \u003c 7844\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_11 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public long f1;\n\u003e   public Record2_11() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_11)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_11) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_11) o).f1;\n\u003e   }\n1368a11170,11551\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_11 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((int) org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]) \u003c 7844) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_11 record0;\n\u003e       record0 \u003d new Record2_11();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_11 apply(Record2_11 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f0 \u003d acc.f0.add(inp6_);\n\u003e       }\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_11 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_11) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_11 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_11) acc);\n\u003e     }\n\u003e   }\n\u003e   ));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               final java.math.BigDecimal v1 \u003d new java.math.BigDecimal(\n\u003e                 inp1_);\n\u003e               return new Object[] {\n\u003e                   inp1_ \u003d\u003d 0L || inp0_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.divide(inp0_, v1),\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_11 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public long f1;\n\u003e   public Record2_11() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_11)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_11) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_11) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_11 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((int) org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]) \u003c 7844) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_11 record0;\n\u003e       record0 \u003d new Record2_11();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_11 apply(Record2_11 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f0 \u003d acc.f0.add(inp6_);\n\u003e       }\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_11 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_11) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_11 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_11) acc);\n\u003e     }\n\u003e   }\n\u003e   ));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               final java.math.BigDecimal v1 \u003d new java.math.BigDecimal(\n\u003e                 inp1_);\n\u003e               return new Object[] {\n\u003e                   inp1_ \u003d\u003d 0L || inp0_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.divide(inp0_, v1),\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclared (stack truncated)\n1378,1384c11561,11580\n\u003c +--------+----+---+\n\u003c | DEPTNO | CF | C |\n\u003c +--------+----+---+\n\u003c |     10 |  1 | 3 |\n\u003c |     30 |  1 | 6 |\n\u003c +--------+----+---+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno, count(*) filter (where job \u003d \u0027CLERK\u0027) as cf, count(*) as c\n\u003e from (\n\u003e   select * from \"scott\".emp where deptno \u003c 20\n\u003e   union all\n\u003e   select * from \"scott\".emp where deptno \u003e 20)\n\u003e group by deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_3 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_3() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_3)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_3) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_3) o).f1;\n\u003e   }\n1385a11582,12010\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_3 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e               if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003c 20) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e               if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003e 20) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child0.concat(child1);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp0_ \u003d current[0] \u003d\u003d null ? (String) null : current[0].toString();\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp0_, \"CLERK\")};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[0];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         long a1s0;\n\u003e         a1s0 \u003d 0L;\n\u003e         Record2_3 record0;\n\u003e         record0 \u003d new Record2_3();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a1s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_3 apply(Record2_3 acc, Object[] in) {\n\u003e         if (org.apache.calcite.runtime.SqlFunctions.toBoolean(in[1])) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         acc.f1++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_3 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_3) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record2_3 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0,\n\u003e             acc.f1};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record2_3) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_3 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_3() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_3)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_3) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_3) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_3 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e               if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003c 20) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e               if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003e 20) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child0.concat(child1);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final String inp0_ \u003d current[0] \u003d\u003d null ? (String) null : current[0].toString();\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp0_, \"CLERK\")};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] a0) {\n\u003e         return (Byte) a0[0];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         long a1s0;\n\u003e         a1s0 \u003d 0L;\n\u003e         Record2_3 record0;\n\u003e         record0 \u003d new Record2_3();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a1s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_3 apply(Record2_3 acc, Object[] in) {\n\u003e         if (org.apache.calcite.runtime.SqlFunctions.toBoolean(in[1])) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         acc.f1++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_3 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_3) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte key, Record2_3 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0,\n\u003e             acc.f1};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Byte) key,\n\u003e           (Record2_3) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.j (stack truncated)\n1399,1404c12024,12038\n\u003c +--------+\n\u003c | EXPR$0 |\n\u003c +--------+\n\u003c |     14 |\n\u003c +--------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*)\n\u003e from \"scott\".emp join \"scott\".dept using (deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n1405a12040,12436\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[1];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Record1_0 acc) {\n\u003e         return acc.f0;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[1];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Record1_0 acc) {\n\u003e         return acc.f0;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompi (stack truncated)\n1418,1423c12449,12464\n\u003c +----------+\n\u003c | EXPR$0   |\n\u003c +----------+\n\u003c | 29025.00 |\n\u003c +----------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select sum(sal)\n\u003e from \"scott\".emp join \"scott\".dept using (deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1424a12466,12872\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[2];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1],\n\u003e             right[2]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record2_1 record0;\n\u003e         record0 \u003d new Record2_1();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e         if (inp2_ !\u003d null) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp2_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_1 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_1) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.math.BigDecimal apply(Record2_1 acc) {\n\u003e         return acc.f1 ? acc.f0 : (java.math.BigDecimal) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_1) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[2];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1],\n\u003e             right[2]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record2_1 record0;\n\u003e         record0 \u003d new Record2_1();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e         if (inp2_ !\u003d null) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp2_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_1 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_1) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.math.BigDecimal apply(Record2_1 acc) {\n\u003e         return acc.f1 ? acc.f0 : (java.math.BigDecimal) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_1) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  a (stack truncated)\n1438,1445c12886,12902\n\u003c +----------+\n\u003c | EXPR$0   |\n\u003c +----------+\n\u003c | 10875.00 |\n\u003c |  8750.00 |\n\u003c |  9400.00 |\n\u003c +----------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select sum(sal)\n\u003e from \"scott\".emp join \"scott\".dept using (deptno)\n\u003e group by emp.deptno, dept.deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1446a12904,13361\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), (Byte) a0[3]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0)),\n\u003e           (Byte) key.get(1),\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[2]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), (Byte) a0[3]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0)),\n\u003e           (Byte) key.get(1),\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[2]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.pr (stack truncated)\n1461,1468c13376,13392\n\u003c +----------+\n\u003c | EXPR$0   |\n\u003c +----------+\n\u003c | 10875.00 |\n\u003c |  8750.00 |\n\u003c |  9400.00 |\n\u003c +----------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select sum(sal)\n\u003e from \"scott\".emp join \"scott\".dept using (deptno)\n\u003e group by emp.deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1469a13394,13855\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[3];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[3];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.execute (stack truncated)\n1484,1491c13870,13886\n\u003c +---------+\n\u003c | EXPR$0  |\n\u003c +---------+\n\u003c | 1300.00 |\n\u003c |  800.00 |\n\u003c |  950.00 |\n\u003c +---------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select min(sal)\n\u003e from \"scott\".emp join \"scott\".dept using (deptno)\n\u003e group by emp.deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1492a13888,14348\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[3];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[3];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.ava (stack truncated)\n1506,1511c14362,14378\n\u003c +----+----------+\n\u003c | C  | S        |\n\u003c +----+----------+\n\u003c | 14 | 29025.00 |\n\u003c +----+----------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c, sum(sal) as s\n\u003e from \"scott\".emp join \"scott\".dept using (deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n1512a14380,14799\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[2];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1],\n\u003e             right[2]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         java.math.BigDecimal a1s0;\n\u003e         boolean a1s1;\n\u003e         a1s1 \u003d false;\n\u003e         a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record3_9 record0;\n\u003e         record0 \u003d new Record3_9();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a1s0;\n\u003e         record0.f2 \u003d a1s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e         if (inp2_ !\u003d null) {\n\u003e           acc.f2 \u003d true;\n\u003e           acc.f1 \u003d acc.f1.add(inp2_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record3_9 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record3_9) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Object[] apply(Record3_9 acc) {\n\u003e         return new Object[] {\n\u003e             acc.f0,\n\u003e             acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record3_9) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(byte v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Byte v1) {\n\u003e         return apply(\n\u003e           v1.byteValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Byte) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[2];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Byte left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left,\n\u003e             right[0],\n\u003e             right[1],\n\u003e             right[2]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Byte) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         java.math.BigDecimal a1s0;\n\u003e         boolean a1s1;\n\u003e         a1s1 \u003d false;\n\u003e         a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record3_9 record0;\n\u003e         record0 \u003d new Record3_9();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a1s0;\n\u003e         record0.f2 \u003d a1s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e         if (inp2_ !\u003d null) {\n\u003e           acc.f2 \u003d true;\n\u003e           acc.f1 \u003d acc.f1.add(inp2_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record3_9 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record3_9) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Object[] apply(Record3_9 acc) {\n\u003e         return new Object[] {\n\u003e             acc.f0,\n\u003e             acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record3_9) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 51, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  a (stack truncated)\n1525,1532c14812,14828\n\u003c +---+----------+\n\u003c | C | S        |\n\u003c +---+----------+\n\u003c | 3 |  8750.00 |\n\u003c | 5 | 10875.00 |\n\u003c | 6 |  9400.00 |\n\u003c +---+----------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c, sum(sal) as s\n\u003e from \"scott\".emp join \"scott\".dept using (deptno) group by emp.deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n1533a14830,15309\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[3];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[3];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java (stack truncated)\n1548,1561c15324,15340\n\u003c +---+---------+\n\u003c | C | S       |\n\u003c +---+---------+\n\u003c | 1 | 1300.00 |\n\u003c | 1 | 2450.00 |\n\u003c | 1 | 2850.00 |\n\u003c | 1 | 2975.00 |\n\u003c | 1 | 5000.00 |\n\u003c | 1 |  950.00 |\n\u003c | 2 | 1900.00 |\n\u003c | 2 | 6000.00 |\n\u003c | 4 | 5600.00 |\n\u003c +---+---------+\n\u003c (9 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c, sum(sal) as s\n\u003e from \"scott\".emp join \"scott\".dept using (deptno) group by emp.job, dept.deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n1562a15342,15799\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), a0[2] \u003d\u003d null ? (String) null : a0[2].toString());\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp3_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0)),\n\u003e           key.get(1) \u003d\u003d null ? (String) null : key.get(1).toString(),\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[2],\n\u003e                   current[3]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), a0[2] \u003d\u003d null ? (String) null : a0[2].toString());\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp3_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0)),\n\u003e           key.get(1) \u003d\u003d null ? (String) null : key.get(1).toString(),\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e     (stack truncated)\n1576,1585c15813,15829\n\u003c +---+---------+\n\u003c | C | S       |\n\u003c +---+---------+\n\u003c | 1 | 5000.00 |\n\u003c | 2 | 6000.00 |\n\u003c | 3 | 8275.00 |\n\u003c | 4 | 4150.00 |\n\u003c | 4 | 5600.00 |\n\u003c +---+---------+\n\u003c (5 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c, sum(sal) as s\n\u003e from \"scott\".emp join \"scott\".dept using (deptno) group by emp.job\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n1586a15831,16312\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] a0) {\n\u003e       return a0[2] \u003d\u003d null ? (String) null : a0[2].toString();\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp3_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(String key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (String) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] a0) {\n\u003e       return a0[2] \u003d\u003d null ? (String) null : a0[2].toString();\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp3_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(String key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (String) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePrepari (stack truncated)\n1600,1613c16326,16342\n\u003c +---+---------+\n\u003c | C | S       |\n\u003c +---+---------+\n\u003c | 1 | 5000.00 |\n\u003c | 2 | 6000.00 |\n\u003c | 4 | 5600.00 |\n\u003c | 1 | 1300.00 |\n\u003c | 1 | 2450.00 |\n\u003c | 1 | 2850.00 |\n\u003c | 1 | 2975.00 |\n\u003c | 1 |  950.00 |\n\u003c | 2 | 1900.00 |\n\u003c +---+---------+\n\u003c (9 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c, sum(sal) as s\n\u003e from \"scott\".emp join \"scott\".dept using (deptno) group by emp.job, dept.deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n1614a16344,16801\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), a0[2] \u003d\u003d null ? (String) null : a0[2].toString());\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp3_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0)),\n\u003e           key.get(1) \u003d\u003d null ? (String) null : key.get(1).toString(),\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[2],\n\u003e                   current[3]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toByte(a0[0]), a0[2] \u003d\u003d null ? (String) null : a0[2].toString());\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp3_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toByte(key.get(0)),\n\u003e           key.get(1) \u003d\u003d null ? (String) null : key.get(1).toString(),\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e     (stack truncated)\n1628,1644c16815,16831\n\u003c +---+---------+\n\u003c | C | S       |\n\u003c +---+---------+\n\u003c | 1 | 5000.00 |\n\u003c | 2 | 6000.00 |\n\u003c | 1 | 1100.00 |\n\u003c | 1 | 1300.00 |\n\u003c | 1 | 1500.00 |\n\u003c | 1 | 1600.00 |\n\u003c | 1 | 2450.00 |\n\u003c | 1 | 2850.00 |\n\u003c | 1 | 2975.00 |\n\u003c | 1 |  800.00 |\n\u003c | 1 |  950.00 |\n\u003c | 2 | 2500.00 |\n\u003c +---+---------+\n\u003c (12 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c, sum(sal) as s\n\u003e from \"scott\".emp join \"scott\".dept using (deptno) group by emp.sal\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n1645a16833,17309\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.math.BigDecimal apply(Object[] a0) {\n\u003e       return a0[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(a0[2]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(java.math.BigDecimal key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (java.math.BigDecimal) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_9 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public Record3_9() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_9)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_9) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record3_9) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record3_9) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_9 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[2];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.math.BigDecimal apply(Object[] a0) {\n\u003e       return a0[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(a0[2]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record3_9 record0;\n\u003e       record0 \u003d new Record3_9();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_9 apply(Record3_9 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d acc.f1.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_9 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_9) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(java.math.BigDecimal key, Record3_9 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (java.math.BigDecimal) key,\n\u003e         (Record3_9) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBinda (stack truncated)\n1659,1664c17323,17338\n\u003c +---+\n\u003c | S |\n\u003c +---+\n\u003c |   |\n\u003c +---+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select sum(e.sal) as s\n\u003e from \"scott\".emp e join \"scott\".emp m on e.mgr \u003d e.empno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1665a17340,17748\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final Short inp3_ \u003d (Short) current[3];\n\u003e               if (inp3_ !\u003d null \u0026\u0026 inp3_.shortValue() \u003d\u003d org.apache.calcite.runtime.SqlFunctions.toShort(current[0])) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(short v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e       }\n\u003e       public Object apply(Short v1) {\n\u003e         return apply(\n\u003e           v1.shortValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Short) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Object[] left, Short right) {\n\u003e         return new Object[] {\n\u003e             left[0],\n\u003e             left[1],\n\u003e             left[2],\n\u003e             right};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Object[]) left,\n\u003e           (Short) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record2_1 record0;\n\u003e         record0 \u003d new Record2_1();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e         if (inp2_ !\u003d null) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp2_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_1 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_1) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.math.BigDecimal apply(Record2_1 acc) {\n\u003e         return acc.f1 ? acc.f0 : (java.math.BigDecimal) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_1) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final Short inp3_ \u003d (Short) current[3];\n\u003e               if (inp3_ !\u003d null \u0026\u0026 inp3_.shortValue() \u003d\u003d org.apache.calcite.runtime.SqlFunctions.toShort(current[0])) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(short v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e       }\n\u003e       public Object apply(Short v1) {\n\u003e         return apply(\n\u003e           v1.shortValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Short) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Object[] left, Short right) {\n\u003e         return new Object[] {\n\u003e             left[0],\n\u003e             left[1],\n\u003e             left[2],\n\u003e             right};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Object[]) left,\n\u003e           (Short) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record2_1 record0;\n\u003e         record0 \u003d new Record2_1();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e         if (inp2_ !\u003d null) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp2_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_1 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_1) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.math.BigDecimal apply(Record2_1 acc) {\n\u003e         return acc.f1 ? acc.f0 : (java.math.BigDecimal) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_1) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvoc (stack truncated)\n1671,1676c17754,17769\n\u003c +----------+\n\u003c | S        |\n\u003c +----------+\n\u003c | 24025.00 |\n\u003c +----------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select sum(e.sal) as s\n\u003e from \"scott\".emp e join \"scott\".emp m on e.mgr \u003d m.empno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1677a17771,18179\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Short apply(Object[] v1) {\n\u003e         return (Short) v1[1];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public short apply(short v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Short v1) {\n\u003e         return apply(\n\u003e           v1.shortValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Short) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Object[] left, Short right) {\n\u003e         return new Object[] {\n\u003e             left[0],\n\u003e             left[1],\n\u003e             left[2],\n\u003e             right};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Object[]) left,\n\u003e           (Short) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record2_1 record0;\n\u003e         record0 \u003d new Record2_1();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e         if (inp2_ !\u003d null) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp2_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_1 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_1) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.math.BigDecimal apply(Record2_1 acc) {\n\u003e         return acc.f1 ? acc.f0 : (java.math.BigDecimal) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_1) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Short apply(Object[] v1) {\n\u003e         return (Short) v1[1];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public short apply(short v1) {\n\u003e         return v1;\n\u003e       }\n\u003e       public Object apply(Short v1) {\n\u003e         return apply(\n\u003e           v1.shortValue());\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Short) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Object[] left, Short right) {\n\u003e         return new Object[] {\n\u003e             left[0],\n\u003e             left[1],\n\u003e             left[2],\n\u003e             right};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Object[]) left,\n\u003e           (Short) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         java.math.BigDecimal a0s0;\n\u003e         boolean a0s1;\n\u003e         a0s1 \u003d false;\n\u003e         a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e         Record2_1 record0;\n\u003e         record0 \u003d new Record2_1();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a0s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e         final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e         if (inp2_ !\u003d null) {\n\u003e           acc.f1 \u003d true;\n\u003e           acc.f0 \u003d acc.f0.add(inp2_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record2_1 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record2_1) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.math.BigDecimal apply(Record2_1 acc) {\n\u003e         return acc.f1 ? acc.f0 : (java.math.BigDecimal) null;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record2_1) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java: (stack truncated)\n1685,1692c18187,18205\n\u003c +----------+----+----+\n\u003c | SS       | CS | CM |\n\u003c +----------+----+----+\n\u003c | 26250.00 |  9 |  6 |\n\u003c | 54375.00 | 25 | 25 |\n\u003c | 56400.00 | 36 | 36 |\n\u003c +----------+----+----+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select sum(e.sal) as ss, count(e.sal) as cs, count(e.mgr) as cm\n\u003e from \"scott\".emp e\n\u003e join \"scott\".emp m on e.deptno \u003d m.deptno\n\u003e group by e.deptno, m.deptno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_12 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public long f1;\n\u003e   public long f2;\n\u003e   public Record3_12() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_12)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record3_12) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record3_12) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_12) o).f2;\n\u003e   }\n1693a18207,18680\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_12 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Byte) a0[3], (Byte) a0[5]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record3_12 record0;\n\u003e       record0 \u003d new Record3_12();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_12 apply(Record3_12 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f0 \u003d acc.f0.add(inp2_);\n\u003e       }\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       if ((Short) in[1] !\u003d null) {\n\u003e         acc.f2++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_12 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_12) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_12 acc) {\n\u003e       return new Object[] {\n\u003e           (Byte) key.get(0),\n\u003e           (Byte) key.get(1),\n\u003e           acc.f0,\n\u003e           acc.f1,\n\u003e           acc.f2};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_12) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003d\u003d 0L ? (java.math.BigDecimal) null : current[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[2]),\n\u003e                   current[3],\n\u003e                   current[4]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_12 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public long f1;\n\u003e   public long f2;\n\u003e   public Record3_12() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_12)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record3_12) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record3_12) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_12) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_12 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3],\n\u003e                 current[5],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[3];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Byte) a0[3], (Byte) a0[5]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record3_12 record0;\n\u003e       record0 \u003d new Record3_12();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_12 apply(Record3_12 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f0 \u003d acc.f0.add(inp2_);\n\u003e       }\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       if ((Short) in[1] !\u003d null) {\n\u003e         acc.f2++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_12 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_12) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record3_12 acc) {\n\u003e       return new Object[] {\n\u003e           (Byte) key.get(0),\n\u003e           (Byte) key.get(1),\n\u003e           acc.f0,\n\u003e           acc.f1,\n\u003e           acc.f2};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record3_12) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003d\u003d 0 (stack truncated)\n1700,1710c18687,18703\n\u003c +---------+\n\u003c | S       |\n\u003c +---------+\n\u003c | 1100.00 |\n\u003c | 1300.00 |\n\u003c | 6000.00 |\n\u003c | 6550.00 |\n\u003c |  800.00 |\n\u003c | 8275.00 |\n\u003c +---------+\n\u003c (6 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select sum(e.sal) as s\n\u003e from \"scott\".emp e join \"scott\".emp m on e.mgr \u003d m.empno\n\u003e group by m.empno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1711a18705,19176\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Short apply(Object[] v1) {\n\u003e       return (Short) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(short v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Short v1) {\n\u003e       return apply(\n\u003e         v1.shortValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Short right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(a0[3]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(short key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Short key, Record2_1 acc) {\n\u003e       return apply(\n\u003e         key.shortValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Short) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toShort(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Short apply(Object[] v1) {\n\u003e       return (Short) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(short v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Short v1) {\n\u003e       return apply(\n\u003e         v1.shortValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Short) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Short right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Short) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(a0[3]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp2_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(short key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Short key, Record2_1 acc) {\n\u003e       return apply(\n\u003e         key.shortValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Short) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org (stack truncated)\n1719,1729c19184,19200\n\u003c +----------+\n\u003c | S        |\n\u003c +----------+\n\u003c | 14250.00 |\n\u003c | 15000.00 |\n\u003c |  2450.00 |\n\u003c |  3000.00 |\n\u003c |  3000.00 |\n\u003c |  5950.00 |\n\u003c +----------+\n\u003c (6 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select sum(m.sal) as s\n\u003e from \"scott\".emp e join \"scott\".emp m on e.mgr \u003d m.empno\n\u003e group by m.empno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1730a19202,19669\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Short apply(Object[] v1) {\n\u003e       return (Short) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e       if (inp1_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(short key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Short key, Record2_1 acc) {\n\u003e       return apply(\n\u003e         key.shortValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Short) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[3]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Short apply(Object[] v1) {\n\u003e       return (Short) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp1_ \u003d in[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[1]);\n\u003e       if (inp1_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp1_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(short key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Short key, Record2_1 acc) {\n\u003e       return apply(\n\u003e         key.shortValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Short) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return current[1] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[1]);\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.math.BigDecimal.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e  (stack truncated)\n1750,1757c19689,19716\n\u003c +---------+----------+\n\u003c | SUM_CNT | CNT_DIST |\n\u003c +---------+----------+\n\u003c |       3 |        3 |\n\u003c |       5 |        3 |\n\u003c |       6 |        3 |\n\u003c +---------+----------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select  sum(x) as sum_cnt,\n\u003e   count(distinct y) as cnt_dist\n\u003e from\n\u003e   (\n\u003e   select\n\u003e     count(*)                as x,\n\u003e           t1.job      as y,\n\u003e     t1.deptno as z\n\u003e   from\n\u003e     \"scott\".emp t1\n\u003e   group by t1.job, t1.deptno\n\u003e   order by t1.job, t1.deptno\n\u003e ) sq(x,y,z)\n\u003e group by z\n\u003e order by sum_cnt\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n1758a19718,20192\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record3_13 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public Record3_13() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_13)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_13) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record3_13) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_13) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_13 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[0] \u003d\u003d null ? (String) null : v0[0].toString(), v1[0] \u003d\u003d null ? (String) null : v1[0].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Byte) v0[1], (Byte) v1[1]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           (Byte) key.get(1),\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   ).orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[0] \u003d\u003d null ? (String) null : a0[0].toString(), (Byte) a0[1], false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Byte) a0[1], true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0 \u003d acc.f0 + org.apache.calcite.runtime.SqlFunctions.toLong(in[2]);\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (Byte) null : (Byte) key.get(1),\n\u003e           acc.f0,\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final long inp3_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[3]);\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 current[0],\n\u003e                 current[2],\n\u003e                 inp3_ \u003d\u003d 0L,\n\u003e                 inp3_ \u003d\u003d 1L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] a0) {\n\u003e       return (Byte) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d 9223372036854775807L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record3_13 record0;\n\u003e       record0 \u003d new Record3_13();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_13 apply(Record3_13 acc, Object[] in) {\n\u003e       if (org.apache.calcite.runtime.SqlFunctions.toBoolean(in[4])) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toLong(in[2]));\n\u003e       }\n\u003e       if (!(in[1] \u003d\u003d null || in[1].toString() \u003d\u003d null) \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[3])) {\n\u003e         acc.f2++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_13 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_13) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte key, Record3_13 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? Long.valueOf(acc.f0) : (Long) null,\n\u003e           acc.f2};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Byte) key,\n\u003e         (Record3_13) acc);\n\u003e     }\n\u003e   }\n\u003e   ).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Long apply(Object[] v) {\n\u003e       return (Long) v[1];\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e (                  (Long) current[1]).longValue(),\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record3_13 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public Record3_13() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_13)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record3_13) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record3_13) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_13) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_13 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[0] \u003d\u003d null ? (String) null : v0[0].toString(), v1[0] \u003d\u003d null ? (String) null : v1[0].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Byte) v0[1], (Byte) v1[1]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     p (stack truncated)\n1766,1784c20200,20205\n\u003c +-------+--------+\n\u003c | EMPNO | DEPTNO |\n\u003c +-------+--------+\n\u003c |  7369 |     20 |\n\u003c |  7499 |     30 |\n\u003c |  7521 |     30 |\n\u003c |  7566 |     20 |\n\u003c |  7654 |     30 |\n\u003c |  7698 |     30 |\n\u003c |  7782 |     10 |\n\u003c |  7788 |     20 |\n\u003c |  7839 |     10 |\n\u003c |  7844 |     30 |\n\u003c |  7876 |     20 |\n\u003c |  7900 |     30 |\n\u003c |  7902 |     20 |\n\u003c |  7934 |     10 |\n\u003c +-------+--------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select empno, d.deptno\n\u003e from \"scott\".emp\n\u003e join (select distinct deptno from \"scott\".dept) d\n\u003e using (deptno)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n1785a20207,20545\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return org.apache.calcite.runtime.SqlFunctions.toByte(((Object[]) inputEnumerator.current())[0]);\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public byte apply(byte v1) {\n\u003e       return v1;\n\u003e     }\n\u003e     public Object apply(Byte v1) {\n\u003e       return apply(\n\u003e         v1.byteValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Byte) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Byte apply(Object[] v1) {\n\u003e       return (Byte) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Byte left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left,\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Byte) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n1929,1936c20689,20706\n\u003c +-----------+---------+--------+\n\u003c | JOB       | SUM_SAL | DEPTNO |\n\u003c +-----------+---------+--------+\n\u003c | CLERK     | 1300.00 |     10 |\n\u003c | MANAGER   | 2450.00 |     10 |\n\u003c | PRESIDENT | 5000.00 |     10 |\n\u003c +-----------+---------+--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select job, sum(sal) as sum_sal, deptno\n\u003e from \"scott\".emp\n\u003e where deptno \u003d 10\n\u003e group by deptno, job\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n1937a20708,21101\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e               if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           (Byte) key.get(1),\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[2],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public Record2_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record2_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record2_1) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e               if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d new java.math.BigDecimal(0L);\n\u003e       Record2_1 record0;\n\u003e       record0 \u003d new Record2_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_1 apply(Record2_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0.add(inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record2_1 acc) {\n\u003e       return new Object[] {\n\u003e           key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           (Byte) key.get(1),\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record2_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[2],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 45, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler. (stack truncated)\n1988,2005c21152,21168\n\u003c +--------+-----------+----+\n\u003c | DEPTNO | JOB       | C  |\n\u003c +--------+-----------+----+\n\u003c |     10 | CLERK     |  1 |\n\u003c |     10 | MANAGER   |  1 |\n\u003c |     10 | PRESIDENT |  1 |\n\u003c |     10 |           |  3 |\n\u003c |     20 | ANALYST   |  2 |\n\u003c |     20 | CLERK     |  2 |\n\u003c |     20 | MANAGER   |  1 |\n\u003c |     20 |           |  5 |\n\u003c |     30 | CLERK     |  1 |\n\u003c |     30 | MANAGER   |  1 |\n\u003c |     30 | SALESMAN  |  4 |\n\u003c |     30 |           |  6 |\n\u003c |        |           | 14 |\n\u003c +--------+-----------+----+\n\u003c (13 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select deptno, job, count(*) as c\n\u003e from jdbc_scott.emp\n\u003e group by rollup (deptno, job)\n\u003e order by 1, 2\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n2006a21170,21591\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Byte) v0[1], (Byte) v1[1]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[0] \u003d\u003d null ? (String) null : v0[0].toString(), v1[0] \u003d\u003d null ? (String) null : v1[0].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"JDBC_SCOTT\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"SCOTT\\\".\\\"EMP\\\"\", new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n\u003e       return new org.apache.calcite.linq4j.function.Function0() {\n\u003e           public Object apply() {\n\u003e             try {\n\u003e               final Object[] values \u003d new Object[8];\n\u003e               values[0] \u003d resultSet.getShort(1);\n\u003e               if (resultSet.wasNull()) {\n\u003e                 values[0] \u003d null;\n\u003e               }\n\u003e               values[1] \u003d resultSet.getObject(2);\n\u003e               values[2] \u003d resultSet.getObject(3);\n\u003e               values[3] \u003d resultSet.getShort(4);\n\u003e               if (resultSet.wasNull()) {\n\u003e                 values[3] \u003d null;\n\u003e               }\n\u003e               values[4] \u003d org.apache.calcite.runtime.SqlFunctions.toIntOptional(resultSet.getDate(5));\n\u003e               if (resultSet.wasNull()) {\n\u003e                 values[4] \u003d null;\n\u003e               }\n\u003e               values[5] \u003d resultSet.getObject(6);\n\u003e               values[6] \u003d resultSet.getObject(7);\n\u003e               values[7] \u003d resultSet.getByte(8);\n\u003e               if (resultSet.wasNull()) {\n\u003e                 values[7] \u003d null;\n\u003e               }\n\u003e               return values;\n\u003e             } catch (java.sql.SQLException e) {\n\u003e               throw new RuntimeException(\n\u003e                 e);\n\u003e             }\n\u003e           }\n\u003e         }\n\u003e       ;\n\u003e     }\n\u003e     public Object apply(final Object resultSet) {\n\u003e       return apply(\n\u003e         (java.sql.ResultSet) resultSet);\n\u003e     }\n\u003e   }\n\u003e   ), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7], false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Byte) a0[7], true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, null, true, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (Byte) null : (Byte) key.get(1),\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   ).orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast((Byte) v0[1], (Byte) v1[1]);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0[0] \u003d\u003d null ? (String) null : v0[0].toString(), v1[0] \u003d\u003d null ? (String) null : v1[0].toString());\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"JDBC_SCOTT\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"SCOTT\\\".\\\"EMP\\\"\", new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n\u003e       return new org.apache.calcite.linq4j.function.Function0() {\n\u003e           public Object apply() {\n\u003e             try {\n\u003e               final Object[] values \u003d new Object[8];\n\u003e               values[0] \u003d resultSet.getShort(1);\n\u003e               if (resultSet.wasNull()) {\n\u003e                 values[0] \u003d null;\n\u003e               }\n\u003e               values[1] \u003d resultSet.getObject(2);\n\u003e               values[2] \u003d resultSet.getObject(3);\n\u003e               values[3] \u003d resultSet.getShort(4);\n\u003e               if (resultSet.wasNull()) {\n\u003e                 values[3] \u003d null;\n\u003e               }\n\u003e               values[4] \u003d org.apache.calcite.runtime.SqlFunctions.toIntOptional(resultSet.getDate(5));\n\u003e               if (resultSet.wasNull()) {\n\u003e                 values[4] \u003d null;\n\u003e               }\n\u003e               values[5] \u003d resultSet.getObject(6);\n\u003e               values[6] \u003d resultSet.getObject(7);\n\u003e               values[7] \u003d resultSet.getByte(8);\n\u003e               if (resultSet.wasNull()) {\n\u003e                 values[7] \u003d null;\n\u003e               }\n\u003e               return values;\n\u003e             } catch (java.sql.SQLException e) {\n\u003e               throw new RuntimeException(\n\u003e                 e);\n\u003e             }\n\u003e           }\n\u003e         }\n\u003e       ;\n\u003e     }\n\u003e     public Object apply(final Object resultSet) {\n\u003e       return apply(\n\u003e         (java.sql.ResultSet) resultSet);\n\u003e     }\n\u003e   }\n\u003e   ), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Byte) a0[7], false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Byte) a0[7], true, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, null, true, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       Record1_0 record0;\n\u003e       record0 \u003d new Record1_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record1_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record1_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record1_0 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (Byte) null : (Byte) key.get(1),\n\u003e           acc.f0};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record1_0) acc);\n\u003e     }\n\u003e   }\n\u003e   ).orderBy(org.apache.calcite.linq4j.function.Functions.identitySelector(), comparator);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0],\n\u003e                   current[2]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 58, Column 277: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino (stack truncated)\n2054,2059c21639,21643\n\u003c +-------+\n\u003c | CUSER |\n\u003c +-------+\n\u003c | SCOTT |\n\u003c +-------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select CURRENT_USER as CUSER\n\u003e from jdbc_scott.emp\n\u003e group by CURRENT_USER\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n2060a21645,21814\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n\u003e       return new org.apache.calcite.linq4j.function.Function0() {\n\u003e           public Object apply() {\n\u003e             try {\n\u003e               final Object value;\n\u003e               value \u003d resultSet.getObject(1);\n\u003e               return value;\n\u003e             } catch (java.sql.SQLException e) {\n\u003e               throw new RuntimeException(\n\u003e                 e);\n\u003e             }\n\u003e           }\n\u003e         }\n\u003e       ;\n\u003e     }\n\u003e     public Object apply(final Object resultSet) {\n\u003e       return apply(\n\u003e         (java.sql.ResultSet) resultSet);\n\u003e     }\n\u003e   }\n\u003e   ;\n\u003e   final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"JDBC_SCOTT\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT CURRENT_USER AS \\\"CUSER\\\"\\nFROM \\\"SCOTT\\\".\\\"EMP\\\"\\nGROUP BY CURRENT_USER\", rowBuilderFactory);\n\u003e   return enumerable;\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n\u003e       return new org.apache.calcite.linq4j.function.Function0() {\n\u003e           public Object apply() {\n\u003e             try {\n\u003e               final Object value;\n\u003e               value \u003d resultSet.getObject(1);\n\u003e               return value;\n\u003e             } catch (java.sql.SQLException e) {\n\u003e               throw new RuntimeException(\n\u003e                 e);\n\u003e             }\n\u003e           }\n\u003e         }\n\u003e       ;\n\u003e     }\n\u003e     public Object apply(final Object resultSet) {\n\u003e       return apply(\n\u003e         (java.sql.ResultSet) resultSet);\n\u003e     }\n\u003e   }\n\u003e   ;\n\u003e   final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"JDBC_SCOTT\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT CURRENT_USER AS \\\"CUSER\\\"\\nFROM \\\"SCOTT\\\".\\\"EMP\\\"\\nGROUP BY CURRENT_USER\", rowBuilderFactory);\n\u003e   return enumerable;\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 27, Column 210: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n2068,2073c21822,21826\n\u003c +-------+\n\u003c | CUSER |\n\u003c +-------+\n\u003c | SCOTT |\n\u003c +-------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select CURRENT_USER as CUSER\n\u003e from jdbc_scott.emp\n\u003e group by grouping sets(CURRENT_USER)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n2074a21828,21997\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n\u003e       return new org.apache.calcite.linq4j.function.Function0() {\n\u003e           public Object apply() {\n\u003e             try {\n\u003e               final Object value;\n\u003e               value \u003d resultSet.getObject(1);\n\u003e               return value;\n\u003e             } catch (java.sql.SQLException e) {\n\u003e               throw new RuntimeException(\n\u003e                 e);\n\u003e             }\n\u003e           }\n\u003e         }\n\u003e       ;\n\u003e     }\n\u003e     public Object apply(final Object resultSet) {\n\u003e       return apply(\n\u003e         (java.sql.ResultSet) resultSet);\n\u003e     }\n\u003e   }\n\u003e   ;\n\u003e   final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"JDBC_SCOTT\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT CURRENT_USER AS \\\"CUSER\\\"\\nFROM \\\"SCOTT\\\".\\\"EMP\\\"\\nGROUP BY CURRENT_USER\", rowBuilderFactory);\n\u003e   return enumerable;\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n\u003e       return new org.apache.calcite.linq4j.function.Function0() {\n\u003e           public Object apply() {\n\u003e             try {\n\u003e               final Object value;\n\u003e               value \u003d resultSet.getObject(1);\n\u003e               return value;\n\u003e             } catch (java.sql.SQLException e) {\n\u003e               throw new RuntimeException(\n\u003e                 e);\n\u003e             }\n\u003e           }\n\u003e         }\n\u003e       ;\n\u003e     }\n\u003e     public Object apply(final Object resultSet) {\n\u003e       return apply(\n\u003e         (java.sql.ResultSet) resultSet);\n\u003e     }\n\u003e   }\n\u003e   ;\n\u003e   final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"JDBC_SCOTT\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT CURRENT_USER AS \\\"CUSER\\\"\\nFROM \\\"SCOTT\\\".\\\"EMP\\\"\\nGROUP BY CURRENT_USER\", rowBuilderFactory);\n\u003e   return enumerable;\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.String.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 27, Column 210: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7339)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3809)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitCast(UnitCompiler.java:3246)\n\u003e  at org.codehaus.janino.Java$Cast.accept(Java.java:3802)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3845)\n\u003e  at org.codehaus.janino.UnitCompiler.access$8600(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitParenthesizedExpression(UnitCompiler.java:3274)\n\u003e  at org.codehaus.janino.Java$ParenthesizedExpression.accept(Java.java:3830)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3904)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3952)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n2099,2104c22022,22039\n\u003c +--------+--------+--------+---------+\n\u003c | EXPR$0 | EXPR$1 | EXPR$2 | EXPR$3  |\n\u003c +--------+--------+--------+---------+\n\u003c |     14 |     14 | 800.00 | 5000.00 |\n\u003c +--------+--------+--------+---------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(distinct EMPNO), COUNT(SAL), MIN(SAL), MAX(SAL) from \"scott\".emp\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record5_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public Record5_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record5_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record5_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record5_0) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record5_0) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record5_0) o).f4;\n\u003e   }\n2105a22041,22476\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record7_1 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public java.math.BigDecimal f5;\n\u003e   public boolean f6;\n\u003e   public Record7_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record7_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record7_1) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record7_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record7_1) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record7_1) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record7_1) o).f4 \u0026\u0026 java.util.Objects.equals(this.f5, ((Record7_1) o).f5) \u0026\u0026 this.f6 \u003d\u003d ((Record7_1) o).f6;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f6);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record7_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f5, that.f5);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f6, that.f6);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \", f5\u003d\" + this.f5 + \", f6\u003d\" + this.f6 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toShort(a0[0]), false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((short)0, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a2s0;\n\u003e       boolean a2s1;\n\u003e       a2s1 \u003d false;\n\u003e       a2s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record5_0 record0;\n\u003e       record0 \u003d new Record5_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       record0.f4 \u003d a2s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record5_0 apply(Record5_0 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, inp5_);\n\u003e       }\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f4 \u003d true;\n\u003e         acc.f3 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f3, inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record5_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record5_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record5_0 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(1)) ? (Short) null : Short.valueOf(org.apache.calcite.runtime.SqlFunctions.toShort(key.get(0))),\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null,\n\u003e           acc.f4 ? acc.f3 : (java.math.BigDecimal) null,\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(1)) ? 1L : 0L};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record5_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final long inp4_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[4]);\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 inp4_ \u003d\u003d 0L,\n\u003e                 inp4_ \u003d\u003d 1L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 9223372036854775807L;\n\u003e       java.math.BigDecimal a2s0;\n\u003e       boolean a2s1;\n\u003e       a2s1 \u003d false;\n\u003e       a2s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a3s0;\n\u003e       boolean a3s1;\n\u003e       a3s1 \u003d false;\n\u003e       a3s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record7_1 record0;\n\u003e       record0 \u003d new Record7_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       record0.f4 \u003d a2s1;\n\u003e       record0.f5 \u003d a3s0;\n\u003e       record0.f6 \u003d a3s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record7_1 apply(Record7_1 acc, Object[] in) {\n\u003e       if ((Short) in[0] !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[4])) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       final boolean inp5_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[5]);\n\u003e       if (inp5_) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, org.apache.calcite.runtime.SqlFunctions.toLong(in[1]));\n\u003e       }\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null \u0026\u0026 inp5_) {\n\u003e         acc.f4 \u003d true;\n\u003e         acc.f3 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f3, inp2_);\n\u003e       }\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null \u0026\u0026 inp5_) {\n\u003e         acc.f6 \u003d true;\n\u003e         acc.f5 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f5, inp3_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record7_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record7_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record7_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f2 ? Long.valueOf(acc.f1) : (Long) null,\n\u003e           acc.f4 ? acc.f3 : (java.math.BigDecimal) null,\n\u003e           acc.f6 ? acc.f5 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record7_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e (                  (Long) current[1]).longValue(),\n\u003e                   current[2],\n\u003e                   current[3]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record5_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public Record5_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record5_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record5_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record5_0) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record5_0) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record5_0) o).f4;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record7_1 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public java.math.BigDecimal f5;\n\u003e   public boolean f6;\n\u003e   public Record7_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record7_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record7_1) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record7_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record7_1) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record7_1) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((R (stack truncated)\n2117,2122c22488,22505\n\u003c +--------+--------+--------+---------+\n\u003c | EXPR$0 | EXPR$1 | EXPR$2 | EXPR$3  |\n\u003c +--------+--------+--------+---------+\n\u003c |      3 |     14 | 800.00 | 5000.00 |\n\u003c +--------+--------+--------+---------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(distinct DEPTNO), COUNT(JOB), MIN(SAL), MAX(SAL) from \"scott\".emp\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record5_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public Record5_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record5_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record5_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record5_0) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record5_0) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record5_0) o).f4;\n\u003e   }\n2123a22507,22942\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record7_1 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public java.math.BigDecimal f5;\n\u003e   public boolean f6;\n\u003e   public Record7_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record7_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record7_1) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record7_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record7_1) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record7_1) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record7_1) o).f4 \u0026\u0026 java.util.Objects.equals(this.f5, ((Record7_1) o).f5) \u0026\u0026 this.f6 \u003d\u003d ((Record7_1) o).f6;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f6);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record7_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f5, that.f5);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f6, that.f6);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \", f5\u003d\" + this.f5 + \", f6\u003d\" + this.f6 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Byte) a0[7], false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a2s0;\n\u003e       boolean a2s1;\n\u003e       a2s1 \u003d false;\n\u003e       a2s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record5_0 record0;\n\u003e       record0 \u003d new Record5_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       record0.f4 \u003d a2s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record5_0 apply(Record5_0 acc, Object[] in) {\n\u003e       if (!(in[2] \u003d\u003d null || in[2].toString() \u003d\u003d null)) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, inp5_);\n\u003e       }\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f4 \u003d true;\n\u003e         acc.f3 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f3, inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record5_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record5_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record5_0 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(1)) ? (Byte) null : (Byte) key.get(0),\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null,\n\u003e           acc.f4 ? acc.f3 : (java.math.BigDecimal) null,\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(1)) ? 1L : 0L};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record5_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final long inp4_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[4]);\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 inp4_ \u003d\u003d 0L,\n\u003e                 inp4_ \u003d\u003d 1L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 9223372036854775807L;\n\u003e       java.math.BigDecimal a2s0;\n\u003e       boolean a2s1;\n\u003e       a2s1 \u003d false;\n\u003e       a2s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a3s0;\n\u003e       boolean a3s1;\n\u003e       a3s1 \u003d false;\n\u003e       a3s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record7_1 record0;\n\u003e       record0 \u003d new Record7_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       record0.f4 \u003d a2s1;\n\u003e       record0.f5 \u003d a3s0;\n\u003e       record0.f6 \u003d a3s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record7_1 apply(Record7_1 acc, Object[] in) {\n\u003e       if ((Byte) in[0] !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[4])) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       final boolean inp5_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[5]);\n\u003e       if (inp5_) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, org.apache.calcite.runtime.SqlFunctions.toLong(in[1]));\n\u003e       }\n\u003e       final java.math.BigDecimal inp2_ \u003d in[2] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[2]);\n\u003e       if (inp2_ !\u003d null \u0026\u0026 inp5_) {\n\u003e         acc.f4 \u003d true;\n\u003e         acc.f3 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f3, inp2_);\n\u003e       }\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null \u0026\u0026 inp5_) {\n\u003e         acc.f6 \u003d true;\n\u003e         acc.f5 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f5, inp3_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record7_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record7_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record7_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f2 ? Long.valueOf(acc.f1) : (Long) null,\n\u003e           acc.f4 ? acc.f3 : (java.math.BigDecimal) null,\n\u003e           acc.f6 ? acc.f5 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record7_1) acc);\n\u003e     }\n\u003e   }\n\u003e   ));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e (                  (Long) current[1]).longValue(),\n\u003e                   current[2],\n\u003e                   current[3]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record5_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public Record5_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record5_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record5_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record5_0) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record5_0) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record5_0) o).f4;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record7_1 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public java.math.BigDecimal f5;\n\u003e   public boolean f6;\n\u003e   public Record7_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record7_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record7_1) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record7_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record7_1) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record7_1) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record7_1) o).f4 \u0026\u0026 java.util.Objects.equals(this.f5, ((Record7_1) o).f5)  (stack truncated)\n2135,2146c22954,22971\n\u003c +------+--------+--------+---------+---------+\n\u003c | MGR  | EXPR$1 | EXPR$2 | EXPR$3  | EXPR$4  |\n\u003c +------+--------+--------+---------+---------+\n\u003c | 7566 |      1 |      2 | 3000.00 | 3000.00 |\n\u003c | 7698 |      1 |      5 |  950.00 | 1600.00 |\n\u003c | 7782 |      1 |      1 | 1300.00 | 1300.00 |\n\u003c | 7788 |      1 |      1 | 1100.00 | 1100.00 |\n\u003c | 7839 |      3 |      3 | 2450.00 | 2975.00 |\n\u003c | 7902 |      1 |      1 |  800.00 |  800.00 |\n\u003c |      |      1 |      1 | 5000.00 | 5000.00 |\n\u003c +------+--------+--------+---------+---------+\n\u003c (7 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select MGR, count(distinct DEPTNO), COUNT(JOB), MIN(SAL), MAX(SAL) from \"scott\".emp group by MGR\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record5_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public Record5_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record5_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record5_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record5_0) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record5_0) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record5_0) o).f4;\n\u003e   }\n2147a22973,23410\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record7_1 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public java.math.BigDecimal f5;\n\u003e   public boolean f6;\n\u003e   public Record7_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record7_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record7_1) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record7_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record7_1) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record7_1) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record7_1) o).f4 \u0026\u0026 java.util.Objects.equals(this.f5, ((Record7_1) o).f5) \u0026\u0026 this.f6 \u003d\u003d ((Record7_1) o).f6;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f6);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record7_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f5, that.f5);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f6, that.f6);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \", f5\u003d\" + this.f5 + \", f6\u003d\" + this.f6 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Short) a0[3], (Byte) a0[7], false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Short) a0[3], null, false, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a2s0;\n\u003e       boolean a2s1;\n\u003e       a2s1 \u003d false;\n\u003e       a2s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record5_0 record0;\n\u003e       record0 \u003d new Record5_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       record0.f4 \u003d a2s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record5_0 apply(Record5_0 acc, Object[] in) {\n\u003e       if (!(in[2] \u003d\u003d null || in[2].toString() \u003d\u003d null)) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, inp5_);\n\u003e       }\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f4 \u003d true;\n\u003e         acc.f3 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f3, inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record5_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record5_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record5_0 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? (Short) null : (Short) key.get(0),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (Byte) null : (Byte) key.get(1),\n\u003e           acc.f0,\n\u003e           acc.f2 ? acc.f1 : (java.math.BigDecimal) null,\n\u003e           acc.f4 ? acc.f3 : (java.math.BigDecimal) null,\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(2)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record5_0) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final long inp5_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[5]);\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 inp5_ \u003d\u003d 0L,\n\u003e                 inp5_ \u003d\u003d 1L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Short apply(Object[] a0) {\n\u003e       return (Short) a0[0];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 9223372036854775807L;\n\u003e       java.math.BigDecimal a2s0;\n\u003e       boolean a2s1;\n\u003e       a2s1 \u003d false;\n\u003e       a2s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a3s0;\n\u003e       boolean a3s1;\n\u003e       a3s1 \u003d false;\n\u003e       a3s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record7_1 record0;\n\u003e       record0 \u003d new Record7_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       record0.f2 \u003d a1s1;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       record0.f4 \u003d a2s1;\n\u003e       record0.f5 \u003d a3s0;\n\u003e       record0.f6 \u003d a3s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record7_1 apply(Record7_1 acc, Object[] in) {\n\u003e       if ((Byte) in[1] !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[5])) {\n\u003e         acc.f0++;\n\u003e       }\n\u003e       final boolean inp6_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[6]);\n\u003e       if (inp6_) {\n\u003e         acc.f2 \u003d true;\n\u003e         acc.f1 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, org.apache.calcite.runtime.SqlFunctions.toLong(in[2]));\n\u003e       }\n\u003e       final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e       if (inp3_ !\u003d null \u0026\u0026 inp6_) {\n\u003e         acc.f4 \u003d true;\n\u003e         acc.f3 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f3, inp3_);\n\u003e       }\n\u003e       final java.math.BigDecimal inp4_ \u003d in[4] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[4]);\n\u003e       if (inp4_ !\u003d null \u0026\u0026 inp6_) {\n\u003e         acc.f6 \u003d true;\n\u003e         acc.f5 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f5, inp4_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record7_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record7_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Short key, Record7_1 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f2 ? Long.valueOf(acc.f1) : (Long) null,\n\u003e           acc.f4 ? acc.f3 : (java.math.BigDecimal) null,\n\u003e           acc.f6 ? acc.f5 : (java.math.BigDecimal) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Short) key,\n\u003e         (Record7_1) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e (                  (Long) current[2]).longValue(),\n\u003e                   current[3],\n\u003e                   current[4]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record5_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public Record5_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record5_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record5_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record5_0) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record5_0) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record5_0) o).f4;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record7_1 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public boolean f2;\n\u003e   public  (stack truncated)\n2159,2170c23422,23438\n\u003c +------+--------+---------+---------+\n\u003c | MGR  | EXPR$1 | EXPR$2  | EXPR$3  |\n\u003c +------+--------+---------+---------+\n\u003c | 7566 |      1 | 3000.00 | 3000.00 |\n\u003c | 7698 |      2 |  950.00 | 1600.00 |\n\u003c | 7782 |      1 | 1300.00 | 1300.00 |\n\u003c | 7788 |      1 | 1100.00 | 1100.00 |\n\u003c | 7839 |      3 | 2450.00 | 2975.00 |\n\u003c | 7902 |      1 |  800.00 |  800.00 |\n\u003c |      |      1 | 5000.00 | 5000.00 |\n\u003c +------+--------+---------+---------+\n\u003c (7 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select MGR, count(distinct DEPTNO, JOB), MIN(SAL), MAX(SAL) from \"scott\".emp group by MGR\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_2 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public java.math.BigDecimal f2;\n\u003e   public boolean f3;\n\u003e   public Record4_2() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_2)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_2) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_2) o).f1 \u0026\u0026 java.util.Objects.equals(this.f2, ((Record4_2) o).f2) \u0026\u0026 this.f3 \u003d\u003d ((Record4_2) o).f3;\n\u003e   }\n2171a23440,23865\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_2 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record5_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public Record5_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record5_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record5_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record5_0) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record5_0) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record5_0) o).f4;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), java.util.Arrays.asList(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(a0[2] \u003d\u003d null ? (String) null : a0[2].toString(), (Short) a0[3], (Byte) a0[7], false, false, false);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of(null, (Short) a0[3], null, true, false, true);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       java.math.BigDecimal a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d (java.math.BigDecimal) null;\n\u003e       Record4_2 record0;\n\u003e       record0 \u003d new Record4_2();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a1s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_2 apply(Record4_2 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp5_ \u003d in[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[5]);\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp5_);\n\u003e       }\n\u003e       if (inp5_ !\u003d null) {\n\u003e         acc.f3 \u003d true;\n\u003e         acc.f2 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f2, inp5_);\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_2 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_2) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(org.apache.calcite.runtime.FlatLists.ComparableList key, Record4_2 acc) {\n\u003e       return new Object[] {\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? (String) null : key.get(0) \u003d\u003d null ? (String) null : key.get(0).toString(),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? (Short) null : (Short) key.get(1),\n\u003e           org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? (Byte) null : (Byte) key.get(2),\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f3 ? acc.f2 : (java.math.BigDecimal) null,\n\u003e (          org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(3)) ? 4L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(4)) ? 2L : 0L) + (org.apache.calcite.runtime.SqlFunctions.toBoolean(key.get(5)) ? 1L : 0L)};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.FlatLists.ComparableList) key,\n\u003e         (Record4_2) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final long inp5_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[5]);\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 inp5_ \u003d\u003d 0L,\n\u003e                 inp5_ \u003d\u003d 5L};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Short apply(Object[] a0) {\n\u003e         return (Short) a0[1];\n\u003e       }\n\u003e       public Object apply(Object a0) {\n\u003e         return apply(\n\u003e           (Object[]) a0);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         java.math.BigDecimal a1s0;\n\u003e         boolean a1s1;\n\u003e         a1s1 \u003d false;\n\u003e         a1s0 \u003d (java.math.BigDecimal) null;\n\u003e         java.math.BigDecimal a2s0;\n\u003e         boolean a2s1;\n\u003e         a2s1 \u003d false;\n\u003e         a2s0 \u003d (java.math.BigDecimal) null;\n\u003e         Record5_0 record0;\n\u003e         record0 \u003d new Record5_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         record0.f1 \u003d a1s0;\n\u003e         record0.f2 \u003d a1s1;\n\u003e         record0.f3 \u003d a2s0;\n\u003e         record0.f4 \u003d a2s1;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record5_0 apply(Record5_0 acc, Object[] in) {\n\u003e         if ((Byte) in[2] !\u003d null \u0026\u0026 !(in[0] \u003d\u003d null || in[0].toString() \u003d\u003d null) \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.toBoolean(in[5])) {\n\u003e           acc.f0++;\n\u003e         }\n\u003e         final java.math.BigDecimal inp3_ \u003d in[3] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[3]);\n\u003e         final boolean inp6_ \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(in[6]);\n\u003e         if (inp3_ !\u003d null \u0026\u0026 inp6_) {\n\u003e           acc.f2 \u003d true;\n\u003e           acc.f1 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f1, inp3_);\n\u003e         }\n\u003e         final java.math.BigDecimal inp4_ \u003d in[4] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[4]);\n\u003e         if (inp4_ !\u003d null \u0026\u0026 inp6_) {\n\u003e           acc.f4 \u003d true;\n\u003e           acc.f3 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f3, inp4_);\n\u003e         }\n\u003e         return acc;\n\u003e       }\n\u003e       public Record5_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record5_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Short key, Record5_0 acc) {\n\u003e         return new Object[] {\n\u003e             key,\n\u003e             acc.f0,\n\u003e             acc.f2 ? acc.f1 : (java.math.BigDecimal) null,\n\u003e             acc.f4 ? acc.f3 : (java.math.BigDecimal) null};\n\u003e       }\n\u003e       public Object[] apply(Object key, Object acc) {\n\u003e         return apply(\n\u003e           (Short) key,\n\u003e           (Record5_0) acc);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_2 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public java.math.BigDecimal f2;\n\u003e   public boolean f3;\n\u003e   public Record4_2() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_2)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_2) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_2) o).f1 \u0026\u0026 java.util.Objects.equals(this.f2, ((Record4_2) o).f2) \u0026\u0026 this.f3 \u003d\u003d ((Record4_2) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_2 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e public static class Record5_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public java.math.BigDecimal f1;\n\u003e   public boolean f2;\n\u003e   public java.math.BigDecimal f3;\n\u003e   public boolean f4;\n\u003e   public Record5_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record5_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record5_0) o).f0 \u0026\u0026 java.util.Objects.equals(this.f1, ((Record5_0) o).f1) \u0026\u0026 this.f2 \u003d\u003d ((Record5_0) o).f2 \u0026\u0026 java.util.Objects.equals(this.f3, ((Record5_0) o).f3) \u0026\u0026 this.f4 \u003d\u003d ((Record5_0) o).f4;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record5_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.EnumerableDefaults.groupByMultiple(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable() (stack truncated)\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinRowNumber",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\",\n \"empid\",\n \"commission\",\n row_number() over (partition by \"deptno\") as r,\n row_number() over (partition by \"deptno\" order by \"commission\" desc nulls first) as rcnf,\n row_number() over (partition by \"deptno\" order by \"commission\" desc nulls last) as rcnl,\n row_number() over (partition by \"deptno\" order by \"empid\") as r,\n row_number() over (partition by \"deptno\" order by \"empid\" desc) as rd\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testUnnestArrayScalarArrayAliased",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select d.\"name\", e.*\nfrom \"hr\".\"depts\" as d,\n UNNEST(d.\"employees\", array[1, 2]) as e (ei, d, n, s, c, i)\nwhere ei + i \u003e 151]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testClassNames",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"s\".\"everyTypes\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testArrayIndexing",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\", \"employees\"[1] as e from \"hr\".\"depts\"\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testNotExistsCorrelated",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\" where not exists (\n select 1 from \"hr\".\"depts\"\n where \"emps\".\"deptno\"\u003d\"depts\".\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testSubQuery",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\", \"deptno\", \"salary\" from \"emps\" e1\nwhere \"empid\" \u003d (\n  select max(\"empid\") from \"emps\"\n  where \"deptno\" \u003d e1.\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testReuseExpressionWhenNullChecking5",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select substring(trim(\nsubstring(\"name\",\n  \"deptno\"*0+case when user \u003d \u0027sa\u0027 then 1 end)\n), case when \"empid\"\u003e\"deptno\" then 5\n   else\n     case when \"deptno\"*8\u003e8 then 5 end\n   end-2) T\nfrom\n\"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testNullableTimestamp",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"hire_date\", \"end_date\", \"birth_date\" from \"foodmart\".\"employee\" where \"employee_id\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testMaterializationSubstitution2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select *\nfrom (select * from \"emps\" where \"empid\" \u003c 300)\njoin (select * from \"emps\" where \"empid\" \u003c 200) using (\"empid\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", sum(\"empid\") as s\nfrom \"emps\" where \"deptno\" \u003e 10 group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testDistinctCount2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select count(distinct \"the_year\") as c\nfrom \"foodmart\".\"sales_fact_1997\"\njoin \"foodmart\".\"time_by_day\" using (\"time_id\")\ngroup by \"the_year\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LinqFrontJdbcBackTest",
        "testMethod": "testTableWhere",
        "failureName": "java.lang.RuntimeException",
        "detail": "Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object[] values \u003d new Object[29];\n              values[0] \u003d resultSet.getInt(1);\n              if (resultSet.wasNull()) {\n                values[0] \u003d null;\n              }\n              values[1] \u003d resultSet.getLong(2);\n              if (resultSet.wasNull()) {\n                values[1] \u003d null;\n              }\n              values[2] \u003d resultSet.getObject(3);\n              values[3] \u003d resultSet.getObject(4);\n              values[4] \u003d resultSet.getObject(5);\n              values[5] \u003d resultSet.getObject(6);\n              values[6] \u003d resultSet.getObject(7);\n              values[7] \u003d resultSet.getObject(8);\n              values[8] \u003d resultSet.getObject(9);\n              values[9] \u003d resultSet.getObject(10);\n              values[10] \u003d resultSet.getObject(11);\n              values[11] \u003d resultSet.getObject(12);\n              values[12] \u003d resultSet.getObject(13);\n              values[13] \u003d resultSet.getInt(14);\n              if (resultSet.wasNull()) {\n                values[13] \u003d null;\n              }\n              values[14] \u003d resultSet.getObject(15);\n              values[15] \u003d resultSet.getObject(16);\n              values[16] \u003d org.apache.calcite.runtime.SqlFunctions.toInt(resultSet.getDate(17));\n              if (resultSet.wasNull()) {\n                values[16] \u003d null;\n              }\n              values[17] \u003d resultSet.getObject(18);\n              values[18] \u003d resultSet.getObject(19);\n              values[19] \u003d resultSet.getObject(20);\n              values[20] \u003d resultSet.getShort(21);\n              if (resultSet.wasNull()) {\n                values[20] \u003d null;\n              }\n              values[21] \u003d resultSet.getShort(22);\n              if (resultSet.wasNull()) {\n                values[21] \u003d null;\n              }\n              values[22] \u003d resultSet.getObject(23);\n              values[23] \u003d org.apache.calcite.runtime.SqlFunctions.toInt(resultSet.getDate(24));\n              if (resultSet.wasNull()) {\n                values[23] \u003d null;\n              }\n              values[24] \u003d resultSet.getObject(25);\n              values[25] \u003d resultSet.getObject(26);\n              values[26] \u003d resultSet.getObject(27);\n              values[27] \u003d resultSet.getInt(28);\n              if (resultSet.wasNull()) {\n                values[27] \u003d null;\n              }\n              values[28] \u003d resultSet.getObject(29);\n              return values;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"foodmart\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"foodmart\\\".\\\"customer\\\"\\nWHERE \\\"customer_id\\\" \u003c 5\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testWhereNOT",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"wrapperByte\" from \"s\".\"everyTypes\" where NOT (\"wrapperByte\" is null)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSetMaxRows",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"select * from \"hr\".\"emps\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n}\n\n\npublic Class getElementType() {\n  return org.apache.calcite.test.JdbcTest.Employee.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.profile.ProfilerTest",
        "testMethod": "testProfileScott2",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while preparing statement [select * from \"scott\".emp\njoin \"scott\".dept using (deptno)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSumOverPossiblyEmptyWindow",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\",\n  \"commission\",\n  sum(\"empid\") over (partition by 42\n    order by \"commission\" nulls first\n    rows between UNBOUNDED PRECEDING and 1 preceding) as m\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView10",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\", \"empid\" from \"emps\" where \"deptno\" \u003e 30 or \"empid\" \u003e 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testTableModifyInsertMultiValues",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"DELETE FROM \"foodmart\".\"expense_fact\" WHERE \"store_id\"\u003d666\n\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object value;\n              value \u003d resultSet.getLong(1);\n              if (resultSet.wasNull()) {\n                value \u003d null;\n              }\n              return value;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"foodmart\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"DELETE FROM \\\"foodmart\\\".\\\"expense_fact\\\"\\nWHERE \\\"store_id\\\" \u003d 666\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return long.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterializationUKFK5",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"emps\".\"empid\" from \"emps\"\njoin \"dependents\" using (\"empid\")\nwhere \"emps\".\"empid\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testReflectiveSchemaInUnnamedPackage",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select * from \"emps\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((RootHr) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n}\n\n\npublic Class getElementType() {\n  return RootEmployee.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testMixedJoinWithOrPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.empno, e.ename, e.empno, e.ename  \nfrom scott.emp e inner join scott.emp m on  \ne.mgr \u003d m.empno and (e.sal \u003e m.sal or m.hiredate \u003e e.hiredate)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testNullableTimestamp2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"hire_date\", \"end_date\", \"birth_date\" from \"foodmart\".\"employee\" where \"employee_id\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSelectDistinctStar",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select distinct *\nfrom \"hr\".\"emps\"\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testArrayElement",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select element(\"employees\") from \"hr\".\"depts\"\nwhere cardinality(\"employees\") \u003c 2]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSelectDistinctComposite",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select distinct \"empid\" \u003e 140 as c, \"deptno\"\nfrom \"hr\".\"emps\"\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs9",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\"\nfrom \"depts\"\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")\njoin \"locations\" on (\"locations\".\"name\" \u003d \"dependents\".\"name\")\njoin \"emps\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\nwhere \"depts\".\"deptno\" \u003e 10 and \"depts\".\"deptno\" \u003c 20\ngroup by \"dependents\".\"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[6: quidem(sql/scalar.iq)]",
        "failureName": "java.lang.reflect.InvocationTargetException",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testAnd3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\" from \"hr\".\"emps\"\nwhere \"emps\".\"empid\" \u003c 240\nand \"salary\" \u003e 7500.0and \"emps\".\"deptno\" \u003e 10\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView12",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where \"deptno\" \u003e 30 and \"salary\" \u003e 3000]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testRollup",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\", count(*) as c, sum(\"salary\") as s\nfrom \"hr\".\"emps\"\ngroup by rollup(\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testLimitStar",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\"\nlimit 2]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization5",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" \"deptno\" from \"emps\"\njoin \"depts\" using (\"deptno\") where \"empid\" \u003e 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testScalarSubQuery",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [SELECT COUNT(empno) AS cEmpNo FROM \"SCOTT\".\"EMP\" WHERE DEPTNO \u003c\u003e (SELECT * FROM (VALUES 1))]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView8",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select * from V where \"commission\" is null]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSumOverUnboundedPreceding",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\",\n  \"commission\",\n  sum(\"empid\") over (partition by 42\n    order by \"commission\" nulls first\n    rows between UNBOUNDED PRECEDING and current row) as m\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testLimitOnQueryableTable",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"days\"\nlimit 2]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testMaterializationOnJoinQuery",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select *\nfrom \"emps\"\njoin \"depts\" using (\"deptno\") where \"empid\" \u003c 300 ]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[5: quidem(sql/blank.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/blank.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/blank.iq\n34,40c34,36\n\u003c +---+---+\n\u003c | I | J |\n\u003c +---+---+\n\u003c | 0 | 2 |\n\u003c | 1 | 0 |\n\u003c +---+---+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from foo\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n41a38,146\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"FOO\").asEnumerable();\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"FOO\").asEnumerable();\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 54: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1901)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitReturnStatement(UnitCompiler.java:944)\n\u003e  at org.codehaus.janino.Java$ReturnStatement.accept(Java.java:2544)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n47,52c152,155\n\u003c +---+---+\n\u003c | I | J |\n\u003c +---+---+\n\u003c | 0 | 2 |\n\u003c +---+---+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from foo as f where i in (\n\u003e   select j from foo where i \u003e f.i)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n53a157,509\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"FOO\").asEnumerable().join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"FOO\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toInt(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public int apply(int key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public Integer apply(Integer key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return apply(\n\u003e         key.intValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Integer apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Integer) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(int v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Integer v1) {\n\u003e       return apply(\n\u003e         v1.intValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Integer) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Integer right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Integer) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(current[0]) \u003e org.apache.calcite.runtime.SqlFunctions.toInt(current[2])) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.EnumerableDefaults.semiJoin(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"FOO\").asEnumerable(), right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]), org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]));\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toInt(v1[2]), (Integer) v1[1]);\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"FOO\").asEnumerable().join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"FOO\").asEnumerable().groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(Object[] a0) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toInt(a0[0]);\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       return org.apache.calcite.runtime.Unit.INSTANCE;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public org.apache.calcite.runtime.Unit apply(org.apache.calcite.runtime.Unit acc, Object[] in) {\n\u003e       return acc;\n\u003e     }\n\u003e     public org.apache.calcite.runtime.Unit apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.runtime.Unit) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public int apply(int key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return key;\n\u003e     }\n\u003e     public Integer apply(Integer key, org.apache.calcite.runtime.Unit acc) {\n\u003e       return apply(\n\u003e         key.intValue(),\n\u003e         acc);\n\u003e     }\n\u003e     public Integer apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Integer) key,\n\u003e         (org.apache.calcite.runtime.Unit) acc);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(int v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Integer v1) {\n\u003e       return apply(\n\u003e         v1.intValue());\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Integer) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Integer right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Integer) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               if (org.apache.calcite.runtime.SqlFunctions.toInt(current[0]) \u003e org.apache.calcite.runtime.SqlFunctions.toInt(current[2])) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.EnumerableDefaults.semiJoin(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"FOO\").asEnumerable(), right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]), org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]));\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.util.List apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.FlatLists.of(org.apache.calcite.runtime.SqlFunctions.toInt(v1[2]), (Integer) v1[1]);\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     );\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.cod (stack truncated)\n88,92c544,558\n\u003c +---+---+\n\u003c | I | J |\n\u003c +---+---+\n\u003c +---+---+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select i, j from table1 where table1.j NOT IN (select i from table2 where table1.i\u003dtable2.j)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n93a560,1021\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((Integer) ((Object[]) inputEnumerator.current())[1] !\u003d null) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               if ((Integer) current[1] !\u003d null \u0026\u0026 (Integer) current[0] !\u003d null) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child0.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer());\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] a0) {\n\u003e       return (Integer) a0[1];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_0 record0;\n\u003e       record0 \u003d new Record2_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_0 apply(Record2_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if ((Integer) in[0] !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Integer key, Record2_0 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (Integer) key,\n\u003e         (Record2_0) acc);\n\u003e     }\n\u003e   }\n\u003e   ), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1],\n\u003e           right \u003d\u003d null ? null : right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true).join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Integer) v1[0], (Integer) v1[1]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.util.List apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.of((Integer) v1[1], (Integer) v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           left[4],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1],\n\u003e           right \u003d\u003d null ? null : right[2]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final Long inp4_ \u003d (Long) current[4];\n\u003e                 final Long inp3_ \u003d (Long) current[3];\n\u003e                 if (!(!(inp3_ !\u003d null \u0026\u0026 inp3_.longValue() \u003d\u003d 0L) \u0026\u0026 ((Boolean) current[7] !\u003d null || ((Integer) current[1] \u003d\u003d null || inp4_ !\u003d null \u0026\u0026 inp3_ !\u003d null \u0026\u0026 inp4_.longValue() \u003c inp3_.longValue())))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               if ((Integer) ((Object[]) inputEnumerator.current())[1] !\u003d null) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               if ((Integer) current[1] !\u003d null \u0026\u0026 (Integer) current[0] !\u003d null) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child0.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer());\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] a0) {\n\u003e       return (Integer) a0[1];\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[ (stack truncated)\n97,101c1025,1039\n\u003c +---+---+\n\u003c | I | J |\n\u003c +---+---+\n\u003c +---+---+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from table1 where j not in (select i from table2)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n102a1041,1499\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_0 record0;\n\u003e       record0 \u003d new Record2_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_0 apply(Record2_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if ((Integer) in[0] !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e                 if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || ((Integer) current[1] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_0 record0;\n\u003e       record0 \u003d new Record2_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_0 apply(Record2_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if ((Integer) in[0] !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e                 if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || ((Integer) current[1] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePr (stack truncated)\n106,112c1503,1517\n\u003c +---+---+\n\u003c | I | J |\n\u003c +---+---+\n\u003c | 1 | 2 |\n\u003c | 1 | 3 |\n\u003c +---+---+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from table1 where j not in (select i from table2) or i \u003d 1\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n113a1519,1976\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_0 record0;\n\u003e       record0 \u003d new Record2_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_0 apply(Record2_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if ((Integer) in[0] !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e                 final Integer inp0_ \u003d (Integer) current[0];\n\u003e                 if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || ((Integer) current[1] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_))) || inp0_ !\u003d null \u0026\u0026 inp0_.intValue() \u003d\u003d 1) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_0 record0;\n\u003e       record0 \u003d new Record2_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_0 apply(Record2_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if ((Integer) in[0] !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e                 final Integer inp0_ \u003d (Integer) current[0];\n\u003e                 if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || ((Integer) current[1] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_))) || inp0_ !\u003d null \u0026\u0026 inp0_.intValue() \u003d\u003d 1) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Pr (stack truncated)\n117,122c1980,1994\n\u003c +---+---+\n\u003c | I | J |\n\u003c +---+---+\n\u003c | 1 | 2 |\n\u003c +---+---+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from table1 where j not in (select i from table2) or j \u003d 2\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n123a1996,2454\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_0 record0;\n\u003e       record0 \u003d new Record2_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_0 apply(Record2_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if ((Integer) in[0] !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e                 final Integer inp1_ \u003d (Integer) current[1];\n\u003e                 if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_))) || inp1_ !\u003d null \u0026\u0026 inp1_.intValue() \u003d\u003d 2) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_0 record0;\n\u003e       record0 \u003d new Record2_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_0 apply(Record2_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if ((Integer) in[0] !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e                 final Integer inp1_ \u003d (Integer) current[1];\n\u003e                 if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_))) || inp1_ !\u003d null \u0026\u0026 inp1_.intValue() \u003d\u003d 2) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache (stack truncated)\n127,132c2458,2472\n\u003c +---+---+\n\u003c | I | J |\n\u003c +---+---+\n\u003c | 1 | 3 |\n\u003c +---+---+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from table1 where j not in (select i from table2) or j \u003d 3\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n133a2474,2932\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_0 record0;\n\u003e       record0 \u003d new Record2_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_0 apply(Record2_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if ((Integer) in[0] !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e                 final Integer inp1_ \u003d (Integer) current[1];\n\u003e                 if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_))) || inp1_ !\u003d null \u0026\u0026 inp1_.intValue() \u003d\u003d 3) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[0],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE1\").asEnumerable().join(org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"BLANK\"), java.lang.Object[].class, \"TABLE2\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_0 record0;\n\u003e       record0 \u003d new Record2_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_0 apply(Record2_0 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if ((Integer) in[0] !\u003d null) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).join(child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[1];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v1) {\n\u003e       return (Integer) v1[0];\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]);\n\u003e                 final Integer inp1_ \u003d (Integer) current[1];\n\u003e                 if (!(inp2_ !\u003d 0L \u0026\u0026 ((Boolean) current[5] !\u003d null || (inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[3]) \u003c inp2_))) || inp1_ !\u003d null \u0026\u0026 inp1_.intValue() \u003d\u003d 3) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache (stack truncated)\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderBy",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store_id\", \"grocery_sqft\" from \"store\"\nwhere \"store_id\" \u003c 3 order by 2]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testGroupByEmpty2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select sum(\"unit_sales\") as s\nfrom \"foodmart\".\"sales_fact_1997\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinIntervalFrame",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select  \"deptno\",\n \"empid\",\n \"hire_date\",\n count(*) over (partition by \"deptno\" order by \"hire_date\" range between interval \u00271\u0027 year preceding and interval \u00271\u0027 year following) as r\nfrom (select \"empid\", \"deptno\",\n  DATE \u00272014-06-12\u0027 + \"empid\"*interval \u00270\u0027 day \"hire_date\"\n  from \"hr\".\"emps\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testJoinInCorrelatedSubQuery",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select *\nfrom \"hr\".\"depts\" as d\nwhere \"deptno\" in (\n  select d2.\"deptno\"\n  from \"hr\".\"depts\" as d2\n  join \"hr\".\"emps\" as e2 using (\"deptno\")\nwhere d.\"deptno\" \u003d d2.\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testCrossJoinWithJoinKeyPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select empno, ename, d.deptno, dname \nfrom scott.emp e,scott.dept d \nwhere e.deptno \u003d d.deptno]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" + 1 as x from \"emps\" where \"deptno\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testNullableNumericColumnInCloneSchema",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from emp]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testViewSchemaPath",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select deptno from scott.emp]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" + 1 as x, \"name\" from \"emps\" where \"deptno\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testFunSpatial",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select distinct\n  ST_PointFromText(\u0027POINT(-71.0642.28)\u0027) as c\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs11",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\", count(\"emps\".\"salary\") + 1\nfrom \"depts\"\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")\njoin \"locations\" on (\"locations\".\"name\" \u003d \"dependents\".\"name\")\njoin \"emps\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\nwhere \"depts\".\"deptno\" \u003e 10 and \"depts\".\"deptno\" \u003c 20\ngroup by \"dependents\".\"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testNestedArray",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"select \"empid\",\n  array[\n    array[\u0027x\u0027, \u0027y\u0027, \u0027z\u0027],\n    array[\"name\"]] as a\nfrom \"hr\".\"emps\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n              final java.util.ArrayList _list \u003d new java.util.ArrayList();\n              final java.util.ArrayList _list0 \u003d new java.util.ArrayList();\n              _list0.add(\"x\");\n              _list0.add(\"y\");\n              _list0.add(\"z\");\n              _list.add(_list0);\n              final java.util.ArrayList _list1 \u003d new java.util.ArrayList();\n              _list1.add(current.name);\n              _list.add(_list1);\n              return new Object[] {\n                  current.empid,\n                  _list};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggConstant",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select max(1) over (partition by \"deptno\"\n  order by \"empid\") as m\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView13",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where \"salary\" \u003e 1000 or (\"deptno\" \u003e 30 and \"salary\" \u003e 3000)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView7",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where (\"salary\" \u003e 1000 or (\"deptno\" \u003e\u003d 30 and \"salary\" \u003c\u003d 500))]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByFetch",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store_id\", \"grocery_sqft\" from \"store\"\nwhere \"store_id\" \u003c 10\norder by 1 fetch first 5 rows only]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testStatementCloseOnCompletion",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select * from \"emps\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n}\n\n\npublic Class getElementType() {\n  return org.apache.calcite.test.JdbcTest.Employee.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[8: quidem(sql/some.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/some.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/some.iq\n26,44c26,43\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where empno \u003e any (select deptno from \"scott\".dept)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_0 implements java.io.Serializable {\n\u003e   public byte f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record4_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record4_0) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_0) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_0) o).f3;\n\u003e   }\n45a45,456\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       byte a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (byte)127;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_0 record0;\n\u003e       record0 \u003d new Record4_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_0 apply(Record4_0 acc, Object[] in) {\n\u003e       acc.f1 \u003d true;\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toByte(in[0]));\n\u003e       acc.f2++;\n\u003e       acc.f3++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? Byte.valueOf(acc.f0) : (Byte) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final short inp3_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(current[3]);\n\u003e                 final Byte inp0_ \u003d (Byte) current[0];\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp0_ !\u003d null \u0026\u0026 inp3_ \u003e (short) inp0_.byteValue() || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp0_ !\u003d null \u0026\u0026 inp3_ \u003e (short) inp0_.byteValue()))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_0 implements java.io.Serializable {\n\u003e   public byte f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record4_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record4_0) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_0) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_0) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_0 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       byte a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (byte)127;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_0 record0;\n\u003e       record0 \u003d new Record4_0();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_0 apply(Record4_0 acc, Object[] in) {\n\u003e       acc.f1 \u003d true;\n\u003e       acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toByte(in[0]));\n\u003e       acc.f2++;\n\u003e       acc.f3++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_0 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_0) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_0 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? Byte.valueOf(acc.f0) : (Byte) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_0) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final short inp3_ \u003d org.apache.calcite.runtime.SqlFunctions.toShort(current[3]);\n\u003e                 final Byte inp0_ \u003d (Byte) current[0];\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp0_ !\u003d null \u0026\u0026 inp3_ \u003e (short) inp0_.byteValue() || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp0_ !\u003d null \u0026\u0026 inp3_ \u003e (short) inp0_.byteValue()))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 57, Column 162: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus. (stack truncated)\n52,70c463,480\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e any (select comm from \"scott\".emp)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n71a482,898\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e   (stack truncated)\n78,82c905,922\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c | EMPNO | ENAME | JOB | MGR | HIREDATE | SAL | COMM | DEPTNO |\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e all (select comm from \"scott\".emp)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n83a924,1339\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (!(inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_)))))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (!(inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_)))))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.j (stack truncated)\n90,108c1346,1363\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+-------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | X     |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+-------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 | false |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 | false |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 | false |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 | false |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 | false |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 | false |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |       |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |       |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |       |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |       |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |       |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |       |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |       |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |       |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+-------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select *, sal \u003e all (select comm from \"scott\".emp) as x\n\u003e from \"scott\".emp\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n109a1365,1771\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp8_0 \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   org.apache.calcite.runtime.SqlFunctions.not(inp1_ \u003d\u003d 0L ? Boolean.valueOf(false) : inp8_0 !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_) ? Boolean.valueOf(true) : inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) ? (Boolean) null : inp8_0 \u003d\u003d null || inp0_ \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_)))};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp8_0 \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   org.apache.calcite.runtime.SqlFunctions.not(inp1_ \u003d\u003d 0L ? Boolean.valueOf(false) : inp8_0 !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_) ? Boolean.valueOf(true) : inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) ? (Boolean) null : inp8_0 \u003d\u003d null || inp0_ \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_)))};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaCon (stack truncated)\n122,126c1784,1799\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c | EMPNO | ENAME | JOB | MGR | HIREDATE | SAL | COMM | DEPTNO |\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where not sal \u003c\u003d some (select comm from \"scott\".emp)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record2_2 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_2() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_2)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_2) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_2) o).f1;\n\u003e   }\n127a1801,2257\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_2 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_2 record0;\n\u003e       record0 \u003d new Record2_2();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_2 apply(Record2_2 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if (!(in[6] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]) \u003d\u003d null)) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_2 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_2) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_2 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_2) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e (                (Object[]) inputEnumerator.current())[6],\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(child.distinct(org.apache.calcite.linq4j.function.Functions.arrayComparer()), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.math.BigDecimal apply(Object[] v1) {\n\u003e       return v1[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v1[5]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.math.BigDecimal apply(Object[] v1) {\n\u003e       return v1[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           left[3],\n\u003e           left[4],\n\u003e           left[5],\n\u003e           left[6],\n\u003e           left[7],\n\u003e           left[8],\n\u003e           left[9],\n\u003e           right \u003d\u003d null ? null : right[0],\n\u003e           right \u003d\u003d null ? null : right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, true);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final long inp8_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[8]);\n\u003e                 if (!(inp8_ !\u003d 0L \u0026\u0026 ((Boolean) current[11] !\u003d null || (current[5] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]) \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toLong(current[9]) \u003c inp8_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record2_2 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public long f1;\n\u003e   public Record2_2() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record2_2)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record2_2) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_2) o).f1;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record2_2 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       long a0s0;\n\u003e       a0s0 \u003d 0L;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record2_2 record0;\n\u003e       record0 \u003d new Record2_2();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record2_2 apply(Record2_2 acc, Object[] in) {\n\u003e       acc.f0++;\n\u003e       if (!(in[6] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]) \u003d\u003d null)) {\n\u003e         acc.f1++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record2_2 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record2_2) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record2_2 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f0,\n\u003e           acc.f1};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record2_2) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[0],\n\u003e                 current[1]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close()  (stack truncated)\n134,152c2264,2281\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | X    |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 | true |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |      |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 | true |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |      |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 | true |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |      |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |      |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |      |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |      |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |      |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 | true |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 | true |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |      |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 | true |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select *, sal \u003c\u003d some (select comm from \"scott\".emp) as x\n\u003e from \"scott\".emp\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n153a2283,2690\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp8_0 \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   inp1_ \u003d\u003d 0L ? Boolean.valueOf(false) : inp8_0 !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_) ? Boolean.valueOf(true) : inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) ? (Boolean) null : inp8_0 \u003d\u003d null || inp0_ \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_))};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp8_0 \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   inp1_ \u003d\u003d 0L ? Boolean.valueOf(false) : inp8_0 !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_) ? Boolean.valueOf(true) : inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) ? (Boolean) null : inp8_0 \u003d\u003d null || inp0_ \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_))};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(Avatic (stack truncated)\n161,179c2698,2716\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where comm \u003c all (select comm from \"scott\".emp where 1 \u003d 0)\n\u003e order by empno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n180a2718,3148\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.linq4j.Linq4j.asEnumerable(new java.math.BigDecimal[] {}).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp9_ \u003d current[9] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[9]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               if (!(inp1_ !\u003d 0L \u0026\u0026 (inp9_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ge(inp9_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp9_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.ge(inp9_, inp0_)))))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d child.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v[3]);\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.linq4j.Linq4j.asEnumerable(new java.math.BigDecimal[] {}).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp9_ \u003d current[9] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[9]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               if (!(inp1_ !\u003d 0L \u0026\u0026 (inp9_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ge(inp9_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp9_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.ge(inp9_, inp0_)))))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e           (stack truncated)\n187,191c3155,3172\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c | EMPNO | ENAME | JOB | MGR | HIREDATE | SAL | COMM | DEPTNO |\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where comm \u003c some (select comm from \"scott\".emp where 1 \u003d 0)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n192a3174,3591\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.linq4j.Linq4j.asEnumerable(new java.math.BigDecimal[] {}).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp9_ \u003d current[9] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[9]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp9_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp9_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp9_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp9_, inp0_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.linq4j.Linq4j.asEnumerable(new java.math.BigDecimal[] {}).aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp9_ \u003d current[9] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[9]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp9_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp9_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp9_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp9_, inp0_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 106, Column 55: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext,  (stack truncated)\n198,216c3597,3614\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e all (select comm from \"scott\".emp where comm \u003c\u003e null)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n217a3616,4051\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {}return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (!(inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_)))))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {}return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[ (stack truncated)\n223,233c4057,4060\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c |  7566 | JONES | MANAGER   | 7839 | 1981-02-04 | 2975.00 |      |     20 |\n\u003c |  7698 | BLAKE | MANAGER   | 7839 | 1981-01-05 | 2850.00 |      |     30 |\n\u003c |  7782 | CLARK | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |\n\u003c |  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 |      |     20 |\n\u003c |  7839 | KING  | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |\n\u003c |  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 |      |     20 |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c (6 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e all(500, 2000)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n234a4062,4262\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_500_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v) \u0026\u0026 (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v1))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_500_ \u003d new java.math.BigDecimal(\n\u003e               \"500\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e               \"2000\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_500_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v) \u0026\u0026 (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v1))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_500_ \u003d new java.math.BigDecimal(\n\u003e               \"500\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e               \"2000\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n240,245c4268,4271\n\u003c +-------+-------+-----------+-----+------------+---------+------+--------+\n\u003c | EMPNO | ENAME | JOB       | MGR | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+-------+-----------+-----+------------+---------+------+--------+\n\u003c |  7839 | KING  | PRESIDENT |     | 1981-11-17 | 5000.00 |      |     10 |\n\u003c +-------+-------+-----------+-----+------------+---------+------+--------+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e all (4000, 2000)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n246a4273,4473\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_4000_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v) \u0026\u0026 (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v1))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_4000_ \u003d new java.math.BigDecimal(\n\u003e               \"4000\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e               \"2000\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_4000_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v) \u0026\u0026 (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v1))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_4000_ \u003d new java.math.BigDecimal(\n\u003e               \"4000\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e               \"2000\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n252,262c4479,4482\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c |  7566 | JONES | MANAGER   | 7839 | 1981-02-04 | 2975.00 |      |     20 |\n\u003c |  7698 | BLAKE | MANAGER   | 7839 | 1981-01-05 | 2850.00 |      |     30 |\n\u003c |  7782 | CLARK | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |\n\u003c |  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 |      |     20 |\n\u003c |  7839 | KING  | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |\n\u003c |  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 |      |     20 |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c (6 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e some (4000, 2000)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n263a4484,4684\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_4000_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v) || inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v1)) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_4000_ \u003d new java.math.BigDecimal(\n\u003e               \"4000\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e               \"2000\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_4000_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v) || inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v1)) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_4000_ \u003d new java.math.BigDecimal(\n\u003e               \"4000\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e               \"2000\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n269,279c4690,4693\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c |  7566 | JONES | MANAGER   | 7839 | 1981-02-04 | 2975.00 |      |     20 |\n\u003c |  7698 | BLAKE | MANAGER   | 7839 | 1981-01-05 | 2850.00 |      |     30 |\n\u003c |  7782 | CLARK | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |\n\u003c |  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 |      |     20 |\n\u003c |  7839 | KING  | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |\n\u003c |  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 |      |     20 |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c (6 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e any (4000, 2000)\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n280a4695,4895\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_4000_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v) || inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v1)) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_4000_ \u003d new java.math.BigDecimal(\n\u003e               \"4000\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e               \"2000\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_4000_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v) || inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v1)) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_4000_ \u003d new java.math.BigDecimal(\n\u003e               \"4000\");\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e               \"2000\");\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n292,302c4907,4925\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c |  7839 | KING  | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |\n\u003c |  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 |      |     20 |\n\u003c |  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 |      |     20 |\n\u003c |  7566 | JONES | MANAGER   | 7839 | 1981-02-04 | 2975.00 |      |     20 |\n\u003c |  7698 | BLAKE | MANAGER   | 7839 | 1981-01-05 | 2850.00 |      |     30 |\n\u003c |  7782 | CLARK | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c (6 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e any (select sal * 2 from \"scott\".emp)\n\u003e order by sal desc\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n303a4927,5355\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp5_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp5_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               if (inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_)))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d child0.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.math.BigDecimal apply(Object[] v) {\n\u003e       return v[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v[8]);\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(true, true));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp5_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp5_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.ap (stack truncated)\n310,321c5362,5380\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c |  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7934 | MILLER | CLERK    | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c |  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK    | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK    | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7369 | SMITH  | CLERK    | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c (7 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003c all (select sal * 2 from \"scott\".emp)\n\u003e order by sal desc\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n322a5382,5810\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp5_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp5_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               if (!(inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ge(inp8_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.ge(inp8_, inp0_)))))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d child0.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public java.math.BigDecimal apply(Object[] v) {\n\u003e       return v[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v[8]);\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(true, true));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp5_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp5_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new or (stack truncated)\n333,351c5821,5842\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+-------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | C     |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+-------+\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 | false |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 | false |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 | false |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 | false |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 | false |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 | false |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 | false |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 | true  |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 | true  |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 | true  |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 | true  |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 | true  |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 | true  |\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 | true  |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+-------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select r.*,\n\u003e   not case when m is not null then r.sal \u003e\u003d m\n\u003e       when c \u003e 0 then null\n\u003e       else false end as c\n\u003e from (select min(sal * 2) as m, count(*) as c from \"scott\".emp)\n\u003e cross join \"scott\".emp as r\n\u003e order by sal desc\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record3_4 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public Record3_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record3_4) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record3_4) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_4) o).f2;\n\u003e   }\n352a5844,6259\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_4 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp5_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp5_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record3_4 record0;\n\u003e       record0 \u003d new Record3_4();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_4 apply(Record3_4 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_4 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_4) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record3_4 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record3_4) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp7_0 \u003d current[7] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[7]);\n\u003e             final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 org.apache.calcite.runtime.SqlFunctions.not(inp0_ !\u003d null ? (inp7_0 \u003d\u003d null || inp0_ \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.ge(inp7_0, inp0_))) : org.apache.calcite.runtime.SqlFunctions.toLong(current[1]) \u003e 0L ? (Boolean) null : Boolean.valueOf(false))};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return child0.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public java.math.BigDecimal apply(Object[] v) {\n\u003e         return v[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(v[5]);\n\u003e       }\n\u003e       public Object apply(Object v) {\n\u003e         return apply(\n\u003e           (Object[]) v);\n\u003e       }\n\u003e     }\n\u003e     , org.apache.calcite.linq4j.function.Functions.nullsComparator(true, true));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record3_4 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public Record3_4() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record3_4)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record3_4) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record3_4) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_4) o).f2;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record3_4 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp5_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp5_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       Record3_4 record0;\n\u003e       record0 \u003d new Record3_4();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record3_4 apply(Record3_4 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       return acc;\n\u003e     }\n\u003e     public Record3_4 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record3_4) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record3_4 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record3_4) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp7_0 \u003d current[7] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[7]);\n\u003e             final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e             return new Object[] {\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e              (stack truncated)\n358,362c6265,6282\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c | EMPNO | ENAME | JOB | MGR | HIREDATE | SAL | COMM | DEPTNO |\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003c all (select comm * 2 from \"scott\".emp)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n363a6284,6709\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (!(inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ge(inp8_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.ge(inp8_, inp0_)))))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                (stack truncated)\n370,383c6716,6734\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK    | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7782 | CLARK  | MANAGER  | 7839 | 1981-06-09 | 2450.00 |         |     10 |\n\u003c |  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK    | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK    | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7934 | MILLER | CLERK    | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c (9 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003c any (select comm * 2 from \"scott\".emp)\n\u003e order by empno\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n384a6736,7165\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               if (inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp8_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp8_, inp0_)))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7],\n\u003e                 current[8],\n\u003e                 current[9],\n\u003e                 current[10]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d child0.orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public short apply(Object[] v) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toShort(v[3]);\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apach (stack truncated)\n392,401c7173,7190\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c |  7566 | JONES | MANAGER   | 7839 | 1981-02-04 | 2975.00 |      |     20 |\n\u003c |  7698 | BLAKE | MANAGER   | 7839 | 1981-01-05 | 2850.00 |      |     30 |\n\u003c |  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 |      |     20 |\n\u003c |  7839 | KING  | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |\n\u003c |  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 |      |     20 |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c (5 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003c any (select comm * 2 from \"scott\".emp) is unknown\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n402a7192,7617\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (!(inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp8_, inp0_)) \u0026\u0026 (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] (stack truncated)\n408,426c7623,7639\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+-------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | X     |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+-------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 | false |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |       |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 | false |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |       |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 | false |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |       |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |       |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |       |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |       |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |       |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 | false |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 | false |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |       |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 | false |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+-------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select *, sal \u003e all(select comm from \"scott\".emp) as x from \"scott\".emp\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n427a7641,8047\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp8_0 \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   org.apache.calcite.runtime.SqlFunctions.not(inp1_ \u003d\u003d 0L ? Boolean.valueOf(false) : inp8_0 !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_) ? Boolean.valueOf(true) : inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) ? (Boolean) null : inp8_0 \u003d\u003d null || inp0_ \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_)))};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp8_0 \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e               final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e               final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10],\n\u003e                   org.apache.calcite.runtime.SqlFunctions.not(inp1_ \u003d\u003d 0L ? Boolean.valueOf(false) : inp8_0 !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_) ? Boolean.valueOf(true) : inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) ? (Boolean) null : inp8_0 \u003d\u003d null || inp0_ \u003d\u003d null ? (Boolean) null : Boolean.valueOf(org.apache.calcite.runtime.SqlFunctions.le(inp8_0, inp0_)))};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConn (stack truncated)\n433,437c8053,8070\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c | EMPNO | ENAME | JOB | MGR | HIREDATE | SAL | COMM | DEPTNO |\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c +-------+-------+-----+-----+----------+-----+------+--------+\n\u003c (0 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e all (select comm from \"scott\".emp)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n438a8072,8487\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (!(inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_)))))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (!(inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_)))))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.j (stack truncated)\n444,462c8493,8510\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e any (select comm from \"scott\".emp)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n463a8512,8928\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e   (stack truncated)\n469,487c8934,8951\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e any (select comm from \"scott\".emp where comm \u003c 1000)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n488a8953,9379\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1000_ \u003d new java.math.BigDecimal(\n\u003e             1000);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1000_ \u003d new java.math.BigDecimal(\n\u003e             1000);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e       (stack truncated)\n494,512c9385,9402\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e any (select comm from \"scott\".emp where comm \u003c 2000)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n513a9404,9830\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e             2000);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e             2000);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e       (stack truncated)\n519,537c9836,9853\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |\n\u003c |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |\n\u003c |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+---------+--------+\n\u003c (14 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e any (select comm * 2 from \"scott\".emp where comm \u003c 2000)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n538a9855,10263\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e             2000);\n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_) || inp1_ \u003c\u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.gt(inp8_, inp0_)))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e             2000);\n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[])  (stack truncated)\n544,553c10269,10286\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c |  7566 | JONES | MANAGER   | 7839 | 1981-02-04 | 2975.00 |      |     20 |\n\u003c |  7698 | BLAKE | MANAGER   | 7839 | 1981-01-05 | 2850.00 |      |     30 |\n\u003c |  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 |      |     20 |\n\u003c |  7839 | KING  | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |\n\u003c |  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 |      |     20 |\n\u003c +-------+-------+-----------+------+------------+---------+------+--------+\n\u003c (5 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e all (select comm * 2 from \"scott\".emp where comm \u003c 2000)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n554a10288,10696\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e             2000);\n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (!(inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_)))))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e               final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2000_;\n\u003e               if (inp6_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.lt(inp6_, v)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final java.math.BigDecimal inp6_ \u003d current[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]);\n\u003e             final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_2_;\n\u003e             return inp6_ \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.multiply(inp6_, v);\n\u003e           }\n\u003e \n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2000_ \u003d new java.math.BigDecimal(\n\u003e             2000);\n\u003e           static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_2_ \u003d new java.math.BigDecimal(\n\u003e             2);\n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, java.math.BigDecimal in) {\n\u003e       if (in !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, in);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (in !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (java.math.BigDecimal) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Obje (stack truncated)\n560,572c10702,10719\n\u003c +-------+--------+-----------+------+------------+---------+--------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM   | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+--------+--------+\n\u003c |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 | 300.00 |     30 |\n\u003c |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |        |     20 |\n\u003c |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |        |     30 |\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |        |     10 |\n\u003c |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |        |     20 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |        |     10 |\n\u003c |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |   0.00 |     30 |\n\u003c |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |        |     20 |\n\u003c +-------+--------+-----------+------+------------+---------+--------+--------+\n\u003c (8 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp\n\u003e where sal \u003e all (select comm from \"scott\".emp where comm is not null)\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n573a10721,11161\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               if (!(current[6] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]) \u003d\u003d null)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp8_ \u003d current[8] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[8]);\n\u003e                 final java.math.BigDecimal inp0_ \u003d current[0] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[0]);\n\u003e                 final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n\u003e                 if (!(inp1_ !\u003d 0L \u0026\u0026 (inp8_ !\u003d null \u0026\u0026 inp0_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_) || (inp1_ \u003e org.apache.calcite.runtime.SqlFunctions.toLong(current[2]) || (inp8_ \u003d\u003d null || inp0_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.le(inp8_, inp0_)))))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7],\n\u003e                   current[8],\n\u003e                   current[9],\n\u003e                   current[10]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record4_1 implements java.io.Serializable {\n\u003e   public java.math.BigDecimal f0;\n\u003e   public boolean f1;\n\u003e   public long f2;\n\u003e   public long f3;\n\u003e   public Record4_1() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record4_1)) {\n\u003e       return false;\n\u003e     }\n\u003e     return java.util.Objects.equals(this.f0, ((Record4_1) o).f0) \u0026\u0026 this.f1 \u003d\u003d ((Record4_1) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record4_1) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record4_1) o).f3;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record4_1 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               if (!(current[6] \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[6]) \u003d\u003d null)) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       java.math.BigDecimal a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d (java.math.BigDecimal) null;\n\u003e       long a1s0;\n\u003e       a1s0 \u003d 0L;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       Record4_1 record0;\n\u003e       record0 \u003d new Record4_1();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a2s0;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record4_1 apply(Record4_1 acc, Object[] in) {\n\u003e       final java.math.BigDecimal inp6_ \u003d in[6] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(in[6]);\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d (java.math.BigDecimal) org.apache.calcite.runtime.SqlFunctions.greater(acc.f0, inp6_);\n\u003e       }\n\u003e       acc.f2++;\n\u003e       if (inp6_ !\u003d null) {\n\u003e         acc.f3++;\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record4_1 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record4_1) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object[] apply(Record4_1 acc) {\n\u003e       return new Object[] {\n\u003e           acc.f1 ? acc.f0 : (java.math.BigDecimal) null,\n\u003e           acc.f2,\n\u003e           acc.f3};\n\u003e     }\n\u003e     public Object apply(Object acc) {\n\u003e       return apply(\n\u003e         (Record4_1) acc);\n\u003e     }\n\u003e   }\n\u003e   )).join(_inputEnumerable, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public org.apache.calcite.runtime.FlatLists.ComparableEmptyList apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.FlatLists.COMPARABLE_EMPTY_LIST;\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           left[2],\n\u003e           right[0],\n\u003e           right[1],\n\u003e           right[2],\n\u003e           right[3],\n\u003e           right[4],\n\u003e           right[5],\n\u003e           right[6],\n\u003e           right[7]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inp (stack truncated)\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testMixedEqualAndIsNotDistinctJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select *\n  from \"foodmart\".\"employee\" as e1\n  join \"foodmart\".\"employee\" as e2 on\n  e1.\"first_name\" \u003d e1.\"first_name\"\n  and e1.\"last_name\" is distinct from e2.\"last_name\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", \"empid\", sum(\"empid\") as s, count(*) as c\nfrom \"emps\" group by \"empid\", \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"depts\".\"deptno\", sum(\"empid\") as s\nfrom \"emps\" join \"depts\" using (\"deptno\")\nwhere \"emps\".\"deptno\" \u003e 10 group by \"depts\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWhereNot",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select 1\nfrom \"store\"\nwhere NOT (\"store\".\"grocery_sqft\" \u003c 22000)\ngroup by \"store\".\"store_street_address\"\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationOnCountDistinctQuery1",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", count(distinct \"empid\") as c from (\nselect \"deptno\", \"empid\"\nfrom \"emps\"\ngroup by \"deptno\", \"empid\")\ngroup by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggOrderByConstant",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select max(\"empid\"*0) over (partition by \"deptno\"\n  order by 42) as m\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByOnSortedTable2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"time_id\", \"the_date\" from \"time_by_day\"\nwhere \"time_id\" \u003c 370\norder by \"time_id\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testUnionAll",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\", \"name\" from \"hr\".\"emps\" where \"deptno\"\u003d10\nunion all\nselect \"empid\", \"name\" from \"hr\".\"emps\" where \"empid\"\u003e\u003d150]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" + 1 as x, \"name\" from \"emps\" where \"deptno\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testTrivialSort",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select a.\"value\", b.\"value\"\n  from \"bools\" a\n     , \"bools\" b\n offset 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testLateral",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\",\n LATERAL (select * from \"hr\".\"depts\" where \"emps\".\"deptno\" \u003d \"depts\".\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testDistinctCountComposite",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"time_by_day\".\"the_year\" as \"c0\",\n count(distinct \"sales_fact_1997\".\"product_id\",\n       \"sales_fact_1997\".\"customer_id\") as \"m0\"\nfrom \"time_by_day\" as \"time_by_day\",\n \"sales_fact_1997\" as \"sales_fact_1997\"\nwhere \"sales_fact_1997\".\"time_id\" \u003d \"time_by_day\".\"time_id\"\nand \"time_by_day\".\"the_year\" \u003d 1997\ngroup by \"time_by_day\".\"the_year\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testDateCanCompare",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select a.v\nfrom (select \"sqlDate\" v\n  from \"s\".\"everyTypes\"   group by \"sqlDate\") a,    (select \"sqlDate\" v\n  from \"s\".\"everyTypes\"\n  group by \"sqlDate\") b\nwhere a.v \u003e\u003d b.v\ngroup by a.v]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testScalarSubQuery",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\", \"deptno\",\n (select \"name\" from \"hr\".\"depts\"\n  where \"deptno\" \u003d e.\"deptno\") as dname\nfrom \"hr\".\"emps\" as e]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterializationUKFK6",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"emps\".\"empid\" from \"emps\"\njoin \"dependents\" using (\"empid\")\nwhere \"emps\".\"empid\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MultiJdbcSchemaJoinTest",
        "testMethod": "testJdbcWithEnumerableJoin",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select t.id, t.field1 from db.table1 t join \"hr\".\"emps\" e on e.\"empid\" \u003d t.id\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            return inputEnumerator.moveNext();\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            return ((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).empid;\n          }\n\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"DB\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"TABLE1\\\"\", new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object[] values \u003d new Object[2];\n              values[0] \u003d resultSet.getInt(1);\n              if (resultSet.wasNull()) {\n                values[0] \u003d null;\n              }\n              values[1] \u003d resultSet.getObject(2);\n              return values;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ).join(right, new org.apache.calcite.linq4j.function.Function1() {\n    public int apply(Object[] v1) {\n      return org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]);\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Object[]) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function1() {\n    public int apply(int v1) {\n      return v1;\n    }\n    public Object apply(Integer v1) {\n      return apply(\n        v1.intValue());\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Integer) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function2() {\n    public Object[] apply(Object[] left, Integer right) {\n      return new Object[] {\n          left[0],\n          left[1],\n          right};\n    }\n    public Object[] apply(Object left, Object right) {\n      return apply(\n        (Object[]) left,\n        (Integer) right);\n    }\n  }\n  , null, false, false);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              return new Object[] {\n                  current[0],\n                  current[1]};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggFirstValue",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select  \"deptno\",\n \"empid\",\n \"commission\",\n first_value(\"commission\") over (partition by \"deptno\" order by \"empid\") as r\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testMaterializationSubstitution",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select *\nfrom (select * from \"emps\" where \"empid\" \u003c 300)\njoin (select * from \"emps\" where \"empid\" \u003c 200) using (\"empid\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testCrossJoinWithJoinKeyAndFilterPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select empno, ename, d.deptno, dname \nfrom scott.emp e,scott.dept d \nwhere e.deptno \u003d d.deptno \nand e.deptno\u003d20]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testTileAlgorithm",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select distinct t.\"the_year\", t.\"quarter\"\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"foodmart\".\"time_by_day\" as t using (\"time_id\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testLatticeRecognizeGroupJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select distinct p.\"brand_name\", s.\"customer_id\"\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"foodmart\".\"product\" as p using (\"product_id\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.jdbc.CalciteRemoteDriverTest",
        "testMethod": "testRemoteExecute",
        "failureName": "org.apache.calcite.avatica.AvaticaSqlException",
        "detail": "Error -1 (00000) : Error while executing SQL \"select * from \"hr\".\"emps\"\": Remote driver error: RuntimeException: Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n}\n\n\npublic Class getElementType() {\n  return org.apache.calcite.test.JdbcTest.Employee.class;\n}\n\n\n -\u003e CompileException: Line 5, Column 200: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[11: quidem(sql/lateral.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/lateral.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/lateral.iq\n45,52c45,47\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |      |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from lateral (select * from \"scott\".emp) where deptno \u003d 10\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n53a49,235\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e                 if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e                 if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n57,64c239,241\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |      |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from lateral (select * from \"scott\".emp) as e where deptno \u003d 10\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n65a243,429\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e                 if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e                 if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n70,77c434,436\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |      |     10 |\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from (table \"scott\".emp) where deptno \u003d 10\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n78a438,624\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e                 if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e                 if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n100,107c646,650\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+---------+------------+----------+\n\u003c | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO | DEPTNO0 | DNAME      | LOC      |\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+---------+------------+----------+\n\u003c |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |\n\u003c |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |\n\u003c |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |\n\u003c +-------+--------+-----------+------+------------+---------+------+--------+---------+------------+----------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from lateral (select * from \"scott\".emp) as e\n\u003e join (table \"scott\".dept) using (deptno)\n\u003e where e.deptno \u003d 10\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n108a652,918\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e               if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return left.join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[7];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Object[] left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left[0],\n\u003e             left[1],\n\u003e             left[2],\n\u003e             left[3],\n\u003e             left[4],\n\u003e             left[5],\n\u003e             left[6],\n\u003e             left[7],\n\u003e             right[0],\n\u003e             right[1],\n\u003e             right[2]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Object[]) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Byte inp7_ \u003d (Byte) ((Object[]) inputEnumerator.current())[7];\n\u003e               if (inp7_ !\u003d null \u0026\u0026 (int) inp7_.byteValue() \u003d\u003d 10) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return left.join(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"DEPT\").asEnumerable(), new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public Byte apply(Object[] v1) {\n\u003e         return (Byte) v1[7];\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public byte apply(Object[] v1) {\n\u003e         return org.apache.calcite.runtime.SqlFunctions.toByte(v1[0]);\n\u003e       }\n\u003e       public Object apply(Object v1) {\n\u003e         return apply(\n\u003e           (Object[]) v1);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Object[] apply(Object[] left, Object[] right) {\n\u003e         return new Object[] {\n\u003e             left[0],\n\u003e             left[1],\n\u003e             left[2],\n\u003e             left[3],\n\u003e             left[4],\n\u003e             left[5],\n\u003e             left[6],\n\u003e             left[7],\n\u003e             right[0],\n\u003e             right[1],\n\u003e             right[2]};\n\u003e       }\n\u003e       public Object[] apply(Object left, Object right) {\n\u003e         return apply(\n\u003e           (Object[]) left,\n\u003e           (Object[]) right);\n\u003e       }\n\u003e     }\n\u003e     , null, false, false);\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where \"deptno\" + 10 \u003d 20]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAgg2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\",\n \"empid\",\nsum(\"salary\" + \"empid\") over w as s,\n 5 as five,\n min(\"salary\") over w as m,\n count(*) over w as c,\n count(*) over w2 as c2,\n count(*) over w11 as c11,\n count(*) over w11dept as c11dept\nfrom \"hr\".\"emps\"\nwindow w as (order by \"empid\" rows 1 preceding),\n w2 as (order by \"empid\" rows 2 preceding),\n w11 as (order by \"empid\" rows between 1 preceding and 1 following),\n w11dept as (partition by \"deptno\" order by \"empid\" rows between 1 preceding and 1 following)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs7",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\", sum(\"salary\") as s\nfrom \"emps\"\njoin \"depts\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\njoin \"dependents\" on (\"emps\".\"empid\" \u003d \"dependents\".\"empid\")\ngroup by \"dependents\".\"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testExtractOnNullDateField",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select\n  extract(year from \"end_date\"), \"hire_date\", \"birth_date\"\nfrom \"foodmart\".\"employee\"\nwhere extract(year from \"end_date\") in (1994, 1995, 1996)\ngroup by\n  extract(year from \"end_date\"), \"hire_date\", \"birth_date\"\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.profile.ProfilerTest",
        "testMethod": "testProfileZeroRows",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while preparing statement [select * from \"scott\".dept where false]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.profile.ProfilerTest",
        "testMethod": "testProfileScott4",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while preparing statement [select * from \"scott\".emp\njoin \"scott\".dept using (deptno)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationNoAggregateFuncs2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\" from \"emps\" group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testUserDefinedFunctionInstanceCount",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"adhoc\".my_det_plus(\"deptno\", 100) as p\nfrom \"adhoc\".EMPLOYEES]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testSelect",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select *\nfrom \"foodmart\".\"sales_fact_1997\" as s\nwhere s.\"cust_id\" \u003d 100]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggPartitionByConstant",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select max(\"empid\"*0) over (partition by 42\n  order by \"empid\") as m\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testJdbcSchemaDirectConnection",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select count(*) as c from emp\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object value;\n              value \u003d resultSet.getLong(1);\n              if (resultSet.wasNull()) {\n                value \u003d null;\n              }\n              return value;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"adhoc\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT COUNT(*) AS \\\"C\\\"\\nFROM \\\"SCOTT\\\".\\\"EMP\\\"\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return long.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testUnnestArrayColumn",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select d.\"name\", e.*\nfrom \"hr\".\"depts\" as d,\n UNNEST(d.\"employees\") as e]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs5",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", sum(\"empid\") + 1 as s\nfrom \"emps\" where \"deptno\" \u003e 10 group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testEquiThetaJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.\"empid\", d.\"name\", e.\"name\"\nfrom \"hr\".\"emps\" as e\njoin \"hr\".\"depts\" as d\non e.\"deptno\" \u003d d.\"deptno\"\nand e.\"name\" \u003c\u003e d.\"name\"\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testFullJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.\"deptno\", d.\"deptno\"\nfrom \"hr\".\"emps\" as e\n  full join \"hr\".\"depts\" as d using (\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MultiJdbcSchemaJoinTest",
        "testMethod": "test2",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select table1.id, table1.field1 from db1.table1 join db2.table2 on table1.id \u003d table2.id\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"DB2\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"TABLE2\\\"\", new org.apache.calcite.linq4j.function.Function1() {\n            public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n              return new org.apache.calcite.linq4j.function.Function0() {\n                  public Object apply() {\n                    try {\n                      final Object[] values \u003d new Object[2];\n                      values[0] \u003d resultSet.getObject(1);\n                      values[1] \u003d resultSet.getObject(2);\n                      return values;\n                    } catch (java.sql.SQLException e) {\n                      throw new RuntimeException(\n                        e);\n                    }\n                  }\n                }\n              ;\n            }\n            public Object apply(final Object resultSet) {\n              return apply(\n                (java.sql.ResultSet) resultSet);\n            }\n          }\n          ).enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            return inputEnumerator.moveNext();\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            final Object[] current \u003d (Object[]) inputEnumerator.current();\n            return current[0] \u003d\u003d null ? (String) null : current[0].toString();\n          }\n\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"DB1\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"TABLE1\\\"\", new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object[] values \u003d new Object[2];\n              values[0] \u003d resultSet.getObject(1);\n              values[1] \u003d resultSet.getObject(2);\n              return values;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ).join(right, new org.apache.calcite.linq4j.function.Function1() {\n    public String apply(Object[] v1) {\n      return v1[0] \u003d\u003d null ? (String) null : v1[0].toString();\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Object[]) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function1() {\n    public String apply(String v1) {\n      return v1;\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (String) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function2() {\n    public Object[] apply(Object[] left, String right) {\n      return new Object[] {\n          left[0],\n          left[1],\n          right};\n    }\n    public Object[] apply(Object left, Object right) {\n      return apply(\n        (Object[]) left,\n        (String) right);\n    }\n  }\n  , null, false, false);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              return new Object[] {\n                  current[0],\n                  current[1]};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testReadme",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select d.deptno, min(e.empid)\nfrom hr.emps as e\njoin hr.depts as d\n  on e.deptno \u003d d.deptno\ngroup by d.deptno\nhaving count(*) \u003e 1\": Error while compiling generated Java code:\npublic static class Record2_0 implements java.io.Serializable {\n  public int f0;\n  public long f1;\n  public Record2_0() {}\n  public boolean equals(Object o) {\n    if (this \u003d\u003d o) {\n      return true;\n    }\n    if (!(o instanceof Record2_0)) {\n      return false;\n    }\n    return this.f0 \u003d\u003d ((Record2_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record2_0) o).f1;\n  }\n\n  public int hashCode() {\n    int h \u003d 0;\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n    return h;\n  }\n\n  public int compareTo(Record2_0 that) {\n    int c;\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n    if (c !\u003d 0) {\n      return c;\n    }\n    return 0;\n  }\n\n  public String toString() {\n    return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \"}\";\n  }\n\n}\n\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            return inputEnumerator.moveNext();\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n            return new Object[] {\n                current.empid,\n                current.deptno};\n          }\n\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).depts).select(new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.test.JdbcTest.Department apply(org.apache.calcite.test.JdbcTest.Department row) {\n      return new org.apache.calcite.test.JdbcTest.Department(\n          row.deptno,\n          row.name,\n          org.apache.calcite.linq4j.Linq4j.asEnumerable(row.employees).select(new org.apache.calcite.linq4j.function.Function1() {\n            public java.util.List apply(org.apache.calcite.test.JdbcTest.Employee o) {\n              return org.apache.calcite.runtime.FlatLists.of(o.empid, o.deptno, o.name, o.salary, o.commission);\n            }\n            public Object apply(Object o) {\n              return apply(\n                (org.apache.calcite.test.JdbcTest.Employee) o);\n            }\n          }\n          ).toList(),\n          row.location);\n    }\n    public Object apply(Object row) {\n      return apply(\n        (org.apache.calcite.test.JdbcTest.Department) row);\n    }\n  }\n  );\n  final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            return inputEnumerator.moveNext();\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            return ((org.apache.calcite.test.JdbcTest.Department) inputEnumerator.current()).deptno;\n          }\n\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n    public int apply(Object[] v1) {\n      return org.apache.calcite.runtime.SqlFunctions.toInt(v1[1]);\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Object[]) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function1() {\n    public int apply(int v1) {\n      return v1;\n    }\n    public Object apply(Integer v1) {\n      return apply(\n        v1.intValue());\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Integer) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function2() {\n    public Object[] apply(Object[] left, Integer right) {\n      return new Object[] {\n          left[0],\n          left[1],\n          right};\n    }\n    public Object[] apply(Object left, Object right) {\n      return apply(\n        (Object[]) left,\n        (Integer) right);\n    }\n  }\n  , null, false, false).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n    public int apply(Object[] a0) {\n      return org.apache.calcite.runtime.SqlFunctions.toInt(a0[2]);\n    }\n    public Object apply(Object a0) {\n      return apply(\n        (Object[]) a0);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function0() {\n    public Object apply() {\n      int a0s0;\n      a0s0 \u003d 2147483647;\n      long a1s0;\n      a1s0 \u003d 0L;\n      Record2_0 record0;\n      record0 \u003d new Record2_0();\n      record0.f0 \u003d a0s0;\n      record0.f1 \u003d a1s0;\n      return record0;\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function2() {\n    public Record2_0 apply(Record2_0 acc, Object[] in) {\n      acc.f0 \u003d org.apache.calcite.runtime.SqlFunctions.lesser(acc.f0, org.apache.calcite.runtime.SqlFunctions.toInt(in[0]));\n      acc.f1++;\n      return acc;\n    }\n    public Record2_0 apply(Object acc, Object in) {\n      return apply(\n        (Record2_0) acc,\n        (Object[]) in);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function2() {\n    public Object[] apply(int key, Record2_0 acc) {\n      return new Object[] {\n          key,\n          acc.f0,\n          acc.f1};\n    }\n    public Object[] apply(Integer key, Record2_0 acc) {\n      return apply(\n        key.intValue(),\n        acc);\n    }\n    public Object[] apply(Object key, Object acc) {\n      return apply(\n        (Integer) key,\n        (Record2_0) acc);\n    }\n  }\n  );\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              while (inputEnumerator.moveNext()) {\n                if (org.apache.calcite.runtime.SqlFunctions.toLong(((Object[]) inputEnumerator.current())[2]) \u003e 1L) {\n                  return true;\n                }\n              }\n              return false;\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              return new Object[] {\n                  current[0],\n                  current[1]};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testTableModify",
        "failureName": "java.lang.AssertionError",
        "detail": "\nExpected: is \u003c[[[hr, m0]]]\u003e\n     but: was \u003c[]\u003e",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" from \"emps\"\njoin \"depts\" using (\"deptno\") where \"depts\".\"deptno\" \u003e 20\ngroup by \"empid\", \"depts\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testDivideWraperWrapper",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"wrapperLong\" / \"wrapperLong\" as c\n from \"s\".\"everyTypes\" where \"primitiveLong\" \u003c\u003e 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MultiJdbcSchemaJoinTest",
        "testMethod": "testSchemaConsistency",
        "failureName": "java.sql.SQLException",
        "detail": "Error while preparing statement [select * from db.table2]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationNoAggregateFuncs1",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\", \"deptno\" from \"emps\" group by \"empid\", \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testCloneSchema",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select count(*) from \"foodmart2\".\"time_by_day\"\": Error while compiling generated Java code:\npublic static class Record1_0 implements java.io.Serializable {\n  public long f0;\n  public Record1_0() {}\n  public boolean equals(Object o) {\n    if (this \u003d\u003d o) {\n      return true;\n    }\n    if (!(o instanceof Record1_0)) {\n      return false;\n    }\n    return this.f0 \u003d\u003d ((Record1_0) o).f0;\n  }\n\n  public int hashCode() {\n    int h \u003d 0;\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n    return h;\n  }\n\n  public int compareTo(Record1_0 that) {\n    final int c;\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n    if (c !\u003d 0) {\n      return c;\n    }\n    return 0;\n  }\n\n  public String toString() {\n    return \"{f0\u003d\" + this.f0 + \"}\";\n  }\n\n}\n\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foodmart2\"), java.lang.Object[].class, \"time_by_day\").asEnumerable().aggregate(new org.apache.calcite.linq4j.function.Function0() {\n      public Object apply() {\n        long a0s0;\n        a0s0 \u003d 0L;\n        Record1_0 record0;\n        record0 \u003d new Record1_0();\n        record0.f0 \u003d a0s0;\n        return record0;\n      }\n    }\n    .apply(), new org.apache.calcite.linq4j.function.Function2() {\n      public Record1_0 apply(Record1_0 acc, Object[] in) {\n        acc.f0++;\n        return acc;\n      }\n      public Record1_0 apply(Object acc, Object in) {\n        return apply(\n          (Record1_0) acc,\n          (Object[]) in);\n      }\n    }\n    , new org.apache.calcite.linq4j.function.Function1() {\n      public long apply(Record1_0 acc) {\n        return acc.f0;\n      }\n      public Object apply(Object acc) {\n        return apply(\n          (Record1_0) acc);\n      }\n    }\n    ));\n}\n\n\npublic Class getElementType() {\n  return long.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModelCustomTableArrayRowSingleColumn",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from math.integers]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.jdbc.CalciteRemoteDriverTest",
        "testMethod": "testRemotePrepareExecute",
        "failureName": "org.apache.calcite.avatica.AvaticaSqlException",
        "detail": "Error -1 (00000) : while preparing SQL: select * from \"hr\".\"emps\"",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MultiJdbcSchemaJoinTest",
        "testMethod": "testEnumerableWithJdbcJoinWithWhereClause",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select t.id, t.field1 from \"hr\".\"emps\" e join db.table1 t on e.\"empid\" \u003d t.id where e.\"name\" \u003d \u0027Bill\u0027\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            while (inputEnumerator.moveNext()) {\n              final String inp2_ \u003d ((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).name;\n              if (inp2_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp2_, \"Bill\")) {\n                return true;\n              }\n            }\n            return false;\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n            return new Object[] {\n                current.name,\n                current.empid};\n          }\n\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"DB\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"TABLE1\\\"\", new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object[] values \u003d new Object[2];\n              values[0] \u003d resultSet.getInt(1);\n              if (resultSet.wasNull()) {\n                values[0] \u003d null;\n              }\n              values[1] \u003d resultSet.getObject(2);\n              return values;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ), new org.apache.calcite.linq4j.function.Function1() {\n    public int apply(Object[] v1) {\n      return org.apache.calcite.runtime.SqlFunctions.toInt(v1[1]);\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Object[]) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function1() {\n    public int apply(Object[] v1) {\n      return org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]);\n    }\n    public Object apply(Object v1) {\n      return apply(\n        (Object[]) v1);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function2() {\n    public Object[] apply(Object[] left, Object[] right) {\n      return new Object[] {\n          left[0],\n          left[1],\n          right[0],\n          right[1]};\n    }\n    public Object[] apply(Object left, Object right) {\n      return apply(\n        (Object[]) left,\n        (Object[]) right);\n    }\n  }\n  , null, false, false);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              return new Object[] {\n                  current[2],\n                  current[3]};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.profile.ProfilerTest",
        "testMethod": "testProfileOneRow",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while preparing statement [select * from \"scott\".dept where deptno \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs6",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\", sum(\"empid\") + 1 as s\nfrom \"emps\" where \"deptno\" \u003e 10 group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testHook",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\", \"commission\", sum(\"salary\") s\nfrom \"hr\".\"emps\"\ngroup by \"deptno\", \"commission\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggRank",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select  \"deptno\",\n \"empid\",\n \"commission\",\n rank() over (partition by \"deptno\" order by \"commission\" desc nulls first) as rcnf,\n rank() over (partition by \"deptno\" order by \"commission\" desc nulls last) as rcnl,\n rank() over (partition by \"deptno\" order by \"empid\") as r,\n rank() over (partition by \"deptno\" order by \"empid\" desc) as rd\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testNotNullImplementor",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select upper(\"adhoc\".my_str(\"name\")) as p from \"adhoc\".EMPLOYEES]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModelView",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"adhoc\".V order by \"name\" desc]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testDifferentTypesSameFields",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"SELECT \"myvalue\" from TEST.\"mytable2\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.MySchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"TEST\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).mytable2);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              return ((org.apache.calcite.test.JdbcTest.MyTable2) inputEnumerator.current()).myvalue;\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Integer.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testColumnNullability",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"employee_id\", \"position_id\"\nfrom \"foodmart\".\"employee\" limit 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testOverNonSupportedDialect",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store_id\", \"account_id\", \"exp_date\",\n \"time_id\", \"category_id\", \"currency_id\", \"amount\",\n last_value(\"time_id\") over () as \"last_version\"\nfrom \"expense_fact\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testExtractYearFromTimestamp",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select extract(year from \"birth_date\") as c \nfrom \"foodmart\".\"employee\" where \"employee_id\"\u003d1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testGroupByEmpty",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from \"foodmart\".\"sales_fact_1997\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testOp",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"primitiveByte\"\n + \"primitiveByte\" as c\nfrom \"s\".\"everyTypes\"\nwhere \"primitiveByte\" \u003c\u003e 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByExpr",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"name\", \"empid\" from \"hr\".\"emps\"\norder by - \"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testUdfDerivedReturnType",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select max(\"adhoc\".my_double(\"deptno\")) as p from \"adhoc\".EMPLOYEES]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testNoPublicFields",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select 1 from \"s\".\"allPrivates\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggFirstValueDesc",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select  \"deptno\",\n \"empid\",\n \"commission\",\n first_value(\"commission\") over (partition by \"deptno\" order by \"empid\" desc) as r\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testLexCaseInsensitive",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select COUNT(*) as c from metaData.tAbles]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testAggregateEmpty",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select\n count(*) as cs,\n count(\"deptno\") as c,\n sum(\"deptno\") as s,\n avg(\"deptno\") as a\nfrom \"hr\".\"emps\"\nwhere \"deptno\" \u003c 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.enumerable.EnumerableCorrelateTest",
        "testMethod": "simpleCorrelate",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select empid, name from emps e where exists (select 1 from depts d where d.deptno\u003de.deptno)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testAggregateFilter",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"the_month\",\n count(*) as \"c\",\n count(*) filter (where \"day_of_month\" \u003e 20) as \"c2\"\nfrom \"time_by_day\" as \"time_by_day\"\nwhere \"time_by_day\".\"the_year\" \u003d 1997\ngroup by \"time_by_day\".\"the_month\"\norder by \"time_by_day\".\"the_month\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testAggMultipleMeasures",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select s.\"prodId\", sum(s.\"sale0\"), sum(s.\"sale1\"), sum(s.\"sale2\"), sum(s.\"sale3\"), sum(s.\"sale4\"), sum(s.\"sale5\"), sum(s.\"sale6\"), sum(s.\"sale7\"), sum(s.\"sale8\"), sum(s.\"sale9\"), sum(s.\"sale10\"), sum(s.\"sale11\"), sum(s.\"sale12\"), sum(s.\"sale13\"), sum(s.\"sale14\"), sum(s.\"sale15\"), sum(s.\"sale16\"), sum(s.\"sale17\"), sum(s.\"sale18\"), sum(s.\"sale19\"), sum(s.\"sale20\"), sum(s.\"sale21\"), sum(s.\"sale22\"), sum(s.\"sale23\"), sum(s.\"sale24\"), sum(s.\"sale25\"), sum(s.\"sale26\"), sum(s.\"sale27\"), sum(s.\"sale28\"), sum(s.\"sale29\"), sum(s.\"sale30\"), sum(s.\"sale31\"), sum(s.\"sale32\"), sum(s.\"sale33\"), sum(s.\"sale34\"), sum(s.\"sale35\"), sum(s.\"sale36\"), sum(s.\"sale37\"), sum(s.\"sale38\"), sum(s.\"sale39\"), sum(s.\"sale40\"), sum(s.\"sale41\"), sum(s.\"sale42\"), sum(s.\"sale43\"), sum(s.\"sale44\"), sum(s.\"sale45\"), sum(s.\"sale46\"), sum(s.\"sale47\"), sum(s.\"sale48\"), sum(s.\"sale49\"), sum(s.\"sale50\"), sum(s.\"sale51\"), sum(s.\"sale52\"), sum(s.\"sale53\"), sum(s.\"sale54\"), sum(s.\"sale55\"), sum(s.\"sale56\"), sum(s.\"sale57\"), sum(s.\"sale58\"), sum(s.\"sale59\"), sum(s.\"sale60\"), sum(s.\"sale61\"), sum(s.\"sale62\"), sum(s.\"sale63\"), sum(s.\"sale64\"), sum(s.\"sale65\"), sum(s.\"sale66\"), sum(s.\"sale67\"), sum(s.\"sale68\"), sum(s.\"sale69\"), sum(s.\"sale70\"), sum(s.\"sale71\"), sum(s.\"sale72\"), sum(s.\"sale73\"), sum(s.\"sale74\"), sum(s.\"sale75\"), sum(s.\"sale76\"), sum(s.\"sale77\"), sum(s.\"sale78\"), sum(s.\"sale79\"), sum(s.\"sale80\"), sum(s.\"sale81\"), sum(s.\"sale82\"), sum(s.\"sale83\"), sum(s.\"sale84\"), sum(s.\"sale85\"), sum(s.\"sale86\"), sum(s.\"sale87\"), sum(s.\"sale88\"), sum(s.\"sale89\"), sum(s.\"sale90\"), sum(s.\"sale91\"), sum(s.\"sale92\"), sum(s.\"sale93\"), sum(s.\"sale94\"), sum(s.\"sale95\"), sum(s.\"sale96\"), sum(s.\"sale97\"), sum(s.\"sale98\"), sum(s.\"sale99\"), sum(s.\"sale100\"), sum(s.\"sale101\"), sum(s.\"sale102\"), sum(s.\"sale103\"), sum(s.\"sale104\"), sum(s.\"sale105\"), sum(s.\"sale106\"), sum(s.\"sale107\"), sum(s.\"sale108\"), sum(s.\"sale109\"), sum(s.\"sale110\"), sum(s.\"sale111\"), sum(s.\"sale112\"), sum(s.\"sale113\"), sum(s.\"sale114\"), sum(s.\"sale115\"), sum(s.\"sale116\"), sum(s.\"sale117\"), sum(s.\"sale118\"), sum(s.\"sale119\"), sum(s.\"sale120\"), sum(s.\"sale121\"), sum(s.\"sale122\"), sum(s.\"sale123\"), sum(s.\"sale124\"), sum(s.\"sale125\"), sum(s.\"sale126\"), sum(s.\"sale127\"), sum(s.\"sale128\"), sum(s.\"sale129\"), sum(s.\"sale130\"), sum(s.\"sale131\"), sum(s.\"sale132\"), sum(s.\"sale133\"), sum(s.\"sale134\"), sum(s.\"sale135\"), sum(s.\"sale136\"), sum(s.\"sale137\"), sum(s.\"sale138\"), sum(s.\"sale139\"), sum(s.\"sale140\"), sum(s.\"sale141\"), sum(s.\"sale142\"), sum(s.\"sale143\"), sum(s.\"sale144\"), sum(s.\"sale145\"), sum(s.\"sale146\"), sum(s.\"sale147\"), sum(s.\"sale148\"), sum(s.\"sale149\"), sum(s.\"sale150\"), sum(s.\"sale151\"), sum(s.\"sale152\"), sum(s.\"sale153\"), sum(s.\"sale154\"), sum(s.\"sale155\"), sum(s.\"sale156\"), sum(s.\"sale157\"), sum(s.\"sale158\"), sum(s.\"sale159\"), sum(s.\"sale160\"), sum(s.\"sale161\"), sum(s.\"sale162\"), sum(s.\"sale163\"), sum(s.\"sale164\"), sum(s.\"sale165\"), sum(s.\"sale166\"), sum(s.\"sale167\"), sum(s.\"sale168\"), sum(s.\"sale169\"), sum(s.\"sale170\"), sum(s.\"sale171\"), sum(s.\"sale172\"), sum(s.\"sale173\"), sum(s.\"sale174\"), sum(s.\"sale175\"), sum(s.\"sale176\"), sum(s.\"sale177\"), sum(s.\"sale178\"), sum(s.\"sale179\"), sum(s.\"sale180\"), sum(s.\"sale181\"), sum(s.\"sale182\"), sum(s.\"sale183\"), sum(s.\"sale184\"), sum(s.\"sale185\"), sum(s.\"sale186\"), sum(s.\"sale187\"), sum(s.\"sale188\"), sum(s.\"sale189\"), sum(s.\"sale190\"), sum(s.\"sale191\"), sum(s.\"sale192\"), sum(s.\"sale193\"), sum(s.\"sale194\"), sum(s.\"sale195\"), sum(s.\"sale196\"), sum(s.\"sale197\"), sum(s.\"sale198\"), sum(s.\"sale199\")\nfrom \"sale\".\"prod\" as s group by s.\"prodId\"\n\": Error while compiling generated Java code:\npublic static class Record200_0 implements java.io.Serializable {\n  public double f0;\n  public double f1;\n  public double f2;\n  public double f3;\n  public double f4;\n  public double f5;\n  public double f6;\n  public double f7;\n  public double f8;\n  public double f9;\n  public double f10;\n  public double f11;\n  public double f12;\n  public double f13;\n  public double f14;\n  public double f15;\n  public double f16;\n  public double f17;\n  public double f18;\n  public double f19;\n  public double f20;\n  public double f21;\n  public double f22;\n  public double f23;\n  public double f24;\n  public double f25;\n  public double f26;\n  public double f27;\n  public double f28;\n  public double f29;\n  public double f30;\n  public double f31;\n  public double f32;\n  public double f33;\n  public double f34;\n  public double f35;\n  public double f36;\n  public double f37;\n  public double f38;\n  public double f39;\n  public double f40;\n  public double f41;\n  public double f42;\n  public double f43;\n  public double f44;\n  public double f45;\n  public double f46;\n  public double f47;\n  public double f48;\n  public double f49;\n  public double f50;\n  public double f51;\n  public double f52;\n  public double f53;\n  public double f54;\n  public double f55;\n  public double f56;\n  public double f57;\n  public double f58;\n  public double f59;\n  public double f60;\n  public double f61;\n  public double f62;\n  public double f63;\n  public double f64;\n  public double f65;\n  public double f66;\n  public double f67;\n  public double f68;\n  public double f69;\n  public double f70;\n  public double f71;\n  public double f72;\n  public double f73;\n  public double f74;\n  public double f75;\n  public double f76;\n  public double f77;\n  public double f78;\n  public double f79;\n  public double f80;\n  public double f81;\n  public double f82;\n  public double f83;\n  public double f84;\n  public double f85;\n  public double f86;\n  public double f87;\n  public double f88;\n  public double f89;\n  public double f90;\n  public double f91;\n  public double f92;\n  public double f93;\n  public double f94;\n  public double f95;\n  public double f96;\n  public double f97;\n  public double f98;\n  public double f99;\n  public double f100;\n  public double f101;\n  public double f102;\n  public double f103;\n  public double f104;\n  public double f105;\n  public double f106;\n  public double f107;\n  public double f108;\n  public double f109;\n  public double f110;\n  public double f111;\n  public double f112;\n  public double f113;\n  public double f114;\n  public double f115;\n  public double f116;\n  public double f117;\n  public double f118;\n  public double f119;\n  public double f120;\n  public double f121;\n  public double f122;\n  public double f123;\n  public double f124;\n  public double f125;\n  public double f126;\n  public double f127;\n  public double f128;\n  public double f129;\n  public double f130;\n  public double f131;\n  public double f132;\n  public double f133;\n  public double f134;\n  public double f135;\n  public double f136;\n  public double f137;\n  public double f138;\n  public double f139;\n  public double f140;\n  public double f141;\n  public double f142;\n  public double f143;\n  public double f144;\n  public double f145;\n  public double f146;\n  public double f147;\n  public double f148;\n  public double f149;\n  public double f150;\n  public double f151;\n  public double f152;\n  public double f153;\n  public double f154;\n  public double f155;\n  public double f156;\n  public double f157;\n  public double f158;\n  public double f159;\n  public double f160;\n  public double f161;\n  public double f162;\n  public double f163;\n  public double f164;\n  public double f165;\n  public double f166;\n  public double f167;\n  public double f168;\n  public double f169;\n  public double f170;\n  public double f171;\n  public double f172;\n  public double f173;\n  public double f174;\n  public double f175;\n  public double f176;\n  public double f177;\n  public double f178;\n  public double f179;\n  public double f180;\n  public double f181;\n  public double f182;\n  public double f183;\n  public double f184;\n  public double f185;\n  public double f186;\n  public double f187;\n  public double f188;\n  public double f189;\n  public double f190;\n  public double f191;\n  public double f192;\n  public double f193;\n  public double f194;\n  public double f195;\n  public double f196;\n  public double f197;\n  public double f198;\n  public double f199;\n  public Record200_0() {}\n  public boolean equals(Object o) {\n    if (this \u003d\u003d o) {\n      return true;\n    }\n    if (!(o instanceof Record200_0)) {\n      return false;\n    }\n    return this.f0 \u003d\u003d ((Record200_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record200_0) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record200_0) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record200_0) o).f3 \u0026\u0026 this.f4 \u003d\u003d ((Record200_0) o).f4 \u0026\u0026 this.f5 \u003d\u003d ((Record200_0) o).f5 \u0026\u0026 this.f6 \u003d\u003d ((Record200_0) o).f6 \u0026\u0026 this.f7 \u003d\u003d ((Record200_0) o).f7 \u0026\u0026 this.f8 \u003d\u003d ((Record200_0) o).f8 \u0026\u0026 this.f9 \u003d\u003d ((Record200_0) o).f9 \u0026\u0026 this.f10 \u003d\u003d ((Record200_0) o).f10 \u0026\u0026 this.f11 \u003d\u003d ((Record200_0) o).f11 \u0026\u0026 this.f12 \u003d\u003d ((Record200_0) o).f12 \u0026\u0026 this.f13 \u003d\u003d ((Record200_0) o).f13 \u0026\u0026 this.f14 \u003d\u003d ((Record200_0) o).f14 \u0026\u0026 this.f15 \u003d\u003d ((Record200_0) o).f15 \u0026\u0026 this.f16 \u003d\u003d ((Record200_0) o).f16 \u0026\u0026 this.f17 \u003d\u003d ((Record200_0) o).f17 \u0026\u0026 this.f18 \u003d\u003d ((Record200_0) o).f18 \u0026\u0026 this.f19 \u003d\u003d ((Record200_0) o).f19 \u0026\u0026 this.f20 \u003d\u003d ((Record200_0) o).f20 \u0026\u0026 this.f21 \u003d\u003d ((Record200_0) o).f21 \u0026\u0026 this.f22 \u003d\u003d ((Record200_0) o).f22 \u0026\u0026 this.f23 \u003d\u003d ((Record200_0) o).f23 \u0026\u0026 this.f24 \u003d\u003d ((Record200_0) o).f24 \u0026\u0026 this.f25 \u003d\u003d ((Record200_0) o).f25 \u0026\u0026 this.f26 \u003d\u003d ((Record200_0) o).f26 \u0026\u0026 this.f27 \u003d\u003d ((Record200_0) o).f27 \u0026\u0026 this.f28 \u003d\u003d ((Record200_0) o).f28 \u0026\u0026 this.f29 \u003d\u003d ((Record200_0) o).f29 \u0026\u0026 this.f30 \u003d\u003d ((Record200_0) o).f30 \u0026\u0026 this.f31 \u003d\u003d ((Record200_0) o).f31 \u0026\u0026 this.f32 \u003d\u003d ((Record200_0) o).f32 \u0026\u0026 this.f33 \u003d\u003d ((Record200_0) o).f33 \u0026\u0026 this.f34 \u003d\u003d ((Record200_0) o).f34 \u0026\u0026 this.f35 \u003d\u003d ((Record200_0) o).f35 \u0026\u0026 this.f36 \u003d\u003d ((Record200_0) o).f36 \u0026\u0026 this.f37 \u003d\u003d ((Record200_0) o).f37 \u0026\u0026 this.f38 \u003d\u003d ((Record200_0) o).f38 \u0026\u0026 this.f39 \u003d\u003d ((Record200_0) o).f39 \u0026\u0026 this.f40 \u003d\u003d ((Record200_0) o).f40 \u0026\u0026 this.f41 \u003d\u003d ((Record200_0) o).f41 \u0026\u0026 this.f42 \u003d\u003d ((Record200_0) o).f42 \u0026\u0026 this.f43 \u003d\u003d ((Record200_0) o).f43 \u0026\u0026 this.f44 \u003d\u003d ((Record200_0) o).f44 \u0026\u0026 this.f45 \u003d\u003d ((Record200_0) o).f45 \u0026\u0026 this.f46 \u003d\u003d ((Record200_0) o).f46 \u0026\u0026 this.f47 \u003d\u003d ((Record200_0) o).f47 \u0026\u0026 this.f48 \u003d\u003d ((Record200_0) o).f48 \u0026\u0026 this.f49 \u003d\u003d ((Record200_0) o).f49 \u0026\u0026 this.f50 \u003d\u003d ((Record200_0) o).f50 \u0026\u0026 this.f51 \u003d\u003d ((Record200_0) o).f51 \u0026\u0026 this.f52 \u003d\u003d ((Record200_0) o).f52 \u0026\u0026 this.f53 \u003d\u003d ((Record200_0) o).f53 \u0026\u0026 this.f54 \u003d\u003d ((Record200_0) o).f54 \u0026\u0026 this.f55 \u003d\u003d ((Record200_0) o).f55 \u0026\u0026 this.f56 \u003d\u003d ((Record200_0) o).f56 \u0026\u0026 this.f57 \u003d\u003d ((Record200_0) o).f57 \u0026\u0026 this.f58 \u003d\u003d ((Record200_0) o).f58 \u0026\u0026 this.f59 \u003d\u003d ((Record200_0) o).f59 \u0026\u0026 this.f60 \u003d\u003d ((Record200_0) o).f60 \u0026\u0026 this.f61 \u003d\u003d ((Record200_0) o).f61 \u0026\u0026 this.f62 \u003d\u003d ((Record200_0) o).f62 \u0026\u0026 this.f63 \u003d\u003d ((Record200_0) o).f63 \u0026\u0026 this.f64 \u003d\u003d ((Record200_0) o).f64 \u0026\u0026 this.f65 \u003d\u003d ((Record200_0) o).f65 \u0026\u0026 this.f66 \u003d\u003d ((Record200_0) o).f66 \u0026\u0026 this.f67 \u003d\u003d ((Record200_0) o).f67 \u0026\u0026 this.f68 \u003d\u003d ((Record200_0) o).f68 \u0026\u0026 this.f69 \u003d\u003d ((Record200_0) o).f69 \u0026\u0026 this.f70 \u003d\u003d ((Record200_0) o).f70 \u0026\u0026 this.f71 \u003d\u003d ((Record200_0) o).f71 \u0026\u0026 this.f72 \u003d\u003d ((Record200_0) o).f72 \u0026\u0026 this.f73 \u003d\u003d ((Record200_0) o).f73 \u0026\u0026 this.f74 \u003d\u003d ((Record200_0) o).f74 \u0026\u0026 this.f75 \u003d\u003d ((Record200_0) o).f75 \u0026\u0026 this.f76 \u003d\u003d ((Record200_0) o).f76 \u0026\u0026 this.f77 \u003d\u003d ((Record200_0) o).f77 \u0026\u0026 this.f78 \u003d\u003d ((Record200_0) o).f78 \u0026\u0026 this.f79 \u003d\u003d ((Record200_0) o).f79 \u0026\u0026 this.f80 \u003d\u003d ((Record200_0) o).f80 \u0026\u0026 this.f81 \u003d\u003d ((Record200_0) o).f81 \u0026\u0026 this.f82 \u003d\u003d ((Record200_0) o).f82 \u0026\u0026 this.f83 \u003d\u003d ((Record200_0) o).f83 \u0026\u0026 this.f84 \u003d\u003d ((Record200_0) o).f84 \u0026\u0026 this.f85 \u003d\u003d ((Record200_0) o).f85 \u0026\u0026 this.f86 \u003d\u003d ((Record200_0) o).f86 \u0026\u0026 this.f87 \u003d\u003d ((Record200_0) o).f87 \u0026\u0026 this.f88 \u003d\u003d ((Record200_0) o).f88 \u0026\u0026 this.f89 \u003d\u003d ((Record200_0) o).f89 \u0026\u0026 this.f90 \u003d\u003d ((Record200_0) o).f90 \u0026\u0026 this.f91 \u003d\u003d ((Record200_0) o).f91 \u0026\u0026 this.f92 \u003d\u003d ((Record200_0) o).f92 \u0026\u0026 this.f93 \u003d\u003d ((Record200_0) o).f93 \u0026\u0026 this.f94 \u003d\u003d ((Record200_0) o).f94 \u0026\u0026 this.f95 \u003d\u003d ((Record200_0) o).f95 \u0026\u0026 this.f96 \u003d\u003d ((Record200_0) o).f96 \u0026\u0026 this.f97 \u003d\u003d ((Record200_0) o).f97 \u0026\u0026 this.f98 \u003d\u003d ((Record200_0) o).f98 \u0026\u0026 this.f99 \u003d\u003d ((Record200_0) o).f99 \u0026\u0026 this.f100 \u003d\u003d ((Record200_0) o).f100 \u0026\u0026 this.f101 \u003d\u003d ((Record200_0) o).f101 \u0026\u0026 this.f102 \u003d\u003d ((Record200_0) o).f102 \u0026\u0026 this.f103 \u003d\u003d ((Record200_0) o).f103 \u0026\u0026 this.f104 \u003d\u003d ((Record200_0) o).f104 \u0026\u0026 this.f105 \u003d\u003d ((Record200_0) o).f105 \u0026\u0026 this.f106 \u003d\u003d ((Record200_0) o).f106 \u0026\u0026 this.f107 \u003d\u003d ((Record200_0) o).f107 \u0026\u0026 this.f108 \u003d\u003d ((Record200_0) o).f108 \u0026\u0026 this.f109 \u003d\u003d ((Record200_0) o).f109 \u0026\u0026 this.f110 \u003d\u003d ((Record200_0) o).f110 \u0026\u0026 this.f111 \u003d\u003d ((Record200_0) o).f111 \u0026\u0026 this.f112 \u003d\u003d ((Record200_0) o).f112 \u0026\u0026 this.f113 \u003d\u003d ((Record200_0) o).f113 \u0026\u0026 this.f114 \u003d\u003d ((Record200_0) o).f114 \u0026\u0026 this.f115 \u003d\u003d ((Record200_0) o).f115 \u0026\u0026 this.f116 \u003d\u003d ((Record200_0) o).f116 \u0026\u0026 this.f117 \u003d\u003d ((Record200_0) o).f117 \u0026\u0026 this.f118 \u003d\u003d ((Record200_0) o).f118 \u0026\u0026 this.f119 \u003d\u003d ((Record200_0) o).f119 \u0026\u0026 this.f120 \u003d\u003d ((Record200_0) o).f120 \u0026\u0026 this.f121 \u003d\u003d ((Record200_0) o).f121 \u0026\u0026 this.f122 \u003d\u003d ((Record200_0) o).f122 \u0026\u0026 this.f123 \u003d\u003d ((Record200_0) o).f123 \u0026\u0026 this.f124 \u003d\u003d ((Record200_0) o).f124 \u0026\u0026 this.f125 \u003d\u003d ((Record200_0) o).f125 \u0026\u0026 this.f126 \u003d\u003d ((Record200_0) o).f126 \u0026\u0026 this.f127 \u003d\u003d ((Record200_0) o).f127 \u0026\u0026 this.f128 \u003d\u003d ((Record200_0) o).f128 \u0026\u0026 this.f129 \u003d\u003d ((Record200_0) o).f129 \u0026\u0026 this.f130 \u003d\u003d ((Record200_0) o).f130 \u0026\u0026 this.f131 \u003d\u003d ((Record200_0) o).f131 \u0026\u0026 this.f132 \u003d\u003d ((Record200_0) o).f132 \u0026\u0026 this.f133 \u003d\u003d ((Record200_0) o).f133 \u0026\u0026 this.f134 \u003d\u003d ((Record200_0) o).f134 \u0026\u0026 this.f135 \u003d\u003d ((Record200_0) o).f135 \u0026\u0026 this.f136 \u003d\u003d ((Record200_0) o).f136 \u0026\u0026 this.f137 \u003d\u003d ((Record200_0) o).f137 \u0026\u0026 this.f138 \u003d\u003d ((Record200_0) o).f138 \u0026\u0026 this.f139 \u003d\u003d ((Record200_0) o).f139 \u0026\u0026 this.f140 \u003d\u003d ((Record200_0) o).f140 \u0026\u0026 this.f141 \u003d\u003d ((Record200_0) o).f141 \u0026\u0026 this.f142 \u003d\u003d ((Record200_0) o).f142 \u0026\u0026 this.f143 \u003d\u003d ((Record200_0) o).f143 \u0026\u0026 this.f144 \u003d\u003d ((Record200_0) o).f144 \u0026\u0026 this.f145 \u003d\u003d ((Record200_0) o).f145 \u0026\u0026 this.f146 \u003d\u003d ((Record200_0) o).f146 \u0026\u0026 this.f147 \u003d\u003d ((Record200_0) o).f147 \u0026\u0026 this.f148 \u003d\u003d ((Record200_0) o).f148 \u0026\u0026 this.f149 \u003d\u003d ((Record200_0) o).f149 \u0026\u0026 this.f150 \u003d\u003d ((Record200_0) o).f150 \u0026\u0026 this.f151 \u003d\u003d ((Record200_0) o).f151 \u0026\u0026 this.f152 \u003d\u003d ((Record200_0) o).f152 \u0026\u0026 this.f153 \u003d\u003d ((Record200_0) o).f153 \u0026\u0026 this.f154 \u003d\u003d ((Record200_0) o).f154 \u0026\u0026 this.f155 \u003d\u003d ((Record200_0) o).f155 \u0026\u0026 this.f156 \u003d\u003d ((Record200_0) o).f156 \u0026\u0026 this.f157 \u003d\u003d ((Record200_0) o).f157 \u0026\u0026 this.f158 \u003d\u003d ((Record200_0) o).f158 \u0026\u0026 this.f159 \u003d\u003d ((Record200_0) o).f159 \u0026\u0026 this.f160 \u003d\u003d ((Record200_0) o).f160 \u0026\u0026 this.f161 \u003d\u003d ((Record200_0) o).f161 \u0026\u0026 this.f162 \u003d\u003d ((Record200_0) o).f162 \u0026\u0026 this.f163 \u003d\u003d ((Record200_0) o).f163 \u0026\u0026 this.f164 \u003d\u003d ((Record200_0) o).f164 \u0026\u0026 this.f165 \u003d\u003d ((Record200_0) o).f165 \u0026\u0026 this.f166 \u003d\u003d ((Record200_0) o).f166 \u0026\u0026 this.f167 \u003d\u003d ((Record200_0) o).f167 \u0026\u0026 this.f168 \u003d\u003d ((Record200_0) o).f168 \u0026\u0026 this.f169 \u003d\u003d ((Record200_0) o).f169 \u0026\u0026 this.f170 \u003d\u003d ((Record200_0) o).f170 \u0026\u0026 this.f171 \u003d\u003d ((Record200_0) o).f171 \u0026\u0026 this.f172 \u003d\u003d ((Record200_0) o).f172 \u0026\u0026 this.f173 \u003d\u003d ((Record200_0) o).f173 \u0026\u0026 this.f174 \u003d\u003d ((Record200_0) o).f174 \u0026\u0026 this.f175 \u003d\u003d ((Record200_0) o).f175 \u0026\u0026 this.f176 \u003d\u003d ((Record200_0) o).f176 \u0026\u0026 this.f177 \u003d\u003d ((Record200_0) o).f177 \u0026\u0026 this.f178 \u003d\u003d ((Record200_0) o).f178 \u0026\u0026 this.f179 \u003d\u003d ((Record200_0) o).f179 \u0026\u0026 this.f180 \u003d\u003d ((Record200_0) o).f180 \u0026\u0026 this.f181 \u003d\u003d ((Record200_0) o).f181 \u0026\u0026 this.f182 \u003d\u003d ((Record200_0) o).f182 \u0026\u0026 this.f183 \u003d\u003d ((Record200_0) o).f183 \u0026\u0026 this.f184 \u003d\u003d ((Record200_0) o).f184 \u0026\u0026 this.f185 \u003d\u003d ((Record200_0) o).f185 \u0026\u0026 this.f186 \u003d\u003d ((Record200_0) o).f186 \u0026\u0026 this.f187 \u003d\u003d ((Record200_0) o).f187 \u0026\u0026 this.f188 \u003d\u003d ((Record200_0) o).f188 \u0026\u0026 this.f189 \u003d\u003d ((Record200_0) o).f189 \u0026\u0026 this.f190 \u003d\u003d ((Record200_0) o).f190 \u0026\u0026 this.f191 \u003d\u003d ((Record200_0) o).f191 \u0026\u0026 this.f192 \u003d\u003d ((Record200_0) o).f192 \u0026\u0026 this.f193 \u003d\u003d ((Record200_0) o).f193 \u0026\u0026 this.f194 \u003d\u003d ((Record200_0) o).f194 \u0026\u0026 this.f195 \u003d\u003d ((Record200_0) o).f195 \u0026\u0026 this.f196 \u003d\u003d ((Record200_0) o).f196 \u0026\u0026 this.f197 \u003d\u003d ((Record200_0) o).f197 \u0026\u0026 this.f198 \u003d\u003d ((Record200_0) o).f198 \u0026\u0026 this.f199 \u003d\u003d ((Record200_0) o).f199;\n  }\n\n  public int hashCode() {\n    int h \u003d 0;\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f6);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f7);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f8);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f9);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f10);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f11);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f12);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f13);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f14);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f15);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f16);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f17);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f18);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f19);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f20);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f21);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f22);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f23);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f24);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f25);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f26);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f27);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f28);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f29);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f30);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f31);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f32);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f33);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f34);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f35);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f36);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f37);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f38);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f39);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f40);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f41);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f42);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f43);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f44);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f45);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f46);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f47);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f48);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f49);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f50);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f51);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f52);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f53);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f54);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f55);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f56);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f57);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f58);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f59);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f60);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f61);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f62);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f63);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f64);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f65);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f66);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f67);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f68);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f69);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f70);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f71);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f72);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f73);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f74);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f75);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f76);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f77);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f78);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f79);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f80);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f81);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f82);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f83);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f84);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f85);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f86);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f87);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f88);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f89);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f90);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f91);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f92);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f93);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f94);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f95);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f96);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f97);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f98);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f99);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f100);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f101);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f102);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f103);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f104);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f105);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f106);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f107);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f108);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f109);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f110);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f111);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f112);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f113);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f114);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f115);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f116);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f117);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f118);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f119);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f120);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f121);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f122);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f123);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f124);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f125);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f126);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f127);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f128);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f129);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f130);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f131);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f132);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f133);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f134);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f135);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f136);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f137);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f138);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f139);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f140);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f141);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f142);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f143);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f144);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f145);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f146);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f147);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f148);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f149);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f150);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f151);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f152);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f153);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f154);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f155);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f156);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f157);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f158);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f159);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f160);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f161);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f162);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f163);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f164);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f165);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f166);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f167);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f168);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f169);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f170);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f171);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f172);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f173);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f174);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f175);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f176);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f177);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f178);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f179);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f180);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f181);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f182);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f183);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f184);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f185);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f186);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f187);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f188);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f189);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f190);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f191);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f192);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f193);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f194);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f195);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f196);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f197);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f198);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f199);\n    return h;\n  }\n\n  public int compareTo(Record200_0 that) {\n    int c;\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f5, that.f5);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f6, that.f6);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f7, that.f7);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f8, that.f8);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f9, that.f9);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f10, that.f10);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f11, that.f11);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f12, that.f12);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f13, that.f13);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f14, that.f14);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f15, that.f15);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f16, that.f16);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f17, that.f17);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f18, that.f18);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f19, that.f19);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f20, that.f20);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f21, that.f21);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f22, that.f22);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f23, that.f23);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f24, that.f24);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f25, that.f25);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f26, that.f26);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f27, that.f27);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f28, that.f28);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f29, that.f29);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f30, that.f30);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f31, that.f31);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f32, that.f32);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f33, that.f33);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f34, that.f34);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f35, that.f35);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f36, that.f36);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f37, that.f37);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f38, that.f38);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f39, that.f39);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f40, that.f40);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f41, that.f41);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f42, that.f42);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f43, that.f43);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f44, that.f44);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f45, that.f45);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f46, that.f46);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f47, that.f47);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f48, that.f48);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f49, that.f49);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f50, that.f50);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f51, that.f51);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f52, that.f52);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f53, that.f53);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f54, that.f54);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f55, that.f55);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f56, that.f56);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f57, that.f57);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f58, that.f58);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f59, that.f59);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f60, that.f60);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f61, that.f61);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f62, that.f62);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f63, that.f63);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f64, that.f64);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f65, that.f65);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f66, that.f66);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f67, that.f67);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f68, that.f68);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f69, that.f69);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f70, that.f70);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f71, that.f71);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f72, that.f72);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f73, that.f73);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f74, that.f74);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f75, that.f75);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f76, that.f76);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f77, that.f77);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f78, that.f78);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f79, that.f79);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f80, that.f80);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f81, that.f81);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f82, that.f82);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f83, that.f83);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f84, that.f84);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f85, that.f85);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f86, that.f86);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f87, that.f87);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f88, that.f88);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f89, that.f89);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f90, that.f90);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f91, that.f91);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f92, that.f92);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f93, that.f93);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f94, that.f94);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f95, that.f95);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f96, that.f96);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f97, that.f97);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f98, that.f98);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f99, that.f99);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f100, that.f100);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f101, that.f101);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f102, that.f102);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f103, that.f103);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f104, that.f104);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f105, that.f105);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f106, that.f106);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f107, that.f107);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f108, that.f108);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f109, that.f109);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f110, that.f110);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f111, that.f111);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f112, that.f112);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f113, that.f113);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f114, that.f114);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f115, that.f115);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f116, that.f116);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f117, that.f117);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f118, that.f118);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f119, that.f119);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f120, that.f120);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f121, that.f121);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f122, that.f122);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f123, that.f123);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f124, that.f124);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f125, that.f125);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f126, that.f126);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f127, that.f127);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f128, that.f128);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f129, that.f129);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f130, that.f130);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f131, that.f131);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f132, that.f132);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f133, that.f133);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f134, that.f134);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f135, that.f135);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f136, that.f136);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f137, that.f137);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f138, that.f138);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f139, that.f139);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f140, that.f140);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f141, that.f141);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f142, that.f142);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f143, that.f143);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f144, that.f144);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f145, that.f145);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f146, that.f146);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f147, that.f147);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f148, that.f148);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f149, that.f149);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f150, that.f150);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f151, that.f151);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f152, that.f152);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f153, that.f153);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f154, that.f154);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f155, that.f155);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f156, that.f156);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f157, that.f157);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f158, that.f158);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f159, that.f159);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f160, that.f160);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f161, that.f161);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f162, that.f162);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f163, that.f163);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f164, that.f164);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f165, that.f165);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f166, that.f166);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f167, that.f167);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f168, that.f168);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f169, that.f169);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f170, that.f170);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f171, that.f171);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f172, that.f172);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f173, that.f173);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f174, that.f174);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f175, that.f175);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f176, that.f176);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f177, that.f177);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f178, that.f178);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f179, that.f179);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f180, that.f180);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f181, that.f181);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f182, that.f182);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f183, that.f183);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f184, that.f184);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f185, that.f185);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f186, that.f186);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f187, that.f187);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f188, that.f188);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f189, that.f189);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f190, that.f190);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f191, that.f191);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f192, that.f192);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f193, that.f193);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f194, that.f194);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f195, that.f195);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f196, that.f196);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f197, that.f197);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f198, that.f198);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f199, that.f199);\n    if (c !\u003d 0) {\n      return c;\n    }\n    return 0;\n  }\n\n  public String toString() {\n    return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \", f5\u003d\" + this.f5 + \", f6\u003d\" + this.f6 + \", f7\u003d\" + this.f7 + \", f8\u003d\" + this.f8 + \", f9\u003d\" + this.f9 + \", f10\u003d\" + this.f10 + \", f11\u003d\" + this.f11 + \", f12\u003d\" + this.f12 + \", f13\u003d\" + this.f13 + \", f14\u003d\" + this.f14 + \", f15\u003d\" + this.f15 + \", f16\u003d\" + this.f16 + \", f17\u003d\" + this.f17 + \", f18\u003d\" + this.f18 + \", f19\u003d\" + this.f19 + \", f20\u003d\" + this.f20 + \", f21\u003d\" + this.f21 + \", f22\u003d\" + this.f22 + \", f23\u003d\" + this.f23 + \", f24\u003d\" + this.f24 + \", f25\u003d\" + this.f25 + \", f26\u003d\" + this.f26 + \", f27\u003d\" + this.f27 + \", f28\u003d\" + this.f28 + \", f29\u003d\" + this.f29 + \", f30\u003d\" + this.f30 + \", f31\u003d\" + this.f31 + \", f32\u003d\" + this.f32 + \", f33\u003d\" + this.f33 + \", f34\u003d\" + this.f34 + \", f35\u003d\" + this.f35 + \", f36\u003d\" + this.f36 + \", f37\u003d\" + this.f37 + \", f38\u003d\" + this.f38 + \", f39\u003d\" + this.f39 + \", f40\u003d\" + this.f40 + \", f41\u003d\" + this.f41 + \", f42\u003d\" + this.f42 + \", f43\u003d\" + this.f43 + \", f44\u003d\" + this.f44 + \", f45\u003d\" + this.f45 + \", f46\u003d\" + this.f46 + \", f47\u003d\" + this.f47 + \", f48\u003d\" + this.f48 + \", f49\u003d\" + this.f49 + \", f50\u003d\" + this.f50 + \", f51\u003d\" + this.f51 + \", f52\u003d\" + this.f52 + \", f53\u003d\" + this.f53 + \", f54\u003d\" + this.f54 + \", f55\u003d\" + this.f55 + \", f56\u003d\" + this.f56 + \", f57\u003d\" + this.f57 + \", f58\u003d\" + this.f58 + \", f59\u003d\" + this.f59 + \", f60\u003d\" + this.f60 + \", f61\u003d\" + this.f61 + \", f62\u003d\" + this.f62 + \", f63\u003d\" + this.f63 + \", f64\u003d\" + this.f64 + \", f65\u003d\" + this.f65 + \", f66\u003d\" + this.f66 + \", f67\u003d\" + this.f67 + \", f68\u003d\" + this.f68 + \", f69\u003d\" + this.f69 + \", f70\u003d\" + this.f70 + \", f71\u003d\" + this.f71 + \", f72\u003d\" + this.f72 + \", f73\u003d\" + this.f73 + \", f74\u003d\" + this.f74 + \", f75\u003d\" + this.f75 + \", f76\u003d\" + this.f76 + \", f77\u003d\" + this.f77 + \", f78\u003d\" + this.f78 + \", f79\u003d\" + this.f79 + \", f80\u003d\" + this.f80 + \", f81\u003d\" + this.f81 + \", f82\u003d\" + this.f82 + \", f83\u003d\" + this.f83 + \", f84\u003d\" + this.f84 + \", f85\u003d\" + this.f85 + \", f86\u003d\" + this.f86 + \", f87\u003d\" + this.f87 + \", f88\u003d\" + this.f88 + \", f89\u003d\" + this.f89 + \", f90\u003d\" + this.f90 + \", f91\u003d\" + this.f91 + \", f92\u003d\" + this.f92 + \", f93\u003d\" + this.f93 + \", f94\u003d\" + this.f94 + \", f95\u003d\" + this.f95 + \", f96\u003d\" + this.f96 + \", f97\u003d\" + this.f97 + \", f98\u003d\" + this.f98 + \", f99\u003d\" + this.f99 + \", f100\u003d\" + this.f100 + \", f101\u003d\" + this.f101 + \", f102\u003d\" + this.f102 + \", f103\u003d\" + this.f103 + \", f104\u003d\" + this.f104 + \", f105\u003d\" + this.f105 + \", f106\u003d\" + this.f106 + \", f107\u003d\" + this.f107 + \", f108\u003d\" + this.f108 + \", f109\u003d\" + this.f109 + \", f110\u003d\" + this.f110 + \", f111\u003d\" + this.f111 + \", f112\u003d\" + this.f112 + \", f113\u003d\" + this.f113 + \", f114\u003d\" + this.f114 + \", f115\u003d\" + this.f115 + \", f116\u003d\" + this.f116 + \", f117\u003d\" + this.f117 + \", f118\u003d\" + this.f118 + \", f119\u003d\" + this.f119 + \", f120\u003d\" + this.f120 + \", f121\u003d\" + this.f121 + \", f122\u003d\" + this.f122 + \", f123\u003d\" + this.f123 + \", f124\u003d\" + this.f124 + \", f125\u003d\" + this.f125 + \", f126\u003d\" + this.f126 + \", f127\u003d\" + this.f127 + \", f128\u003d\" + this.f128 + \", f129\u003d\" + this.f129 + \", f130\u003d\" + this.f130 + \", f131\u003d\" + this.f131 + \", f132\u003d\" + this.f132 + \", f133\u003d\" + this.f133 + \", f134\u003d\" + this.f134 + \", f135\u003d\" + this.f135 + \", f136\u003d\" + this.f136 + \", f137\u003d\" + this.f137 + \", f138\u003d\" + this.f138 + \", f139\u003d\" + this.f139 + \", f140\u003d\" + this.f140 + \", f141\u003d\" + this.f141 + \", f142\u003d\" + this.f142 + \", f143\u003d\" + this.f143 + \", f144\u003d\" + this.f144 + \", f145\u003d\" + this.f145 + \", f146\u003d\" + this.f146 + \", f147\u003d\" + this.f147 + \", f148\u003d\" + this.f148 + \", f149\u003d\" + this.f149 + \", f150\u003d\" + this.f150 + \", f151\u003d\" + this.f151 + \", f152\u003d\" + this.f152 + \", f153\u003d\" + this.f153 + \", f154\u003d\" + this.f154 + \", f155\u003d\" + this.f155 + \", f156\u003d\" + this.f156 + \", f157\u003d\" + this.f157 + \", f158\u003d\" + this.f158 + \", f159\u003d\" + this.f159 + \", f160\u003d\" + this.f160 + \", f161\u003d\" + this.f161 + \", f162\u003d\" + this.f162 + \", f163\u003d\" + this.f163 + \", f164\u003d\" + this.f164 + \", f165\u003d\" + this.f165 + \", f166\u003d\" + this.f166 + \", f167\u003d\" + this.f167 + \", f168\u003d\" + this.f168 + \", f169\u003d\" + this.f169 + \", f170\u003d\" + this.f170 + \", f171\u003d\" + this.f171 + \", f172\u003d\" + this.f172 + \", f173\u003d\" + this.f173 + \", f174\u003d\" + this.f174 + \", f175\u003d\" + this.f175 + \", f176\u003d\" + this.f176 + \", f177\u003d\" + this.f177 + \", f178\u003d\" + this.f178 + \", f179\u003d\" + this.f179 + \", f180\u003d\" + this.f180 + \", f181\u003d\" + this.f181 + \", f182\u003d\" + this.f182 + \", f183\u003d\" + this.f183 + \", f184\u003d\" + this.f184 + \", f185\u003d\" + this.f185 + \", f186\u003d\" + this.f186 + \", f187\u003d\" + this.f187 + \", f188\u003d\" + this.f188 + \", f189\u003d\" + this.f189 + \", f190\u003d\" + this.f190 + \", f191\u003d\" + this.f191 + \", f192\u003d\" + this.f192 + \", f193\u003d\" + this.f193 + \", f194\u003d\" + this.f194 + \", f195\u003d\" + this.f195 + \", f196\u003d\" + this.f196 + \", f197\u003d\" + this.f197 + \", f198\u003d\" + this.f198 + \", f199\u003d\" + this.f199 + \"}\";\n  }\n\n}\n\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.util.Smalls.WideSaleSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"sale\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).prod).groupBy(new org.apache.calcite.linq4j.function.Function1() {\n      public int apply(org.apache.calcite.util.Smalls.WideProductSale a0) {\n        return a0.prodId;\n      }\n      public Object apply(Object a0) {\n        return apply(\n          (org.apache.calcite.util.Smalls.WideProductSale) a0);\n      }\n    }\n    , new org.apache.calcite.linq4j.function.Function0() {\n      public Object apply() {\n        double a0s0;\n        a0s0 \u003d 0;\n        double a1s0;\n        a1s0 \u003d 0;\n        double a2s0;\n        a2s0 \u003d 0;\n        double a3s0;\n        a3s0 \u003d 0;\n        double a4s0;\n        a4s0 \u003d 0;\n        double a5s0;\n        a5s0 \u003d 0;\n        double a6s0;\n        a6s0 \u003d 0;\n        double a7s0;\n        a7s0 \u003d 0;\n        double a8s0;\n        a8s0 \u003d 0;\n        double a9s0;\n        a9s0 \u003d 0;\n        double a10s0;\n        a10s0 \u003d 0;\n        double a11s0;\n        a11s0 \u003d 0;\n        double a12s0;\n        a12s0 \u003d 0;\n        double a13s0;\n        a13s0 \u003d 0;\n        double a14s0;\n        a14s0 \u003d 0;\n        double a15s0;\n        a15s0 \u003d 0;\n        double a16s0;\n        a16s0 \u003d 0;\n        double a17s0;\n        a17s0 \u003d 0;\n        double a18s0;\n        a18s0 \u003d 0;\n        double a19s0;\n        a19s0 \u003d 0;\n        double a20s0;\n        a20s0 \u003d 0;\n        double a21s0;\n        a21s0 \u003d 0;\n        double a22s0;\n        a22s0 \u003d 0;\n        double a23s0;\n        a23s0 \u003d 0;\n        double a24s0;\n        a24s0 \u003d 0;\n        double a25s0;\n        a25s0 \u003d 0;\n        double a26s0;\n        a26s0 \u003d 0;\n        double a27s0;\n        a27s0 \u003d 0;\n        double a28s0;\n        a28s0 \u003d 0;\n        double a29s0;\n        a29s0 \u003d 0;\n        double a30s0;\n        a30s0 \u003d 0;\n        double a31s0;\n        a31s0 \u003d 0;\n        double a32s0;\n        a32s0 \u003d 0;\n        double a33s0;\n        a33s0 \u003d 0;\n        double a34s0;\n        a34s0 \u003d 0;\n        double a35s0;\n        a35s0 \u003d 0;\n        double a36s0;\n        a36s0 \u003d 0;\n        double a37s0;\n        a37s0 \u003d 0;\n        double a38s0;\n        a38s0 \u003d 0;\n        double a39s0;\n        a39s0 \u003d 0;\n        double a40s0;\n        a40s0 \u003d 0;\n        double a41s0;\n        a41s0 \u003d 0;\n        double a42s0;\n        a42s0 \u003d 0;\n        double a43s0;\n        a43s0 \u003d 0;\n        double a44s0;\n        a44s0 \u003d 0;\n        double a45s0;\n        a45s0 \u003d 0;\n        double a46s0;\n        a46s0 \u003d 0;\n        double a47s0;\n        a47s0 \u003d 0;\n        double a48s0;\n        a48s0 \u003d 0;\n        double a49s0;\n        a49s0 \u003d 0;\n        double a50s0;\n        a50s0 \u003d 0;\n        double a51s0;\n        a51s0 \u003d 0;\n        double a52s0;\n        a52s0 \u003d 0;\n        double a53s0;\n        a53s0 \u003d 0;\n        double a54s0;\n        a54s0 \u003d 0;\n        double a55s0;\n        a55s0 \u003d 0;\n        double a56s0;\n        a56s0 \u003d 0;\n        double a57s0;\n        a57s0 \u003d 0;\n        double a58s0;\n        a58s0 \u003d 0;\n        double a59s0;\n        a59s0 \u003d 0;\n        double a60s0;\n        a60s0 \u003d 0;\n        double a61s0;\n        a61s0 \u003d 0;\n        double a62s0;\n        a62s0 \u003d 0;\n        double a63s0;\n        a63s0 \u003d 0;\n        double a64s0;\n        a64s0 \u003d 0;\n        double a65s0;\n        a65s0 \u003d 0;\n        double a66s0;\n        a66s0 \u003d 0;\n        double a67s0;\n        a67s0 \u003d 0;\n        double a68s0;\n        a68s0 \u003d 0;\n        double a69s0;\n        a69s0 \u003d 0;\n        double a70s0;\n        a70s0 \u003d 0;\n        double a71s0;\n        a71s0 \u003d 0;\n        double a72s0;\n        a72s0 \u003d 0;\n        double a73s0;\n        a73s0 \u003d 0;\n        double a74s0;\n        a74s0 \u003d 0;\n        double a75s0;\n        a75s0 \u003d 0;\n        double a76s0;\n        a76s0 \u003d 0;\n        double a77s0;\n        a77s0 \u003d 0;\n        double a78s0;\n        a78s0 \u003d 0;\n        double a79s0;\n        a79s0 \u003d 0;\n        double a80s0;\n        a80s0 \u003d 0;\n        double a81s0;\n        a81s0 \u003d 0;\n        double a82s0;\n        a82s0 \u003d 0;\n        double a83s0;\n        a83s0 \u003d 0;\n        double a84s0;\n        a84s0 \u003d 0;\n        double a85s0;\n        a85s0 \u003d 0;\n        double a86s0;\n        a86s0 \u003d 0;\n        double a87s0;\n        a87s0 \u003d 0;\n        double a88s0;\n        a88s0 \u003d 0;\n        double a89s0;\n        a89s0 \u003d 0;\n        double a90s0;\n        a90s0 \u003d 0;\n        double a91s0;\n        a91s0 \u003d 0;\n        double a92s0;\n        a92s0 \u003d 0;\n        double a93s0;\n        a93s0 \u003d 0;\n        double a94s0;\n        a94s0 \u003d 0;\n        double a95s0;\n        a95s0 \u003d 0;\n        double a96s0;\n        a96s0 \u003d 0;\n        double a97s0;\n        a97s0 \u003d 0;\n        double a98s0;\n        a98s0 \u003d 0;\n        double a99s0;\n        a99s0 \u003d 0;\n        double a100s0;\n        a100s0 \u003d 0;\n        double a101s0;\n        a101s0 \u003d 0;\n        double a102s0;\n        a102s0 \u003d 0;\n        double a103s0;\n        a103s0 \u003d 0;\n        double a104s0;\n        a104s0 \u003d 0;\n        double a105s0;\n        a105s0 \u003d 0;\n        double a106s0;\n        a106s0 \u003d 0;\n        double a107s0;\n        a107s0 \u003d 0;\n        double a108s0;\n        a108s0 \u003d 0;\n        double a109s0;\n        a109s0 \u003d 0;\n        double a110s0;\n        a110s0 \u003d 0;\n        double a111s0;\n        a111s0 \u003d 0;\n        double a112s0;\n        a112s0 \u003d 0;\n        double a113s0;\n        a113s0 \u003d 0;\n        double a114s0;\n        a114s0 \u003d 0;\n        double a115s0;\n        a115s0 \u003d 0;\n        double a116s0;\n        a116s0 \u003d 0;\n        double a117s0;\n        a117s0 \u003d 0;\n        double a118s0;\n        a118s0 \u003d 0;\n        double a119s0;\n        a119s0 \u003d 0;\n        double a120s0;\n        a120s0 \u003d 0;\n        double a121s0;\n        a121s0 \u003d 0;\n        double a122s0;\n        a122s0 \u003d 0;\n        double a123s0;\n        a123s0 \u003d 0;\n        double a124s0;\n        a124s0 \u003d 0;\n        double a125s0;\n        a125s0 \u003d 0;\n        double a126s0;\n        a126s0 \u003d 0;\n        double a127s0;\n        a127s0 \u003d 0;\n        double a128s0;\n        a128s0 \u003d 0;\n        double a129s0;\n        a129s0 \u003d 0;\n        double a130s0;\n        a130s0 \u003d 0;\n        double a131s0;\n        a131s0 \u003d 0;\n        double a132s0;\n        a132s0 \u003d 0;\n        double a133s0;\n        a133s0 \u003d 0;\n        double a134s0;\n        a134s0 \u003d 0;\n        double a135s0;\n        a135s0 \u003d 0;\n        double a136s0;\n        a136s0 \u003d 0;\n        double a137s0;\n        a137s0 \u003d 0;\n        double a138s0;\n        a138s0 \u003d 0;\n        double a139s0;\n        a139s0 \u003d 0;\n        double a140s0;\n        a140s0 \u003d 0;\n        double a141s0;\n        a141s0 \u003d 0;\n        double a142s0;\n        a142s0 \u003d 0;\n        double a143s0;\n        a143s0 \u003d 0;\n        double a144s0;\n        a144s0 \u003d 0;\n        double a145s0;\n        a145s0 \u003d 0;\n        double a146s0;\n        a146s0 \u003d 0;\n        double a147s0;\n        a147s0 \u003d 0;\n        double a148s0;\n        a148s0 \u003d 0;\n        double a149s0;\n        a149s0 \u003d 0;\n        double a150s0;\n        a150s0 \u003d 0;\n        double a151s0;\n        a151s0 \u003d 0;\n        double a152s0;\n        a152s0 \u003d 0;\n        double a153s0;\n        a153s0 \u003d 0;\n        double a154s0;\n        a154s0 \u003d 0;\n        double a155s0;\n        a155s0 \u003d 0;\n        double a156s0;\n        a156s0 \u003d 0;\n        double a157s0;\n        a157s0 \u003d 0;\n        double a158s0;\n        a158s0 \u003d 0;\n        double a159s0;\n        a159s0 \u003d 0;\n        double a160s0;\n        a160s0 \u003d 0;\n        double a161s0;\n        a161s0 \u003d 0;\n        double a162s0;\n        a162s0 \u003d 0;\n        double a163s0;\n        a163s0 \u003d 0;\n        double a164s0;\n        a164s0 \u003d 0;\n        double a165s0;\n        a165s0 \u003d 0;\n        double a166s0;\n        a166s0 \u003d 0;\n        double a167s0;\n        a167s0 \u003d 0;\n        double a168s0;\n        a168s0 \u003d 0;\n        double a169s0;\n        a169s0 \u003d 0;\n        double a170s0;\n        a170s0 \u003d 0;\n        double a171s0;\n        a171s0 \u003d 0;\n        double a172s0;\n        a172s0 \u003d 0;\n        double a173s0;\n        a173s0 \u003d 0;\n        double a174s0;\n        a174s0 \u003d 0;\n        double a175s0;\n        a175s0 \u003d 0;\n        double a176s0;\n        a176s0 \u003d 0;\n        double a177s0;\n        a177s0 \u003d 0;\n        double a178s0;\n        a178s0 \u003d 0;\n        double a179s0;\n        a179s0 \u003d 0;\n        double a180s0;\n        a180s0 \u003d 0;\n        double a181s0;\n        a181s0 \u003d 0;\n        double a182s0;\n        a182s0 \u003d 0;\n        double a183s0;\n        a183s0 \u003d 0;\n        double a184s0;\n        a184s0 \u003d 0;\n        double a185s0;\n        a185s0 \u003d 0;\n        double a186s0;\n        a186s0 \u003d 0;\n        double a187s0;\n        a187s0 \u003d 0;\n        double a188s0;\n        a188s0 \u003d 0;\n        double a189s0;\n        a189s0 \u003d 0;\n        double a190s0;\n        a190s0 \u003d 0;\n        double a191s0;\n        a191s0 \u003d 0;\n        double a192s0;\n        a192s0 \u003d 0;\n        double a193s0;\n        a193s0 \u003d 0;\n        double a194s0;\n        a194s0 \u003d 0;\n        double a195s0;\n        a195s0 \u003d 0;\n        double a196s0;\n        a196s0 \u003d 0;\n        double a197s0;\n        a197s0 \u003d 0;\n        double a198s0;\n        a198s0 \u003d 0;\n        double a199s0;\n        a199s0 \u003d 0;\n        Record200_0 record0;\n        record0 \u003d new Record200_0();\n        record0.f0 \u003d a0s0;\n        record0.f1 \u003d a1s0;\n        record0.f2 \u003d a2s0;\n        record0.f3 \u003d a3s0;\n        record0.f4 \u003d a4s0;\n        record0.f5 \u003d a5s0;\n        record0.f6 \u003d a6s0;\n        record0.f7 \u003d a7s0;\n        record0.f8 \u003d a8s0;\n        record0.f9 \u003d a9s0;\n        record0.f10 \u003d a10s0;\n        record0.f11 \u003d a11s0;\n        record0.f12 \u003d a12s0;\n        record0.f13 \u003d a13s0;\n        record0.f14 \u003d a14s0;\n        record0.f15 \u003d a15s0;\n        record0.f16 \u003d a16s0;\n        record0.f17 \u003d a17s0;\n        record0.f18 \u003d a18s0;\n        record0.f19 \u003d a19s0;\n        record0.f20 \u003d a20s0;\n        record0.f21 \u003d a21s0;\n        record0.f22 \u003d a22s0;\n        record0.f23 \u003d a23s0;\n        record0.f24 \u003d a24s0;\n        record0.f25 \u003d a25s0;\n        record0.f26 \u003d a26s0;\n        record0.f27 \u003d a27s0;\n        record0.f28 \u003d a28s0;\n        record0.f29 \u003d a29s0;\n        record0.f30 \u003d a30s0;\n        record0.f31 \u003d a31s0;\n        record0.f32 \u003d a32s0;\n        record0.f33 \u003d a33s0;\n        record0.f34 \u003d a34s0;\n        record0.f35 \u003d a35s0;\n        record0.f36 \u003d a36s0;\n        record0.f37 \u003d a37s0;\n        record0.f38 \u003d a38s0;\n        record0.f39 \u003d a39s0;\n        record0.f40 \u003d a40s0;\n        record0.f41 \u003d a41s0;\n        record0.f42 \u003d a42s0;\n        record0.f43 \u003d a43s0;\n        record0.f44 \u003d a44s0;\n        record0.f45 \u003d a45s0;\n        record0.f46 \u003d a46s0;\n        record0.f47 \u003d a47s0;\n        record0.f48 \u003d a48s0;\n        record0.f49 \u003d a49s0;\n        record0.f50 \u003d a50s0;\n        record0.f51 \u003d a51s0;\n        record0.f52 \u003d a52s0;\n        record0.f53 \u003d a53s0;\n        record0.f54 \u003d a54s0;\n        record0.f55 \u003d a55s0;\n        record0.f56 \u003d a56s0;\n        record0.f57 \u003d a57s0;\n        record0.f58 \u003d a58s0;\n        record0.f59 \u003d a59s0;\n        record0.f60 \u003d a60s0;\n        record0.f61 \u003d a61s0;\n        record0.f62 \u003d a62s0;\n        record0.f63 \u003d a63s0;\n        record0.f64 \u003d a64s0;\n        record0.f65 \u003d a65s0;\n        record0.f66 \u003d a66s0;\n        record0.f67 \u003d a67s0;\n        record0.f68 \u003d a68s0;\n        record0.f69 \u003d a69s0;\n        record0.f70 \u003d a70s0;\n        record0.f71 \u003d a71s0;\n        record0.f72 \u003d a72s0;\n        record0.f73 \u003d a73s0;\n        record0.f74 \u003d a74s0;\n        record0.f75 \u003d a75s0;\n        record0.f76 \u003d a76s0;\n        record0.f77 \u003d a77s0;\n        record0.f78 \u003d a78s0;\n        record0.f79 \u003d a79s0;\n        record0.f80 \u003d a80s0;\n        record0.f81 \u003d a81s0;\n        record0.f82 \u003d a82s0;\n        record0.f83 \u003d a83s0;\n        record0.f84 \u003d a84s0;\n        record0.f85 \u003d a85s0;\n        record0.f86 \u003d a86s0;\n        record0.f87 \u003d a87s0;\n        record0.f88 \u003d a88s0;\n        record0.f89 \u003d a89s0;\n        record0.f90 \u003d a90s0;\n        record0.f91 \u003d a91s0;\n        record0.f92 \u003d a92s0;\n        record0.f93 \u003d a93s0;\n        record0.f94 \u003d a94s0;\n        record0.f95 \u003d a95s0;\n        record0.f96 \u003d a96s0;\n        record0.f97 \u003d a97s0;\n        record0.f98 \u003d a98s0;\n        record0.f99 \u003d a99s0;\n        record0.f100 \u003d a100s0;\n        record0.f101 \u003d a101s0;\n        record0.f102 \u003d a102s0;\n        record0.f103 \u003d a103s0;\n        record0.f104 \u003d a104s0;\n        record0.f105 \u003d a105s0;\n        record0.f106 \u003d a106s0;\n        record0.f107 \u003d a107s0;\n        record0.f108 \u003d a108s0;\n        record0.f109 \u003d a109s0;\n        record0.f110 \u003d a110s0;\n        record0.f111 \u003d a111s0;\n        record0.f112 \u003d a112s0;\n        record0.f113 \u003d a113s0;\n        record0.f114 \u003d a114s0;\n        record0.f115 \u003d a115s0;\n        record0.f116 \u003d a116s0;\n        record0.f117 \u003d a117s0;\n        record0.f118 \u003d a118s0;\n        record0.f119 \u003d a119s0;\n        record0.f120 \u003d a120s0;\n        record0.f121 \u003d a121s0;\n        record0.f122 \u003d a122s0;\n        record0.f123 \u003d a123s0;\n        record0.f124 \u003d a124s0;\n        record0.f125 \u003d a125s0;\n        record0.f126 \u003d a126s0;\n        record0.f127 \u003d a127s0;\n        record0.f128 \u003d a128s0;\n        record0.f129 \u003d a129s0;\n        record0.f130 \u003d a130s0;\n        record0.f131 \u003d a131s0;\n        record0.f132 \u003d a132s0;\n        record0.f133 \u003d a133s0;\n        record0.f134 \u003d a134s0;\n        record0.f135 \u003d a135s0;\n        record0.f136 \u003d a136s0;\n        record0.f137 \u003d a137s0;\n        record0.f138 \u003d a138s0;\n        record0.f139 \u003d a139s0;\n        record0.f140 \u003d a140s0;\n        record0.f141 \u003d a141s0;\n        record0.f142 \u003d a142s0;\n        record0.f143 \u003d a143s0;\n        record0.f144 \u003d a144s0;\n        record0.f145 \u003d a145s0;\n        record0.f146 \u003d a146s0;\n        record0.f147 \u003d a147s0;\n        record0.f148 \u003d a148s0;\n        record0.f149 \u003d a149s0;\n        record0.f150 \u003d a150s0;\n        record0.f151 \u003d a151s0;\n        record0.f152 \u003d a152s0;\n        record0.f153 \u003d a153s0;\n        record0.f154 \u003d a154s0;\n        record0.f155 \u003d a155s0;\n        record0.f156 \u003d a156s0;\n        record0.f157 \u003d a157s0;\n        record0.f158 \u003d a158s0;\n        record0.f159 \u003d a159s0;\n        record0.f160 \u003d a160s0;\n        record0.f161 \u003d a161s0;\n        record0.f162 \u003d a162s0;\n        record0.f163 \u003d a163s0;\n        record0.f164 \u003d a164s0;\n        record0.f165 \u003d a165s0;\n        record0.f166 \u003d a166s0;\n        record0.f167 \u003d a167s0;\n        record0.f168 \u003d a168s0;\n        record0.f169 \u003d a169s0;\n        record0.f170 \u003d a170s0;\n        record0.f171 \u003d a171s0;\n        record0.f172 \u003d a172s0;\n        record0.f173 \u003d a173s0;\n        record0.f174 \u003d a174s0;\n        record0.f175 \u003d a175s0;\n        record0.f176 \u003d a176s0;\n        record0.f177 \u003d a177s0;\n        record0.f178 \u003d a178s0;\n        record0.f179 \u003d a179s0;\n        record0.f180 \u003d a180s0;\n        record0.f181 \u003d a181s0;\n        record0.f182 \u003d a182s0;\n        record0.f183 \u003d a183s0;\n        record0.f184 \u003d a184s0;\n        record0.f185 \u003d a185s0;\n        record0.f186 \u003d a186s0;\n        record0.f187 \u003d a187s0;\n        record0.f188 \u003d a188s0;\n        record0.f189 \u003d a189s0;\n        record0.f190 \u003d a190s0;\n        record0.f191 \u003d a191s0;\n        record0.f192 \u003d a192s0;\n        record0.f193 \u003d a193s0;\n        record0.f194 \u003d a194s0;\n        record0.f195 \u003d a195s0;\n        record0.f196 \u003d a196s0;\n        record0.f197 \u003d a197s0;\n        record0.f198 \u003d a198s0;\n        record0.f199 \u003d a199s0;\n        return record0;\n      }\n    }\n    , new org.apache.calcite.linq4j.function.Function2() {\n      public Record200_0 apply(Record200_0 acc, org.apache.calcite.util.Smalls.WideProductSale in) {\n        acc.f0 \u003d acc.f0 + in.sale0;\n        acc.f1 \u003d acc.f1 + in.sale1;\n        acc.f2 \u003d acc.f2 + in.sale2;\n        acc.f3 \u003d acc.f3 + in.sale3;\n        acc.f4 \u003d acc.f4 + in.sale4;\n        acc.f5 \u003d acc.f5 + in.sale5;\n        acc.f6 \u003d acc.f6 + in.sale6;\n        acc.f7 \u003d acc.f7 + in.sale7;\n        acc.f8 \u003d acc.f8 + in.sale8;\n        acc.f9 \u003d acc.f9 + in.sale9;\n        acc.f10 \u003d acc.f10 + in.sale10;\n        acc.f11 \u003d acc.f11 + in.sale11;\n        acc.f12 \u003d acc.f12 + in.sale12;\n        acc.f13 \u003d acc.f13 + in.sale13;\n        acc.f14 \u003d acc.f14 + in.sale14;\n        acc.f15 \u003d acc.f15 + in.sale15;\n        acc.f16 \u003d acc.f16 + in.sale16;\n        acc.f17 \u003d acc.f17 + in.sale17;\n        acc.f18 \u003d acc.f18 + in.sale18;\n        acc.f19 \u003d acc.f19 + in.sale19;\n        acc.f20 \u003d acc.f20 + in.sale20;\n        acc.f21 \u003d acc.f21 + in.sale21;\n        acc.f22 \u003d acc.f22 + in.sale22;\n        acc.f23 \u003d acc.f23 + in.sale23;\n        acc.f24 \u003d acc.f24 + in.sale24;\n        acc.f25 \u003d acc.f25 + in.sale25;\n        acc.f26 \u003d acc.f26 + in.sale26;\n        acc.f27 \u003d acc.f27 + in.sale27;\n        acc.f28 \u003d acc.f28 + in.sale28;\n        acc.f29 \u003d acc.f29 + in.sale29;\n        acc.f30 \u003d acc.f30 + in.sale30;\n        acc.f31 \u003d acc.f31 + in.sale31;\n        acc.f32 \u003d acc.f32 + in.sale32;\n        acc.f33 \u003d acc.f33 + in.sale33;\n        acc.f34 \u003d acc.f34 + in.sale34;\n        acc.f35 \u003d acc.f35 + in.sale35;\n        acc.f36 \u003d acc.f36 + in.sale36;\n        acc.f37 \u003d acc.f37 + in.sale37;\n        acc.f38 \u003d acc.f38 + in.sale38;\n        acc.f39 \u003d acc.f39 + in.sale39;\n        acc.f40 \u003d acc.f40 + in.sale40;\n        acc.f41 \u003d acc.f41 + in.sale41;\n        acc.f42 \u003d acc.f42 + in.sale42;\n        acc.f43 \u003d acc.f43 + in.sale43;\n        acc.f44 \u003d acc.f44 + in.sale44;\n        acc.f45 \u003d acc.f45 + in.sale45;\n        acc.f46 \u003d acc.f46 + in.sale46;\n        acc.f47 \u003d acc.f47 + in.sale47;\n        acc.f48 \u003d acc.f48 + in.sale48;\n        acc.f49 \u003d acc.f49 + in.sale49;\n        acc.f50 \u003d acc.f50 + in.sale50;\n        acc.f51 \u003d acc.f51 + in.sale51;\n        acc.f52 \u003d acc.f52 + in.sale52;\n        acc.f53 \u003d acc.f53 + in.sale53;\n        acc.f54 \u003d acc.f54 + in.sale54;\n        acc.f55 \u003d acc.f55 + in.sale55;\n        acc.f56 \u003d acc.f56 + in.sale56;\n        acc.f57 \u003d acc.f57 + in.sale57;\n        acc.f58 \u003d acc.f58 + in.sale58;\n        acc.f59 \u003d acc.f59 + in.sale59;\n        acc.f60 \u003d acc.f60 + in.sale60;\n        acc.f61 \u003d acc.f61 + in.sale61;\n        acc.f62 \u003d acc.f62 + in.sale62;\n        acc.f63 \u003d acc.f63 + in.sale63;\n        acc.f64 \u003d acc.f64 + in.sale64;\n        acc.f65 \u003d acc.f65 + in.sale65;\n        acc.f66 \u003d acc.f66 + in.sale66;\n        acc.f67 \u003d acc.f67 + in.sale67;\n        acc.f68 \u003d acc.f68 + in.sale68;\n        acc.f69 \u003d acc.f69 + in.sale69;\n        acc.f70 \u003d acc.f70 + in.sale70;\n        acc.f71 \u003d acc.f71 + in.sale71;\n        acc.f72 \u003d acc.f72 + in.sale72;\n        acc.f73 \u003d acc.f73 + in.sale73;\n        acc.f74 \u003d acc.f74 + in.sale74;\n        acc.f75 \u003d acc.f75 + in.sale75;\n        acc.f76 \u003d acc.f76 + in.sale76;\n        acc.f77 \u003d acc.f77 + in.sale77;\n        acc.f78 \u003d acc.f78 + in.sale78;\n        acc.f79 \u003d acc.f79 + in.sale79;\n        acc.f80 \u003d acc.f80 + in.sale80;\n        acc.f81 \u003d acc.f81 + in.sale81;\n        acc.f82 \u003d acc.f82 + in.sale82;\n        acc.f83 \u003d acc.f83 + in.sale83;\n        acc.f84 \u003d acc.f84 + in.sale84;\n        acc.f85 \u003d acc.f85 + in.sale85;\n        acc.f86 \u003d acc.f86 + in.sale86;\n        acc.f87 \u003d acc.f87 + in.sale87;\n        acc.f88 \u003d acc.f88 + in.sale88;\n        acc.f89 \u003d acc.f89 + in.sale89;\n        acc.f90 \u003d acc.f90 + in.sale90;\n        acc.f91 \u003d acc.f91 + in.sale91;\n        acc.f92 \u003d acc.f92 + in.sale92;\n        acc.f93 \u003d acc.f93 + in.sale93;\n        acc.f94 \u003d acc.f94 + in.sale94;\n        acc.f95 \u003d acc.f95 + in.sale95;\n        acc.f96 \u003d acc.f96 + in.sale96;\n        acc.f97 \u003d acc.f97 + in.sale97;\n        acc.f98 \u003d acc.f98 + in.sale98;\n        acc.f99 \u003d acc.f99 + in.sale99;\n        acc.f100 \u003d acc.f100 + in.sale100;\n        acc.f101 \u003d acc.f101 + in.sale101;\n        acc.f102 \u003d acc.f102 + in.sale102;\n        acc.f103 \u003d acc.f103 + in.sale103;\n        acc.f104 \u003d acc.f104 + in.sale104;\n        acc.f105 \u003d acc.f105 + in.sale105;\n        acc.f106 \u003d acc.f106 + in.sale106;\n        acc.f107 \u003d acc.f107 + in.sale107;\n        acc.f108 \u003d acc.f108 + in.sale108;\n        acc.f109 \u003d acc.f109 + in.sale109;\n        acc.f110 \u003d acc.f110 + in.sale110;\n        acc.f111 \u003d acc.f111 + in.sale111;\n        acc.f112 \u003d acc.f112 + in.sale112;\n        acc.f113 \u003d acc.f113 + in.sale113;\n        acc.f114 \u003d acc.f114 + in.sale114;\n        acc.f115 \u003d acc.f115 + in.sale115;\n        acc.f116 \u003d acc.f116 + in.sale116;\n        acc.f117 \u003d acc.f117 + in.sale117;\n        acc.f118 \u003d acc.f118 + in.sale118;\n        acc.f119 \u003d acc.f119 + in.sale119;\n        acc.f120 \u003d acc.f120 + in.sale120;\n        acc.f121 \u003d acc.f121 + in.sale121;\n        acc.f122 \u003d acc.f122 + in.sale122;\n        acc.f123 \u003d acc.f123 + in.sale123;\n        acc.f124 \u003d acc.f124 + in.sale124;\n        acc.f125 \u003d acc.f125 + in.sale125;\n        acc.f126 \u003d acc.f126 + in.sale126;\n        acc.f127 \u003d acc.f127 + in.sale127;\n        acc.f128 \u003d acc.f128 + in.sale128;\n        acc.f129 \u003d acc.f129 + in.sale129;\n        acc.f130 \u003d acc.f130 + in.sale130;\n        acc.f131 \u003d acc.f131 + in.sale131;\n        acc.f132 \u003d acc.f132 + in.sale132;\n        acc.f133 \u003d acc.f133 + in.sale133;\n        acc.f134 \u003d acc.f134 + in.sale134;\n        acc.f135 \u003d acc.f135 + in.sale135;\n        acc.f136 \u003d acc.f136 + in.sale136;\n        acc.f137 \u003d acc.f137 + in.sale137;\n        acc.f138 \u003d acc.f138 + in.sale138;\n        acc.f139 \u003d acc.f139 + in.sale139;\n        acc.f140 \u003d acc.f140 + in.sale140;\n        acc.f141 \u003d acc.f141 + in.sale141;\n        acc.f142 \u003d acc.f142 + in.sale142;\n        acc.f143 \u003d acc.f143 + in.sale143;\n        acc.f144 \u003d acc.f144 + in.sale144;\n        acc.f145 \u003d acc.f145 + in.sale145;\n        acc.f146 \u003d acc.f146 + in.sale146;\n        acc.f147 \u003d acc.f147 + in.sale147;\n        acc.f148 \u003d acc.f148 + in.sale148;\n        acc.f149 \u003d acc.f149 + in.sale149;\n        acc.f150 \u003d acc.f150 + in.sale150;\n        acc.f151 \u003d acc.f151 + in.sale151;\n        acc.f152 \u003d acc.f152 + in.sale152;\n        acc.f153 \u003d acc.f153 + in.sale153;\n        acc.f154 \u003d acc.f154 + in.sale154;\n        acc.f155 \u003d acc.f155 + in.sale155;\n        acc.f156 \u003d acc.f156 + in.sale156;\n        acc.f157 \u003d acc.f157 + in.sale157;\n        acc.f158 \u003d acc.f158 + in.sale158;\n        acc.f159 \u003d acc.f159 + in.sale159;\n        acc.f160 \u003d acc.f160 + in.sale160;\n        acc.f161 \u003d acc.f161 + in.sale161;\n        acc.f162 \u003d acc.f162 + in.sale162;\n        acc.f163 \u003d acc.f163 + in.sale163;\n        acc.f164 \u003d acc.f164 + in.sale164;\n        acc.f165 \u003d acc.f165 + in.sale165;\n        acc.f166 \u003d acc.f166 + in.sale166;\n        acc.f167 \u003d acc.f167 + in.sale167;\n        acc.f168 \u003d acc.f168 + in.sale168;\n        acc.f169 \u003d acc.f169 + in.sale169;\n        acc.f170 \u003d acc.f170 + in.sale170;\n        acc.f171 \u003d acc.f171 + in.sale171;\n        acc.f172 \u003d acc.f172 + in.sale172;\n        acc.f173 \u003d acc.f173 + in.sale173;\n        acc.f174 \u003d acc.f174 + in.sale174;\n        acc.f175 \u003d acc.f175 + in.sale175;\n        acc.f176 \u003d acc.f176 + in.sale176;\n        acc.f177 \u003d acc.f177 + in.sale177;\n        acc.f178 \u003d acc.f178 + in.sale178;\n        acc.f179 \u003d acc.f179 + in.sale179;\n        acc.f180 \u003d acc.f180 + in.sale180;\n        acc.f181 \u003d acc.f181 + in.sale181;\n        acc.f182 \u003d acc.f182 + in.sale182;\n        acc.f183 \u003d acc.f183 + in.sale183;\n        acc.f184 \u003d acc.f184 + in.sale184;\n        acc.f185 \u003d acc.f185 + in.sale185;\n        acc.f186 \u003d acc.f186 + in.sale186;\n        acc.f187 \u003d acc.f187 + in.sale187;\n        acc.f188 \u003d acc.f188 + in.sale188;\n        acc.f189 \u003d acc.f189 + in.sale189;\n        acc.f190 \u003d acc.f190 + in.sale190;\n        acc.f191 \u003d acc.f191 + in.sale191;\n        acc.f192 \u003d acc.f192 + in.sale192;\n        acc.f193 \u003d acc.f193 + in.sale193;\n        acc.f194 \u003d acc.f194 + in.sale194;\n        acc.f195 \u003d acc.f195 + in.sale195;\n        acc.f196 \u003d acc.f196 + in.sale196;\n        acc.f197 \u003d acc.f197 + in.sale197;\n        acc.f198 \u003d acc.f198 + in.sale198;\n        acc.f199 \u003d acc.f199 + in.sale199;\n        return acc;\n      }\n      public Record200_0 apply(Object acc, Object in) {\n        return apply(\n          (Record200_0) acc,\n          (org.apache.calcite.util.Smalls.WideProductSale) in);\n      }\n    }\n    , new org.apache.calcite.linq4j.function.Function2() {\n      public Object[] apply(int key, Record200_0 acc) {\n        return new Object[] {\n            key,\n            acc.f0,\n            acc.f1,\n            acc.f2,\n            acc.f3,\n            acc.f4,\n            acc.f5,\n            acc.f6,\n            acc.f7,\n            acc.f8,\n            acc.f9,\n            acc.f10,\n            acc.f11,\n            acc.f12,\n            acc.f13,\n            acc.f14,\n            acc.f15,\n            acc.f16,\n            acc.f17,\n            acc.f18,\n            acc.f19,\n            acc.f20,\n            acc.f21,\n            acc.f22,\n            acc.f23,\n            acc.f24,\n            acc.f25,\n            acc.f26,\n            acc.f27,\n            acc.f28,\n            acc.f29,\n            acc.f30,\n            acc.f31,\n            acc.f32,\n            acc.f33,\n            acc.f34,\n            acc.f35,\n            acc.f36,\n            acc.f37,\n            acc.f38,\n            acc.f39,\n            acc.f40,\n            acc.f41,\n            acc.f42,\n            acc.f43,\n            acc.f44,\n            acc.f45,\n            acc.f46,\n            acc.f47,\n            acc.f48,\n            acc.f49,\n            acc.f50,\n            acc.f51,\n            acc.f52,\n            acc.f53,\n            acc.f54,\n            acc.f55,\n            acc.f56,\n            acc.f57,\n            acc.f58,\n            acc.f59,\n            acc.f60,\n            acc.f61,\n            acc.f62,\n            acc.f63,\n            acc.f64,\n            acc.f65,\n            acc.f66,\n            acc.f67,\n            acc.f68,\n            acc.f69,\n            acc.f70,\n            acc.f71,\n            acc.f72,\n            acc.f73,\n            acc.f74,\n            acc.f75,\n            acc.f76,\n            acc.f77,\n            acc.f78,\n            acc.f79,\n            acc.f80,\n            acc.f81,\n            acc.f82,\n            acc.f83,\n            acc.f84,\n            acc.f85,\n            acc.f86,\n            acc.f87,\n            acc.f88,\n            acc.f89,\n            acc.f90,\n            acc.f91,\n            acc.f92,\n            acc.f93,\n            acc.f94,\n            acc.f95,\n            acc.f96,\n            acc.f97,\n            acc.f98,\n            acc.f99,\n            acc.f100,\n            acc.f101,\n            acc.f102,\n            acc.f103,\n            acc.f104,\n            acc.f105,\n            acc.f106,\n            acc.f107,\n            acc.f108,\n            acc.f109,\n            acc.f110,\n            acc.f111,\n            acc.f112,\n            acc.f113,\n            acc.f114,\n            acc.f115,\n            acc.f116,\n            acc.f117,\n            acc.f118,\n            acc.f119,\n            acc.f120,\n            acc.f121,\n            acc.f122,\n            acc.f123,\n            acc.f124,\n            acc.f125,\n            acc.f126,\n            acc.f127,\n            acc.f128,\n            acc.f129,\n            acc.f130,\n            acc.f131,\n            acc.f132,\n            acc.f133,\n            acc.f134,\n            acc.f135,\n            acc.f136,\n            acc.f137,\n            acc.f138,\n            acc.f139,\n            acc.f140,\n            acc.f141,\n            acc.f142,\n            acc.f143,\n            acc.f144,\n            acc.f145,\n            acc.f146,\n            acc.f147,\n            acc.f148,\n            acc.f149,\n            acc.f150,\n            acc.f151,\n            acc.f152,\n            acc.f153,\n            acc.f154,\n            acc.f155,\n            acc.f156,\n            acc.f157,\n            acc.f158,\n            acc.f159,\n            acc.f160,\n            acc.f161,\n            acc.f162,\n            acc.f163,\n            acc.f164,\n            acc.f165,\n            acc.f166,\n            acc.f167,\n            acc.f168,\n            acc.f169,\n            acc.f170,\n            acc.f171,\n            acc.f172,\n            acc.f173,\n            acc.f174,\n            acc.f175,\n            acc.f176,\n            acc.f177,\n            acc.f178,\n            acc.f179,\n            acc.f180,\n            acc.f181,\n            acc.f182,\n            acc.f183,\n            acc.f184,\n            acc.f185,\n            acc.f186,\n            acc.f187,\n            acc.f188,\n            acc.f189,\n            acc.f190,\n            acc.f191,\n            acc.f192,\n            acc.f193,\n            acc.f194,\n            acc.f195,\n            acc.f196,\n            acc.f197,\n            acc.f198,\n            acc.f199};\n      }\n      public Object[] apply(Integer key, Record200_0 acc) {\n        return apply(\n          key.intValue(),\n          acc);\n      }\n      public Object[] apply(Object key, Object acc) {\n        return apply(\n          (Integer) key,\n          (Record200_0) acc);\n      }\n    }\n    );\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testNonEquiJoinReverseConditionPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select empno, ename, grade \nfrom scott.emp e inner join scott.salgrade s \non s.losal \u003c\u003d e.sal and s.hisal \u003e\u003d e.sal]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.profile.ProfilerTest",
        "testMethod": "testProfileTwoRows",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while preparing statement [select * from \"scott\".dept where deptno in (10, 20)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs1",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" from \"emps\"\njoin \"depts\" using (\"deptno\") where \"depts\".\"deptno\" \u003e 20\ngroup by \"empid\", \"depts\".\"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testUserDefinedAggregateFunctionImplementsInterface",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select my_sum3(\"deptno\") as p from EMPLOYEES\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByOffsetFetch",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store_id\", \"grocery_sqft\" from \"store\"\nwhere \"store_id\" \u003c 10\norder by 1 offset 2 rows fetch next 5 rows only]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView9",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\", \"empid\" from \"emps\" where \"deptno\" \u003e 30 or \"empid\" \u003e 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testReuseExpressionWhenNullChecking3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select substring(\"name\", \"deptno\"+case when user \u003c\u003e \u0027sa\u0027 then 1 end) from \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testMetaTables",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"metadata\".TABLES]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testAutomaticTemporaryTable",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"select * from \"hr\".\"emps\" where \"deptno\" \u003d 10\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              while (inputEnumerator.moveNext()) {\n                if (((org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current()).deptno \u003d\u003d 10) {\n                  return true;\n                }\n              }\n              return false;\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n              return new Object[] {\n                  current.empid,\n                  current.deptno,\n                  current.name,\n                  current.salary,\n                  current.commission};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testInsertBind",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from \"foo\".\"bar\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testOrderBy",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select upper(\"name\") as un, \"deptno\"\nfrom \"hr\".\"emps\" as e\norder by \"deptno\", \"name\" desc]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderOnSortedTable",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"day\"\nfrom \"days\"\norder by \"day\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWhereInOr",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\"\nfrom \"hr\".\"emps\" t\nwhere (\"empid\" in (select \"empid\" from \"hr\".\"emps\")\n    or \"empid\" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))\nand \"empid\" in (100, 200, 150)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggScalarNonNullPhysType",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select min(\"salary\"+1) over w as m\nfrom \"hr\".\"emps\"\nwindow w as (order by \"salary\"+1 rows 1 preceding)\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testGroup",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select s, count(*) as c, min(\"week_day\") as mw from (\nselect \"week_day\",\n  substring(\"week_day\" from 1 for 1) as s\nfrom \"foodmart\".\"days\")\ngroup by s]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.tools.FrameworksTest",
        "testMethod": "testJdbcValues",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.lang.RuntimeException: java.sql.SQLException: Error while preparing statement [null]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testCustomBoxedScalar",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"value\" from \"s\".\"primesCustomBoxed\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSimpleIn",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select * from \"hr\".\"depts\" where \"deptno\" in (\n  select \"deptno\" from \"hr\".\"emps\"\n  where \"empid\" \u003c 150)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModelCustomTable",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"adhoc\".EMPLOYEES where \"deptno\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWithOrderBy",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [with emp2 as (select * from \"hr\".\"emps\")\nselect * from emp2\norder by \"deptno\" desc, \"empid\" desc]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterializationUKFK4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" from \"emps\" where \"empid\" \u003d 1\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs8",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"depts\".\"name\", sum(\"salary\") as s\nfrom \"emps\"\njoin \"depts\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\njoin \"dependents\" on (\"emps\".\"empid\" \u003d \"dependents\".\"empid\")\ngroup by \"depts\".\"name\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs5",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"depts\".\"deptno\" from \"depts\"\njoin \"emps\" using (\"deptno\") where \"emps\".\"empid\" \u003e 15\ngroup by \"depts\".\"deptno\", \"emps\".\"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testValuesPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"days\", (values 1, 2) as t(c)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAlias",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" as n from \"emps\" as e where (e.\"empid\" \u003e 500 and e.\"salary\" \u003e 6000)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testThetaJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.\"empid\", d.\"name\", e.\"name\"\nfrom \"hr\".\"emps\" as e\nleft join \"hr\".\"depts\" as d\non e.\"deptno\" \u003c d.\"deptno\"\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select *\nfrom (select * from \"emps\" where \"empid\" \u003c 300)\njoin \"depts\" using (\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testUnionPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"sales_fact_1997\"\nunion all\nselect * from \"sales_fact_1998\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testLeftJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.\"deptno\", d.\"deptno\"\nfrom \"hr\".\"emps\" as e\n  left join \"hr\".\"depts\" as d using (\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testScalarSubQueryInCase2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.\"name\",\n (CASE WHEN e.\"deptno\" \u003d (\n    Select \"deptno\" from \"hr\".\"depts\" d\n    where d.\"name\" \u003d \u0027Sales\u0027)\n  THEN \u0027Sales\u0027\n  ELSE \u0027Not Matched\u0027  END) AS DEPTNAME\nfrom \"hr\".\"emps\" e]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testView",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select *\nfrom \"s\".\"emps_view\"\nwhere \"empid\" \u003c 120\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              while (inputEnumerator.moveNext()) {\n                final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n                if (current.deptno \u003d\u003d 10 \u0026\u0026 current.empid \u003c 120) {\n                  return true;\n                }\n              }\n              return false;\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n              return new Object[] {\n                  current.empid,\n                  current.deptno,\n                  current.name,\n                  current.salary,\n                  current.commission};\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.jdbc.CalciteRemoteDriverTest",
        "testMethod": "testRemotePreparedStatementFetch",
        "failureName": "java.sql.SQLException",
        "detail": "while preparing SQL: select * from \"foo\".\"bar\"",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs1",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\" from \"emps\" group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationNoAggregateFuncs5",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\" from \"emps\" where \"deptno\" \u003d 10 group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModel",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from \"foodmart\".\"time_by_day\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs8",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\"\nfrom \"depts\"\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")\njoin \"locations\" on (\"locations\".\"name\" \u003d \"dependents\".\"name\")\njoin \"emps\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\nwhere \"depts\".\"deptno\" \u003e 10 and \"depts\".\"deptno\" \u003c 20\ngroup by \"dependents\".\"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testColumnTypes",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"primitiveBoolean\" from \"s\".\"everyTypes\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testPrefix",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"s\".\"prefixEmps\" where \"name\" in (\u0027Ab\u0027, \u0027Abd\u0027)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackTest",
        "testMethod": "testWhere2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"foodmart\".\"days\" where \"day\" \u003c 3]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testSum",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select sum(\"unit_sales\") as c\nfrom \"foodmart\".\"sales_fact_1997\"\ngroup by \"product_id\"\norder by 1 desc limit 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs16",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select floor(cast(\"ts\" as timestamp) to year), sum(\"eventid\") as s\nfrom \"events\" group by floor(cast(\"ts\" as timestamp) to year)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testWhereOr",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\"\nwhere (\"empid\" \u003d 100 or \"empid\" \u003d 200)\nand \"deptno\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testLatticeWithSameNameAsTable",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) from EMPLOYEES]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testPreparedStatement",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while preparing statement [select \"deptno\", \"name\" from \"hr\".\"emps\"\nwhere \"deptno\" \u003c ? and \"name\" like ?]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization7",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\"\nfrom \"emps\"\njoin \"depts\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView5",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where \"deptno\" \u003e 30]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testArray",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"SELECT ID, VALS FROM ARR_TABLE\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object[] values \u003d new Object[2];\n              values[0] \u003d resultSet.getInt(1);\n              if (resultSet.wasNull()) {\n                values[0] \u003d null;\n              }\n              values[1] \u003d org.apache.calcite.runtime.SqlFunctions.arrayToList((java.sql.Array) resultSet.getObject(2));\n              return values;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"BASEJDBC\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"SELECT *\\nFROM \\\"ARR_TABLE\\\"\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testPreparedOffsetFetch",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while preparing statement [select \"name\"\nfrom \"hr\".\"emps\"\norder by \"empid\" offset ? fetch next ? rows only]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testSingleMaterializationMultiUsage",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select *\nfrom (select * from \"emps\" where \"empid\" \u003c 300)\njoin (select * from \"emps\" where \"empid\" \u003c 200) using (\"empid\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testDistinctCountSimple",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(distinct \"sales_fact_1997\".\"unit_sales\") as \"m0\"\nfrom \"sales_fact_1997\" as \"sales_fact_1997\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testTableModifyInsertWithSubQuery",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"DELETE FROM \"foodmart\".\"expense_fact\" WHERE \"store_id\"\u003d666\n\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object value;\n              value \u003d resultSet.getLong(1);\n              if (resultSet.wasNull()) {\n                value \u003d null;\n              }\n              return value;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"foodmart\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"DELETE FROM \\\"foodmart\\\".\\\"expense_fact\\\"\\nWHERE \\\"store_id\\\" \u003d 666\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return long.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testDistinctCount2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select cast(\"unit_sales\" as integer) as \"u\",\n count(distinct \"sales_fact_1997\".\"customer_id\") as \"m0\"\nfrom \"sales_fact_1997\" as \"sales_fact_1997\"\ngroup by \"unit_sales\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testViewPath",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select * from \"s\".\"hr_emps\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n}\n\n\npublic Class getElementType() {\n  return org.apache.calcite.test.JdbcTest.Employee.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs11",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to minute), sum(\"empid\") as s\nfrom \"emps\" group by floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to minute)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testCompareJavaAndSqlTypes",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"primitiveLong\" as c from \"s\".\"everyTypes\"\nwhere \"primitiveLong\" \u003e 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterializationUKFK3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"a\".\"name\" from \n(select * from \"emps\" where \"empid\" \u003d 1) \"a\"\njoin \"dependents\" using (\"empid\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testScalarSubQueryUncorrelated",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\", \"deptno\",\n (select \"name\" from \"hr\".\"depts\"\n  where \"deptno\" \u003d 30) as dname\nfrom \"hr\".\"emps\" as e]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderStarByExpr",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\"\norder by - \"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testCompositeGroupBy",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c, c.\"state_province\"\nfrom \"foodmart\".\"customer\" as c\ngroup by c.\"state_province\", c.\"country\"\norder by c, 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testLexCaseInsensitiveFindsNonexistentTable",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select COUNT(*) as c from `metaData`.`tAbLes`]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testUdfOverloaded",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select max(\"adhoc\".count_args()) as p0,\n min(\"adhoc\".count_args(0)) as p1,\n max(\"adhoc\".count_args(0, 0)) as p2\nfrom \"adhoc\".EMPLOYEES limit 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationNoAggregateFuncs9",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" from \"emps\"\nwhere \"salary\" \u003e 2000 group by \"name\", \"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWithInsideWhereExists",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\" from \"hr\".\"emps\"\nwhere exists (\n  with dept2 as (select * from \"hr\".\"depts\" where \"depts\".\"deptno\" \u003e\u003d \"emps\".\"deptno\")\n  select 1 from dept2 where \"deptno\" \u003c\u003d \"emps\".\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs13",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to year), sum(\"empid\") as s\nfrom \"emps\" group by floor(cast(\u00271997-01-20 12:34:56\u0027 as timestamp) to year)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testEquiJoinPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select empno, ename, e.deptno, dname \nfrom scott.emp e inner join scott.dept d \non e.deptno \u003d d.deptno]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testCastFromString",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select cast(\"string\" as int) as c from \"s\".\"everyTypes\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testGetDateAsString",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select min(\"date\") mindate from \"foodmart\".\"currency\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testInsert2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select count(*) as c from \"foo\".\"bar\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.jdbc.CalciteRemoteDriverTest",
        "testMethod": "testLocalStatementFetch",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select * from \"foo\".\"bar\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foo\"), org.apache.calcite.test.JdbcTest.Employee.class, \"bar\").asEnumerable();\n}\n\n\npublic Class getElementType() {\n  return org.apache.calcite.test.JdbcTest.Employee.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" \"deptno\" from \"emps\"\njoin \"depts\" using (\"deptno\") where \"empid\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testMixedJoinPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.empno, e.ename, e.empno, e.ename  \nfrom scott.emp e inner join scott.emp m on  \ne.mgr \u003d m.empno and e.sal \u003e m.sal]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testGroupBy",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\", sum(\"empid\") as s, count(*) as c\nfrom \"hr\".\"emps\" as e\ngroup by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationAggregateFuncs12",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\", count(distinct \"emps\".\"salary\") + 1\nfrom \"depts\"\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")\njoin \"locations\" on (\"locations\".\"name\" \u003d \"dependents\".\"name\")\njoin \"emps\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\nwhere \"depts\".\"deptno\" \u003e 10 and \"depts\".\"deptno\" \u003c 20\ngroup by \"dependents\".\"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testJoinPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [SELECT T1.\"brand_name\"\nFROM \"foodmart\".\"product\" AS T1\n INNER JOIN \"foodmart\".\"product_class\" AS T2\n ON T1.\"product_class_id\" \u003d T2.\"product_class_id\"\nWHERE T2.\"product_department\" \u003d \u0027Frozen Foods\u0027\n OR T2.\"product_department\" \u003d \u0027Baking Goods\u0027\n AND T1.\"brand_name\" \u003c\u003e \u0027King\u0027]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderUnionStarByExpr",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\" where \"empid\" \u003c 150\nunion all\nselect * from \"hr\".\"emps\" where \"empid\" \u003e 150\norder by - \"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testLatticeRecognizeJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select s.\"unit_sales\", p.\"brand_name\"\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"foodmart\".\"product\" as p using (\"product_id\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModelCustomTableIntegerRowSingleColumn",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from math.integers]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testUnion",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select substring(\"name\" from 1 for 1) as x\nfrom \"hr\".\"emps\" as e\nunion\nselect substring(\"name\" from 1 for 1) as y\nfrom \"hr\".\"depts\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.jdbc.CalciteRemoteDriverTest",
        "testMethod": "testLocalPreparedStatementFetch",
        "failureName": "java.sql.SQLException",
        "detail": "Error while preparing statement [select * from \"foo\".\"bar\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testTrimFieldsOver",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select \"name\",\n  count(\"commission\") over (partition by \"deptno\") + 1\nfrom \"hr\".\"emps\"\nwhere \"empid\" \u003e 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testLatticeWithPreDefinedTiles",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select distinct t.\"the_year\", t.\"quarter\"\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"foodmart\".\"time_by_day\" as t using (\"time_id\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select *\nfrom \"emps\"\njoin \"depts\" using (\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testOrderByVarious",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store_id\", \"grocery_sqft\" from \"store\"\nwhere \"store_id\" \u003c 3 order by 2 ]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnProjectView1",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" + 1 as x from \"emps\" where \"deptno\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testJdbcAggregate",
        "failureName": "java.sql.SQLException",
        "detail": "Error while preparing statement [select 10 * count(ID) from t2]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilter",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" + 1 from \"emps\" where \"deptno\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testNotExistsCorrelated2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"hr\".\"emps\" as e left join lateral (\n select distinct true as i\n from \"hr\".\"depts\"\n where e.\"deptno\"\u003d\"depts\".\"deptno\") on true]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testMultisetQueryWithSingleColumn",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select multiset(\n  select \"deptno\" from \"hr\".\"emps\") as a\nfrom (values (1))]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testInsert",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"foo\".\"bar\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinMaterialization4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"empid\" \"deptno\" from \"emps\"\njoin \"depts\" using (\"deptno\") where \"empid\" \u003d 1]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModelCustomSchema",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"adhoc\".ELVIS where \"deptno\" \u003d 10]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testReuseExpressionWhenNullChecking2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select upper((case when \"empid\"\u003e\"deptno\"*10 then \"name\" end)) T from \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testNonEquiJoinPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select empno, ename, grade \nfrom scott.emp e inner join scott.salgrade s \non e.sal \u003e s.losal and e.sal \u003c s.hisal]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[7: quidem(sql/winagg.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/winagg.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/winagg.iq\n420,429c420,432\n\u003c +--------+-----+-----+\n\u003c | deptno | AR  | BR  |\n\u003c +--------+-----+-----+\n\u003c |     10 | 110 | 110 |\n\u003c |     10 | 110 | 110 |\n\u003c |     10 | 110 | 110 |\n\u003c |     20 | 200 | 200 |\n\u003c |     20 | 200 |     |\n\u003c +--------+-----+-----+\n\u003c (5 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select a.\"deptno\", a.r as ar, b.r as br\n\u003e from (\n\u003e   select \"deptno\", first_value(\"empid\") over w as r\n\u003e   from \"hr\".\"emps\"\n\u003e   window w as (partition by \"deptno\" order by \"commission\")) a\n\u003e join (\n\u003e   select \"deptno\", last_value(\"empid\") over w as r\n\u003e   from \"hr\".\"emps\"\n\u003e   window w as (partition by \"deptno\" order by \"commission\")) b\n\u003e on a.\"deptno\" \u003d b.\"deptno\"\n\u003e limit 5\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n430a434,834\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   int prevStart0;\n\u003e   int prevEnd0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(org.apache.calcite.test.JdbcTest.Employee v0, org.apache.calcite.test.JdbcTest.Employee v1) {\n\u003e       final int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0.commission, v1.commission);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((org.apache.calcite.test.JdbcTest.Employee) o0, (org.apache.calcite.test.JdbcTest.Employee) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.runtime.SortedMultiMap multiMap \u003d new org.apache.calcite.runtime.SortedMultiMap();\n\u003e   org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps).foreach(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object apply(org.apache.calcite.test.JdbcTest.Employee v) {\n\u003e       int key \u003d v.deptno;\n\u003e       multiMap.putMulti(key, v);\n\u003e       return null;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.test.JdbcTest.Employee) v);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final java.util.Iterator iterator \u003d multiMap.arrays(comparator);\n\u003e   final java.util.ArrayList _list \u003d new java.util.ArrayList(\n\u003e     multiMap.size());\n\u003e   final org.apache.calcite.linq4j.function.Function1 _keySelector0 \u003d new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(org.apache.calcite.test.JdbcTest.Employee v) {\n\u003e       return v.commission;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.test.JdbcTest.Employee) v);\n\u003e     }\n\u003e   }\n\u003e   ;\n\u003e   final java.util.Comparator _keyComparator0 \u003d org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false);\n\u003e   Integer a0w0 \u003d (Integer) null;\n\u003e   while (iterator.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator.next();\n\u003e     prevStart0 \u003d -1;\n\u003e     prevEnd0 \u003d 2147483647;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final org.apache.calcite.test.JdbcTest.Employee row \u003d (org.apache.calcite.test.JdbcTest.Employee) _rows[i];\n\u003e       final int end \u003d org.apache.calcite.runtime.BinarySearch.upperBound(_rows, row.commission, i, _rows.length - 1, _keySelector0, _keyComparator0);\n\u003e       if (end !\u003d prevEnd0) {\n\u003e         int actualStart \u003d end \u003c prevEnd0 ? 0 : prevEnd0 + 1;\n\u003e         prevEnd0 \u003d end;\n\u003e         a0w0 \u003d Integer.valueOf(((org.apache.calcite.test.JdbcTest.Employee) _rows[0]).empid);\n\u003e       }\n\u003e       _list.add(new Object[] {\n\u003e         row.empid,\n\u003e         row.deptno,\n\u003e         row.name,\n\u003e         row.salary,\n\u003e         row.commission,\n\u003e         a0w0});\n\u003e     }\n\u003e   }\n\u003e   multiMap.clear();\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(_list);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   int prevStart1;\n\u003e   int prevEnd1;\n\u003e   final java.util.Comparator comparator0 \u003d new java.util.Comparator(){\n\u003e     public int compare(org.apache.calcite.test.JdbcTest.Employee v0, org.apache.calcite.test.JdbcTest.Employee v1) {\n\u003e       final int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0.commission, v1.commission);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((org.apache.calcite.test.JdbcTest.Employee) o0, (org.apache.calcite.test.JdbcTest.Employee) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps).foreach(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object apply(org.apache.calcite.test.JdbcTest.Employee v) {\n\u003e       int key \u003d v.deptno;\n\u003e       multiMap.putMulti(key, v);\n\u003e       return null;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.test.JdbcTest.Employee) v);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final java.util.Iterator iterator0 \u003d multiMap.arrays(comparator0);\n\u003e   final org.apache.calcite.linq4j.function.Function1 _keySelector00 \u003d new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(org.apache.calcite.test.JdbcTest.Employee v) {\n\u003e       return v.commission;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.test.JdbcTest.Employee) v);\n\u003e     }\n\u003e   }\n\u003e   ;\n\u003e   while (iterator0.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator0.next();\n\u003e     prevStart1 \u003d -1;\n\u003e     prevEnd1 \u003d 2147483647;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final org.apache.calcite.test.JdbcTest.Employee row \u003d (org.apache.calcite.test.JdbcTest.Employee) _rows[i];\n\u003e       final int end \u003d org.apache.calcite.runtime.BinarySearch.upperBound(_rows, row.commission, i, _rows.length - 1, _keySelector00, _keyComparator0);\n\u003e       if (end !\u003d prevEnd1) {\n\u003e         int actualStart \u003d end \u003c prevEnd1 ? 0 : prevEnd1 + 1;\n\u003e         prevEnd1 \u003d end;\n\u003e         Integer.valueOf(((org.apache.calcite.test.JdbcTest.Employee) _rows[end]).empid);\n\u003e       }\n\u003e       _list.add(new Object[] {\n\u003e         row.empid,\n\u003e         row.deptno,\n\u003e         row.name,\n\u003e         row.salary,\n\u003e         row.commission,\n\u003e         (Integer) null});\n\u003e     }\n\u003e   }\n\u003e   multiMap.clear();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable right \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d left.join(right, new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public int apply(Object[] v1) {\n\u003e       return org.apache.calcite.runtime.SqlFunctions.toInt(v1[0]);\n\u003e     }\n\u003e     public Object apply(Object v1) {\n\u003e       return apply(\n\u003e         (Object[]) v1);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(Object[] left, Object[] right) {\n\u003e       return new Object[] {\n\u003e           left[0],\n\u003e           left[1],\n\u003e           right[0],\n\u003e           right[1]};\n\u003e     }\n\u003e     public Object[] apply(Object left, Object right) {\n\u003e       return apply(\n\u003e         (Object[]) left,\n\u003e         (Object[]) right);\n\u003e     }\n\u003e   }\n\u003e   , null, false, false).take(5);\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[3]};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   int prevStart0;\n\u003e   int prevEnd0;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(org.apache.calcite.test.JdbcTest.Employee v0, org.apache.calcite.test.JdbcTest.Employee v1) {\n\u003e       final int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0.commission, v1.commission);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((org.apache.calcite.test.JdbcTest.Employee) o0, (org.apache.calcite.test.JdbcTest.Employee) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.runtime.SortedMultiMap multiMap \u003d new org.apache.calcite.runtime.SortedMultiMap();\n\u003e   org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps).foreach(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object apply(org.apache.calcite.test.JdbcTest.Employee v) {\n\u003e       int key \u003d v.deptno;\n\u003e       multiMap.putMulti(key, v);\n\u003e       return null;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.test.JdbcTest.Employee) v);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final java.util.Iterator iterator \u003d multiMap.arrays(comparator);\n\u003e   final java.util.ArrayList _list \u003d new java.util.ArrayList(\n\u003e     multiMap.size());\n\u003e   final org.apache.calcite.linq4j.function.Function1 _keySelector0 \u003d new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(org.apache.calcite.test.JdbcTest.Employee v) {\n\u003e       return v.commission;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (org.apache.calcite.test.JdbcTest.Employee) v);\n\u003e     }\n\u003e   }\n\u003e   ;\n\u003e   final java.util.Comparator _keyComparator0 \u003d org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false);\n\u003e   Integer a0w0 \u003d (Integer) null;\n\u003e   while (iterator.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator.next();\n\u003e     prevStart0 \u003d -1;\n\u003e     prevEnd0 \u003d 2147483647;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final org.apache.calcite.test.JdbcTest.Employee row \u003d (org.apache.calcite.test.JdbcTest.Employee) _rows[i];\n\u003e       final int end \u003d org.apache.calcite.runtime.BinarySearch.upperBound(_rows, row.commission, i, _rows.length - 1, _keySelector0, _keyComparator0);\n\u003e       if (end !\u003d prevEnd0) {\n\u003e         int actualStart \u003d end \u003c prevEnd0 ? 0 : prevEnd0 + 1;\n\u003e         prevEnd0 \u003d end;\n\u003e         a0w0 \u003d Integer.valueOf(((org.apache.calcite.test.JdbcTest.Employee) _rows[0]).empid);\n\u003e       }\n\u003e       _list.add(new Object[] {\n\u003e         row.empid,\n\u003e         row.deptno,\n\u003e         row.name,\n\u003e         row.salary,\n\u003e         row.commission,\n\u003e         a0w0});\n\u003e     }\n\u003e   }\n\u003e   multiMap.clear();\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(_list);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable left \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[1],\n\u003e                 current[5]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   int prevStart1;\n\u003e   int prevEnd1;\n\u003e   final java.util.Comparator comparator0 \u003d new java.util.Comparator(){\n\u003e     public int compare(org.apache.calcite.test.JdbcTest.Employee v0, org.apache.calcite.test.JdbcTest.Employee v1) {\n\u003e       final int c;\n\u003e       c \u003d org.apache.calcite.runtime.Utilities.compareNullsLast(v0.commission, v1.commission);\n\u003e       if (c !\u003d 0) {\n\u003e         return c;\n\u003e       }\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((org.apache.calcite.test.JdbcTest.Employee) o0, (org.apache.calcite.test.JdbcTest.Employee) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSub (stack truncated)\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest",
        "testMethod": "testCase",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"day\",\n \"week_day\",\n case when \"day\" \u003c 3 then upper(\"week_day\")\n      when \"day\" \u003c 5 then lower(\"week_day\")\n      else \"week_day\" end as d\nfrom \"foodmart\".\"days\"\nwhere \"day\" \u003c\u003e 1\norder by \"day\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView11",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where \"deptno\" \u003e 30 and \"salary\" \u003e 3000]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testDelete",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from \"foo\".\"bar\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testModelCustomTable2",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select * from math.integers]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.jdbc.CalciteRemoteDriverTest",
        "testMethod": "testRemoteExecuteMaxRow",
        "failureName": "org.apache.calcite.avatica.AvaticaSqlException",
        "detail": "Error -1 (00000) : Error while executing SQL \"select * from \"hr\".\"emps\"\": Remote driver error: RuntimeException: Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n}\n\n\npublic Class getElementType() {\n  return org.apache.calcite.test.JdbcTest.Employee.class;\n}\n\n\n -\u003e CompileException: Line 5, Column 200: A method named \"unwrap\" is not declared in any enclosing class nor any supertype, nor through a static import",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.UdfTest",
        "testMethod": "testArrayUserDefinedFunction",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select \"empid\" as EMPLOYEE_ID,\n  \"name\" || \u0027 \u0027 || \"name\" as EMPLOYEE_NAME,\n  \"salary\" as EMPLOYEE_SALARY,\n  POST.ARRAY_APPEND(ARRAY[1,2,3], \"deptno\") as DEPARTMENTS\nfrom \"hr\".\"emps\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(((org.apache.calcite.test.JdbcTest.HrSchema) ((org.apache.calcite.adapter.java.ReflectiveSchema) root.getRootSchema().getSubSchema(\"hr\").unwrap(org.apache.calcite.adapter.java.ReflectiveSchema.class)).getTarget()).emps);\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final org.apache.calcite.test.JdbcTest.Employee current \u003d (org.apache.calcite.test.JdbcTest.Employee) inputEnumerator.current();\n              final String inp2_ \u003d current.name;\n              final java.util.ArrayList _list \u003d new java.util.ArrayList();\n              _list.add($L4J$C$Integer_valueOf_1_);\n              _list.add($L4J$C$Integer_valueOf_2_);\n              _list.add($L4J$C$Integer_valueOf_3_);\n              return new Object[] {\n                  current.empid,\n                  inp2_ \u003d\u003d null ? (String) null : org.apache.calcite.runtime.SqlFunctions.concat(org.apache.calcite.runtime.SqlFunctions.concat(inp2_, \" \"), inp2_),\n                  current.salary,\n                  org.apache.calcite.util.Smalls.AllTypesFunction.arrayAppendFun(_list, current.deptno)};\n            }\n\n            static final Integer $L4J$C$Integer_valueOf_1_ \u003d Integer.valueOf(1);\n            static final Integer $L4J$C$Integer_valueOf_2_ \u003d Integer.valueOf(2);\n            static final Integer $L4J$C$Integer_valueOf_3_ \u003d Integer.valueOf(3);\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Object[].class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[14: quidem(sql/operator.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/apache/calcite/367658383/core/target/surefire/sql/operator.iq /root/workspace/apache/calcite/367658383/core/target/test-classes/sql/operator.iq\n23,33c23,25\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c |  7369 | SMITH  | CLERK    | 7902 | 1980-12-17 |  800.00 |         |     20 |\n\u003c |  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7876 | ADAMS  | CLERK    | 7788 | 1987-05-23 | 1100.00 |         |     20 |\n\u003c |  7900 | JAMES  | CLERK    | 7698 | 1981-12-03 |  950.00 |         |     30 |\n\u003c |  7934 | MILLER | CLERK    | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c (6 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp where not sal \u003e 1300\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n34a27,221\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1300_;\n\u003e                 if (!(inp5_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1300_ \u003d new java.math.BigDecimal(\n\u003e               1300);\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1300_;\n\u003e                 if (!(inp5_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.gt(inp5_, v))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1300_ \u003d new java.math.BigDecimal(\n\u003e               1300);\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n38,43c225,238\n\u003c +----+\n\u003c | C  |\n\u003c +----+\n\u003c | 13 |\n\u003c +----+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c from \"scott\".emp where not ename \u003d \u0027SMITH\u0027\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n44a240,547\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if (!(inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"SMITH\"))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Record1_0 acc) {\n\u003e         return acc.f0;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if (!(inp1_ \u003d\u003d null || org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"SMITH\"))) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Record1_0 acc) {\n\u003e         return acc.f0;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n48,53c551,564\n\u003c +---+\n\u003c | C |\n\u003c +---+\n\u003c | 1 |\n\u003c +---+\n\u003c (1 row)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select count(*) as c from \"scott\".emp where not not ename \u003d \u0027SMITH\u0027\n\u003e \": Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n54a566,873\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"SMITH\")) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Record1_0 acc) {\n\u003e         return acc.f0;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e public static class Record1_0 implements java.io.Serializable {\n\u003e   public long f0;\n\u003e   public Record1_0() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record1_0)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record1_0) o).f0;\n\u003e   }\n\u003e \n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record1_0 that) {\n\u003e     final int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             while (inputEnumerator.moveNext()) {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final String inp1_ \u003d current[1] \u003d\u003d null ? (String) null : current[1].toString();\n\u003e               if (inp1_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.eq(inp1_, \"SMITH\")) {\n\u003e                 return true;\n\u003e               }\n\u003e             }\n\u003e             return false;\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 current[5],\n\u003e                 current[6],\n\u003e                 current[7]};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   return org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n\u003e       public Object apply() {\n\u003e         long a0s0;\n\u003e         a0s0 \u003d 0L;\n\u003e         Record1_0 record0;\n\u003e         record0 \u003d new Record1_0();\n\u003e         record0.f0 \u003d a0s0;\n\u003e         return record0;\n\u003e       }\n\u003e     }\n\u003e     .apply(), new org.apache.calcite.linq4j.function.Function2() {\n\u003e       public Record1_0 apply(Record1_0 acc, Object[] in) {\n\u003e         acc.f0++;\n\u003e         return acc;\n\u003e       }\n\u003e       public Record1_0 apply(Object acc, Object in) {\n\u003e         return apply(\n\u003e           (Record1_0) acc,\n\u003e           (Object[]) in);\n\u003e       }\n\u003e     }\n\u003e     , new org.apache.calcite.linq4j.function.Function1() {\n\u003e       public long apply(Record1_0 acc) {\n\u003e         return acc.f0;\n\u003e       }\n\u003e       public Object apply(Object acc) {\n\u003e         return apply(\n\u003e           (Record1_0) acc);\n\u003e       }\n\u003e     }\n\u003e     ));\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return long.class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 39, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n58,65c877,879\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c | EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c |  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |\n\u003c |  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |\n\u003c |  7934 | MILLER | CLERK    | 7782 | 1982-01-23 | 1300.00 |         |     10 |\n\u003c +-------+--------+----------+------+------------+---------+---------+--------+\n\u003c (3 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select * from \"scott\".emp where not sal \u003e 1300 and not sal \u003c 1200\n\u003e \": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n66a881,1081\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1300_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_1200_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp5_, v) \u0026\u0026 (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ge(inp5_, v1))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1300_ \u003d new java.math.BigDecimal(\n\u003e               1300);\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1200_ \u003d new java.math.BigDecimal(\n\u003e               1200);\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"scott\"), java.lang.Object[].class, \"EMP\").asEnumerable();\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               while (inputEnumerator.moveNext()) {\n\u003e                 final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e                 final java.math.BigDecimal inp5_ \u003d current[5] \u003d\u003d null ? (java.math.BigDecimal) null : org.apache.calcite.runtime.SqlFunctions.toBigDecimal(current[5]);\n\u003e                 final java.math.BigDecimal v \u003d $L4J$C$new_java_math_BigDecimal_1300_;\n\u003e                 final java.math.BigDecimal v1 \u003d $L4J$C$new_java_math_BigDecimal_1200_;\n\u003e                 if (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.le(inp5_, v) \u0026\u0026 (inp5_ !\u003d null \u0026\u0026 org.apache.calcite.runtime.SqlFunctions.ge(inp5_, v1))) {\n\u003e                   return true;\n\u003e                 }\n\u003e               }\n\u003e               return false;\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   current[3],\n\u003e                   current[4],\n\u003e                   current[5],\n\u003e                   current[6],\n\u003e                   current[7]};\n\u003e             }\n\u003e \n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1300_ \u003d new java.math.BigDecimal(\n\u003e               1300);\n\u003e             static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_1200_ \u003d new java.math.BigDecimal(\n\u003e               1200);\n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.wrap(Helper.java:37)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:108)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1254)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:331)\n\u003e  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)\n\u003e  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)\n\u003e  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)\n\u003e  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)\n\u003e  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)\n\u003e  ... 24 more\n\u003e Caused by: org.codehaus.commons.compiler.CompileException: Line 5, Column 109: No applicable constructor/method found for actual parameters \"org.apache.calcite.DataContext, org.apache.calcite.schema.Schema, java.lang.Class, java.lang.String\"; candidates are: \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.String[])\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, java.lang.Class, java.lang.Iterable)\", \"public static org.apache.calcite.linq4j.Queryable org.apache.calcite.schema.Schemas.queryable(org.apache.calcite.DataContext, org.apache.calcite.schema.SchemaPlus, java.lang.Class, java.lang.String)\"\n\u003e  at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:10092)\n\u003e  at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:7506)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7376)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5610)\n\u003e  at org.codehaus.janino.UnitCompiler.access$13800(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$16.visitMethodInvocation(UnitCompiler.java:5109)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3971)\n\u003e  at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5136)\n\u003e  at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:7280)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:3850)\n\u003e  at org.codehaus.janino.UnitCompiler.access$6900(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$10.visitMethodInvocation(UnitCompiler.java:3251)\n\u003e  at org.codehaus.janino.Java$MethodInvocation.accept(Java.java:3974)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:3278)\n\u003e  at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:4345)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1835)\n\u003e  at org.codehaus.janino.UnitCompiler.access$2000(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$4.visitLocalVariableDeclarationStatement(UnitCompiler.java:943)\n\u003e  at org.codehaus.janino.Java$LocalVariableDeclarationStatement.accept(Java.java:2508)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:956)\n\u003e  at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:997)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2283)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:820)\n\u003e  at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:792)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:505)\n\u003e  at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:391)\n\u003e  at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:183)\n\u003e  at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:345)\n\u003e  at org.codehaus.janino.Java$PackageMemberClassDeclaration.accept(Java.java:1139)\n\u003e  at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:352)\n\u003e  at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:320)\n\u003e  at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:383)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:233)\n\u003e  at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:192)\n\u003e  at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:47)\n\u003e  at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:340)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.getBindable(EnumerableInterpretable.java:140)\n\u003e  at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:105)\n\u003e  ... 34 more\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontLinqBackTest",
        "testMethod": "testJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select *\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"hr\".\"emps\" as e\non e.\"empid\" \u003d s.\"cust_id\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testTableModifyDelete",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.sql.SQLException: Error while executing SQL \"DELETE FROM \"foodmart\".\"expense_fact\" WHERE \"store_id\"\u003d666\n\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.function.Function1 rowBuilderFactory \u003d new org.apache.calcite.linq4j.function.Function1() {\n    public org.apache.calcite.linq4j.function.Function0 apply(final java.sql.ResultSet resultSet) {\n      return new org.apache.calcite.linq4j.function.Function0() {\n          public Object apply() {\n            try {\n              final Object value;\n              value \u003d resultSet.getLong(1);\n              if (resultSet.wasNull()) {\n                value \u003d null;\n              }\n              return value;\n            } catch (java.sql.SQLException e) {\n              throw new RuntimeException(\n                e);\n            }\n          }\n        }\n      ;\n    }\n    public Object apply(final Object resultSet) {\n      return apply(\n        (java.sql.ResultSet) resultSet);\n    }\n  }\n  ;\n  final org.apache.calcite.linq4j.Enumerable enumerable \u003d org.apache.calcite.runtime.ResultSetEnumerable.of(((org.apache.calcite.adapter.jdbc.JdbcSchema) root.getRootSchema().getSubSchema(\"foodmart\").unwrap(org.apache.calcite.adapter.jdbc.JdbcSchema.class)).getDataSource(), \"DELETE FROM \\\"foodmart\\\".\\\"expense_fact\\\"\\nWHERE \\\"store_id\\\" \u003d 666\", rowBuilderFactory);\n  return enumerable;\n}\n\n\npublic Class getElementType() {\n  return long.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testReuseExpressionWhenNullChecking4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select substring(trim(\nsubstring(\"name\",\n  \"deptno\"*0+case when user \u003d \u0027sa\u0027 then 1 end)\n), case when \"empid\"\u003e\"deptno\" then 4\n   else\n     case when \"deptno\"*8\u003e8 then 5 end\n   end-2) T\nfrom\n\"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcAdapterTest",
        "testMethod": "testInPlan",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store_id\", \"store_name\" from \"store\"\nwhere \"store_name\" in (\u0027Store 1\u0027, \u0027Store 10\u0027, \u0027Store 11\u0027, \u0027Store 15\u0027, \u0027Store 16\u0027, \u0027Store 24\u0027, \u0027Store 3\u0027, \u0027Store 7\u0027)]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcFrontJdbcBackTest",
        "testMethod": "testCase",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select\n  case when \"sales_fact_1997\".\"promotion_id\" \u003d 1 then 0\n  else \"sales_fact_1997\".\"store_sales\" end as \"c0\"\nfrom \"sales_fact_1997\" as \"sales_fact_1997\"where \"product_id\" \u003d 1\nand \"time_id\" \u003c 400]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testScalarSubQueryInCase",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select e.\"name\",\n (CASE e.\"deptno\"\n  WHEN (Select \"deptno\" from \"hr\".\"depts\" d\n        where d.\"deptno\" \u003d e.\"deptno\")\n  THEN (Select d.\"name\" from \"hr\".\"depts\" d\n        where d.\"deptno\" \u003d e.\"deptno\")\n  ELSE \u0027DepartmentNotFound\u0027  END) AS DEPTNAME\nfrom \"hr\".\"emps\" e]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testFilterQueryOnFilterView4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"name\" from \"emps\" where \"deptno\" \u003e 30]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationNoAggregateFuncs4",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\" from \"emps\" where \"deptno\" \u003d 10 group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testMergeJoin",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"emps\".\"empid\",\n \"depts\".\"deptno\", \"depts\".\"name\"\nfrom \"hr\".\"emps\"\n join \"hr\".\"depts\" using (\"deptno\")]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testGroupByEmpty3",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select sum(\"unit_sales\") as s, count(*) as c\nfrom \"foodmart\".\"sales_fact_1997\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.jdbc.CalciteRemoteDriverTest",
        "testMethod": "testRemoteStatementFetch",
        "failureName": "java.sql.SQLException",
        "detail": "Error while executing SQL \"select * from \"foo\".\"bar\"\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  return org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema(\"foo\"), org.apache.calcite.test.JdbcTest.Employee.class, \"bar\").asEnumerable();\n}\n\n\npublic Class getElementType() {\n  return org.apache.calcite.test.JdbcTest.Employee.class;\n}\n\n\n",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testTrimFields",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select \"name\", count(\"commission\") + 1\nfrom \"hr\".\"emps\"\ngroup by \"deptno\", \"name\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.ReflectiveSchemaTest",
        "testMethod": "testDivideWraperPrimitive",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"wrapperLong\" / \"primitiveLong\" as c\n from \"s\".\"everyTypes\" where \"primitiveLong\" \u003c\u003e 0]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testTwoLattices",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while preparing [select s.\"unit_sales\", p.\"brand_name\"\nfrom \"foodmart\".\"sales_fact_1997\" as s\njoin \"foodmart\".\"product\" as p using (\"product_id\")\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testSelectDistinct",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select distinct \"deptno\"\nfrom \"hr\".\"emps\"\n]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testAggregateMaterializationAggregateFuncs7",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"deptno\" + 1, sum(\"empid\") + 1 as s\nfrom \"emps\" where \"deptno\" \u003e 10 group by \"deptno\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.MaterializationTest",
        "testMethod": "testJoinAggregateMaterializationNoAggregateFuncs10",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select \"dependents\".\"empid\"\nfrom \"depts\"\njoin \"dependents\" on (\"depts\".\"name\" \u003d \"dependents\".\"name\")\njoin \"emps\" on (\"emps\".\"deptno\" \u003d \"depts\".\"deptno\")\nwhere \"depts\".\"deptno\" \u003e 10\ngroup by \"dependents\".\"empid\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testWinAggFirstValueEmptyWindow",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"deptno\",\n \"empid\",\n \"commission\",\n first_value(\"commission\") over (partition by \"deptno\" order by \"empid\" desc range between 1000 preceding and 999 preceding) as r\nfrom \"hr\".\"emps\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testHavingNot",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"store\".\"store_country\" as \"c0\", \"store\".\"store_state\" as \"c1\", \"store\".\"store_city\" as \"c2\", \"store\".\"store_name\" as \"c3\", \"store\".\"store_type\" as \"c4\", \"store\".\"store_manager\" as \"c5\", \"store\".\"store_sqft\" as \"c6\", \"store\".\"grocery_sqft\" as \"c7\", \"store\".\"frozen_sqft\" as \"c8\", \"store\".\"meat_sqft\" as \"c9\", \"store\".\"coffee_bar\" as \"c10\", \"store\".\"store_street_address\" as \"c11\" from \"store\" as \"store\" group by \"store\".\"store_country\", \"store\".\"store_state\", \"store\".\"store_city\", \"store\".\"store_name\", \"store\".\"store_type\", \"store\".\"store_manager\", \"store\".\"store_sqft\", \"store\".\"grocery_sqft\", \"store\".\"frozen_sqft\", \"store\".\"meat_sqft\", \"store\".\"coffee_bar\", \"store\".\"store_street_address\" having NOT((((sum(\"store\".\"store_sqft\") - sum(\"store\".\"grocery_sqft\")) \u003c 10000)) )  order by \"store\".\"store_country\" ASC NULLS LAST, \"store\".\"store_state\" ASC NULLS LAST, \"store\".\"store_city\" ASC NULLS LAST, \"store\".\"store_name\" ASC NULLS LAST]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.LatticeTest",
        "testMethod": "testDistinctCount",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [explain plan for select count(distinct \"quarter\") as c\nfrom \"foodmart\".\"sales_fact_1997\"\njoin \"foodmart\".\"time_by_day\" using (\"time_id\")\ngroup by \"the_year\"]",
        "isError": true
      },
      {
        "testClass": "org.apache.calcite.test.JdbcTest",
        "testMethod": "testIntersect",
        "failureName": "java.lang.RuntimeException",
        "detail": "exception while executing [select \"empid\", \"name\" from \"hr\".\"emps\" where \"deptno\"\u003d10\nintersect\nselect \"empid\", \"name\" from \"hr\".\"emps\" where \"empid\"\u003e\u003d150]",
        "isError": true
      }
    ]
  },
  "projectMetrics": {
    "numberModules": 19,
    "numberSourceFiles": 1492,
    "numberTestFiles": 190,
    "numberLibrariesFailingModule": 46,
    "numberLines": 0
  },
  "commits": {
    "buggyBuild": {
      "repoName": "apache/calcite",
      "branchName": "master",
      "sha": "9085b601081689b5b7f1e9f57deb20e2229910cb",
      "url": "http://github.com/apache/calcite/commit/9085b601081689b5b7f1e9f57deb20e2229910cb",
      "date": "Apr 17, 2018 3:37:58 PM"
    },
    "fixerBuild": {
      "repoName": "apache/calcite",
      "branchName": "master",
      "sha": "d73f24b6415969a722d8e4db49edf089d188c745",
      "url": "http://github.com/apache/calcite/commit/d73f24b6415969a722d8e4db49edf089d188c745",
      "date": "Apr 20, 2018 2:26:15 AM"
    }
  }
}