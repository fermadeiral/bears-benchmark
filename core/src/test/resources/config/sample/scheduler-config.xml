<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE aspectran PUBLIC "-//ASPECTRAN//DTD Aspectran Configuration 5.0//EN"
                           "http://aspectran.github.io/dtd/aspectran-5.dtd">

<aspectran>

    <settings>
        <setting name="transletNamePattern" value="*.job"/>
    </settings>

    <bean id="defaultScheduler1" class="com.aspectran.scheduler.support.QuartzSchedulerFactoryBean">
        <properties>
            <item type="properties" name="quartzProperties">
                <value name="org.quartz.scheduler.instanceName">AspectranQuartzScheduler-1</value>
                <value name="org.quartz.scheduler.rmi.export">false</value>
                <value name="org.quartz.scheduler.rmi.proxy">false</value>
                <value name="org.quartz.scheduler.wrapJobExecutionInUserTransaction">false</value>
                <value name="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</value>
                <value name="org.quartz.threadPool.threadCount">10</value>
                <value name="org.quartz.threadPool.threadPriority">5</value>
                <value name="org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread">true</value>
                <value name="org.quartz.jobStore.misfireThreshold">60001</value>
                <value name="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</value>
            </item>
        </properties>
    </bean>

    <bean id="schedulerFactory" class="org.quartz.impl.StdSchedulerFactory">
        <constructor>
            <arguments>
                <item type="properties">
                    <value name="org.quartz.scheduler.instanceName">AspectranQuartzScheduler-2</value>
                    <value name="org.quartz.scheduler.rmi.export">false</value>
                    <value name="org.quartz.scheduler.rmi.proxy">false</value>
                    <value name="org.quartz.scheduler.wrapJobExecutionInUserTransaction">false</value>
                    <value name="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</value>
                    <value name="org.quartz.threadPool.threadCount">10</value>
                    <value name="org.quartz.threadPool.threadPriority">5</value>
                    <value name="org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread">true</value>
                    <value name="org.quartz.jobStore.misfireThreshold">60000</value>
                    <value name="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</value>
                </item>
            </arguments>
        </constructor>
    </bean>

    <bean id="defaultScheduler2" factoryBean="schedulerFactory" factoryMethod="getScheduler"/>

    <schedule id="scheduler1">
        <scheduler bean="defaultScheduler1">
            <trigger type="simple">
                intervalInSeconds: 3
                repeatCount: 10
            </trigger>
        </scheduler>
        <job translet="job1"/>
    </schedule>

    <schedule id="scheduler2">
        <scheduler bean="defaultScheduler2">
            <trigger type="simple">
                startDelaySeconds: 2
                intervalInSeconds: 1
                repeatCount: 10
            </trigger>
        </scheduler>
        <job translet="job2"/>
    </schedule>

    <bean id="scheduleAction" class="com.aspectran.core.sample.schedule.ScheduleAction"/>

    <translet name="job1">
        <action bean="scheduleAction" method="delay">
            <arguments>
                <item valueType="long">1</item>
            </arguments>
        </action>
        <transform type="transform/text" contentType="text/plain">
            <template>(1) Hello, World!</template>
        </transform>
    </translet>

    <translet name="job2">
        <action bean="scheduleAction" method="delay">
            <arguments>
                <item valueType="long">2</item>
            </arguments>
        </action>
        <transform type="transform/text" contentType="text/plain">
            <template>(2) Hello, World!</template>
        </transform>
    </translet>

</aspectran>