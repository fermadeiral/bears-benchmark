<?xml version='1.0' encoding='UTF-8'?>
<wsdl:definitions
        xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
        xmlns:tns="http://ws.cws.javadog.io/"
        xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
        name="management" targetNamespace="http://ws.cws.javadog.io/">
    <wsdl:documentation>
      Service: Cryptographic WebStore Management Service
      Version: 1.1
      Owner: JavaDog.io
    </wsdl:documentation>
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.cws.javadog.io/" targetNamespace="http://ws.cws.javadog.io/" version="1.1">

  <xs:element name="fetchCircleRequest" type="tns:fetchCircleRequest"/>

  <xs:element name="fetchCircleResult" type="tns:fetchCircleResult"/>

  <xs:element name="fetchCircles" type="tns:fetchCircles"/>

  <xs:element name="fetchCirclesResponse" type="tns:fetchCirclesResponse"/>

  <xs:element name="fetchMemberRequest" type="tns:fetchMemberRequest"/>

  <xs:element name="fetchMemberResult" type="tns:fetchMemberResult"/>

  <xs:element name="fetchMembers" type="tns:fetchMembers"/>

  <xs:element name="fetchMembersResponse" type="tns:fetchMembersResponse"/>

  <xs:element name="fetchTrusteeRequest" type="tns:fetchTrusteeRequest"/>

  <xs:element name="fetchTrusteeResult" type="tns:fetchTrusteeResult"/>

  <xs:element name="fetchTrustees" type="tns:fetchTrustees"/>

  <xs:element name="fetchTrusteesResponse" type="tns:fetchTrusteesResponse"/>

  <xs:element name="masterKey" type="tns:masterKey"/>

  <xs:element name="masterKeyRequest" type="tns:masterKeyRequest"/>

  <xs:element name="masterKeyResponse" type="tns:masterKeyResponse"/>

  <xs:element name="masterKeyResult" type="tns:masterKeyResult"/>

  <xs:element name="processCircle" type="tns:processCircle"/>

  <xs:element name="processCircleRequest" type="tns:processCircleRequest"/>

  <xs:element name="processCircleResponse" type="tns:processCircleResponse"/>

  <xs:element name="processCircleResult" type="tns:processCircleResult"/>

  <xs:element name="processMember" type="tns:processMember"/>

  <xs:element name="processMemberRequest" type="tns:processMemberRequest"/>

  <xs:element name="processMemberResponse" type="tns:processMemberResponse"/>

  <xs:element name="processMemberResult" type="tns:processMemberResult"/>

  <xs:element name="processTrustee" type="tns:processTrustee"/>

  <xs:element name="processTrusteeRequest" type="tns:processTrusteeRequest"/>

  <xs:element name="processTrusteeResponse" type="tns:processTrusteeResponse"/>

  <xs:element name="processTrusteeResult" type="tns:processTrusteeResult"/>

  <xs:element name="sanitized" type="tns:sanitized"/>

  <xs:element name="sanitizedResponse" type="tns:sanitizedResponse"/>

  <xs:element name="sanityRequest" type="tns:sanityRequest"/>

  <xs:element name="sanityResult" type="tns:sanityResult"/>

  <xs:element name="settingRequest" type="tns:settingRequest"/>

  <xs:element name="settingResult" type="tns:settingResult"/>

  <xs:element name="settings" type="tns:settings"/>

  <xs:element name="settingsResponse" type="tns:settingsResponse"/>

  <xs:element name="version" type="tns:version"/>

  <xs:element name="versionResponse" type="tns:versionResponse"/>

  <xs:element name="versionResult" type="tns:versionResult"/>

  <xs:complexType name="masterKey">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:masterKeyRequest"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="masterKeyRequest">
    <xs:complexContent>
      <xs:extension base="tns:authentication">
        <xs:sequence>
          <xs:element name="secret" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="authentication">
    <xs:complexContent>
      <xs:extension base="tns:verifiable">
        <xs:sequence>
          <xs:element name="accountName" type="xs:string"/>
          <xs:element name="credential" type="xs:base64Binary"/>
          <xs:element name="credentialType" type="tns:credentialType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType abstract="true" name="verifiable">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="masterKeyResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:masterKeyResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="masterKeyResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="cwsResult">
    <xs:sequence>
      <xs:element name="returnCode" type="xs:int"/>
      <xs:element name="returnMessage" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sanitized">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:sanityRequest"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="sanityRequest">
    <xs:complexContent>
      <xs:extension base="tns:authentication">
        <xs:sequence>
          <xs:element minOccurs="0" name="circleId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="since" type="xs:dateTime"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sanitizedResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:sanityResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="sanityResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="sanities" type="tns:sanity"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="sanity">
    <xs:sequence>
      <xs:element minOccurs="0" name="dataId" type="xs:string"/>
      <xs:element minOccurs="0" name="changed" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fetchCircles">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:fetchCircleRequest"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="fetchCircleRequest">
    <xs:complexContent>
      <xs:extension base="tns:authentication">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fetchCirclesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:fetchCircleResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="fetchCircleResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="circles" type="tns:circle"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="circle">
    <xs:sequence>
      <xs:element name="circleId" type="xs:string"/>
      <xs:element name="circleName" type="xs:string"/>
      <xs:element minOccurs="0" name="circleKey" nillable="true" type="xs:string"/>
      <xs:element name="added" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="processMember">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:processMemberRequest"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="processMemberRequest">
    <xs:complexContent>
      <xs:extension base="tns:authentication">
        <xs:sequence>
          <xs:element name="action" type="tns:action"/>
          <xs:element minOccurs="0" name="memberId" nillable="true" type="xs:string"/>
          <xs:element name="publicKey" type="xs:string"/>
          <xs:element minOccurs="0" name="newAccountName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="newCredential" nillable="true" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="processMemberResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:processMemberResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="processMemberResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence>
          <xs:element name="memberId" type="xs:string"/>
          <xs:element name="signature" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="settings">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:settingRequest"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="settingRequest">
    <xs:complexContent>
      <xs:extension base="tns:authentication">
        <xs:sequence>
          <xs:element name="settings">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element minOccurs="0" name="key" type="xs:string"/>
                      <xs:element minOccurs="0" name="value" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="settingsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:settingResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="settingResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence>
          <xs:element name="settings">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element minOccurs="0" name="key" type="xs:string"/>
                      <xs:element minOccurs="0" name="value" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="processCircle">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:processCircleRequest"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="processCircleRequest">
    <xs:complexContent>
      <xs:extension base="tns:authentication">
        <xs:sequence>
          <xs:element name="action" type="tns:action"/>
          <xs:element minOccurs="0" name="circleId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="circleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="memberId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="circleKey" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="processCircleResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:processCircleResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="processCircleResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence>
          <xs:element name="circleId" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fetchMembers">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:fetchMemberRequest"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="fetchMemberRequest">
    <xs:complexContent>
      <xs:extension base="tns:authentication">
        <xs:sequence>
          <xs:element minOccurs="0" name="memberId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fetchMembersResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:fetchMemberResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="fetchMemberResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="members" type="tns:member"/>
          <xs:element maxOccurs="unbounded" name="circles" type="tns:circle"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="member">
    <xs:sequence>
      <xs:element name="memberId" type="xs:string"/>
      <xs:element name="accountName" type="xs:string"/>
      <xs:element name="publicKey" type="xs:string"/>
      <xs:element name="added" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="version">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="versionResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:versionResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="versionResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence>
          <xs:element name="version" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fetchTrustees">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:fetchTrusteeRequest"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="fetchTrusteeRequest">
    <xs:complexContent>
      <xs:extension base="tns:authentication">
        <xs:sequence>
          <xs:element minOccurs="0" name="circleId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fetchTrusteesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:fetchTrusteeResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="fetchTrusteeResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="trustees" type="tns:trustee"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="trustee">
    <xs:sequence>
      <xs:element minOccurs="0" name="memberId" type="xs:string"/>
      <xs:element name="publicKey" type="xs:string"/>
      <xs:element minOccurs="0" name="circleId" type="xs:string"/>
      <xs:element minOccurs="0" name="trustLevel" type="tns:trustLevel"/>
      <xs:element minOccurs="0" name="changed" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="added" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="processTrustee">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:processTrusteeRequest"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="processTrusteeRequest">
    <xs:complexContent>
      <xs:extension base="tns:authentication">
        <xs:sequence>
          <xs:element name="action" type="tns:action"/>
          <xs:element minOccurs="0" name="circleId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="memberId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="trustLevel" nillable="true" type="tns:trustLevel"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="processTrusteeResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="response" type="tns:processTrusteeResult"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType final="extension restriction" name="processTrusteeResult">
    <xs:complexContent>
      <xs:extension base="tns:cwsResult">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="credentialType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PASSPHRASE"/>
      <xs:enumeration value="SESSION"/>
      <xs:enumeration value="SIGNATURE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="action">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PROCESS"/>
      <xs:enumeration value="CREATE"/>
      <xs:enumeration value="UPDATE"/>
      <xs:enumeration value="INVITE"/>
      <xs:enumeration value="LOGIN"/>
      <xs:enumeration value="LOGOUT"/>
      <xs:enumeration value="DELETE"/>
      <xs:enumeration value="ADD"/>
      <xs:enumeration value="COPY"/>
      <xs:enumeration value="MOVE"/>
      <xs:enumeration value="ALTER"/>
      <xs:enumeration value="INVALIDATE"/>
      <xs:enumeration value="REMOVE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="trustLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALL"/>
      <xs:enumeration value="READ"/>
      <xs:enumeration value="WRITE"/>
      <xs:enumeration value="ADMIN"/>
      <xs:enumeration value="SYSOP"/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
  </wsdl:types>
  <wsdl:message name="masterKey">
    <wsdl:part element="tns:masterKey" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sanitized">
    <wsdl:part element="tns:sanitized" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="processCircleResponse">
    <wsdl:part element="tns:processCircleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="masterKeyResponse">
    <wsdl:part element="tns:masterKeyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="settings">
    <wsdl:part element="tns:settings" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="version">
    <wsdl:part element="tns:version" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sanitizedResponse">
    <wsdl:part element="tns:sanitizedResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchTrustees">
    <wsdl:part element="tns:fetchTrustees" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchTrusteesResponse">
    <wsdl:part element="tns:fetchTrusteesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchMembersResponse">
    <wsdl:part element="tns:fetchMembersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMemberResponse">
    <wsdl:part element="tns:processMemberResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchCircles">
    <wsdl:part element="tns:fetchCircles" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="settingsResponse">
    <wsdl:part element="tns:settingsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="processMember">
    <wsdl:part element="tns:processMember" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="versionResponse">
    <wsdl:part element="tns:versionResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchCirclesResponse">
    <wsdl:part element="tns:fetchCirclesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="processCircle">
    <wsdl:part element="tns:processCircle" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchMembers">
    <wsdl:part element="tns:fetchMembers" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="processTrusteeResponse">
    <wsdl:part element="tns:processTrusteeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="processTrustee">
    <wsdl:part element="tns:processTrustee" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="management">
    <wsdl:documentation>The Management Service is a part the CWS, is part of the
    CWS, offering the functionality to administrate a CWS system, such as the
    Circles, Accounts, Trustees and Settings.</wsdl:documentation>
    <wsdl:operation name="masterKey">
      <wsdl:input message="tns:masterKey" name="masterKey">
    </wsdl:input>
      <wsdl:output message="tns:masterKeyResponse" name="masterKeyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sanitized">
      <wsdl:input message="tns:sanitized" name="sanitized">
    </wsdl:input>
      <wsdl:output message="tns:sanitizedResponse" name="sanitizedResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchCircles">
      <wsdl:input message="tns:fetchCircles" name="fetchCircles">
    </wsdl:input>
      <wsdl:output message="tns:fetchCirclesResponse" name="fetchCirclesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="processMember">
      <wsdl:input message="tns:processMember" name="processMember">
    </wsdl:input>
      <wsdl:output message="tns:processMemberResponse" name="processMemberResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="settings">
      <wsdl:input message="tns:settings" name="settings">
    </wsdl:input>
      <wsdl:output message="tns:settingsResponse" name="settingsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="processCircle">
      <wsdl:input message="tns:processCircle" name="processCircle">
    </wsdl:input>
      <wsdl:output message="tns:processCircleResponse" name="processCircleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchMembers">
      <wsdl:input message="tns:fetchMembers" name="fetchMembers">
    </wsdl:input>
      <wsdl:output message="tns:fetchMembersResponse" name="fetchMembersResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="version">
      <wsdl:input message="tns:version" name="version">
    </wsdl:input>
      <wsdl:output message="tns:versionResponse" name="versionResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchTrustees">
      <wsdl:input message="tns:fetchTrustees" name="fetchTrustees">
    </wsdl:input>
      <wsdl:output message="tns:fetchTrusteesResponse" name="fetchTrusteesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="processTrustee">
      <wsdl:input message="tns:processTrustee" name="processTrustee">
    </wsdl:input>
      <wsdl:output message="tns:processTrusteeResponse" name="processTrusteeResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="managementSoapBinding" type="tns:management">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="masterKey">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="masterKey">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="masterKeyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sanitized">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sanitized">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sanitizedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchCircles">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchCircles">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchCirclesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="processMember">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="processMember">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="processMemberResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="settings">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="settings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="settingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="processCircle">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="processCircle">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="processCircleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchMembers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchMembers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchMembersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="version">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="version">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="versionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchTrustees">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchTrustees">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchTrusteesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="processTrustee">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="processTrustee">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="processTrusteeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="management">
    <wsdl:port binding="tns:managementSoapBinding" name="management">
      <soap:address location="http://localhost:8080/cws/management"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
