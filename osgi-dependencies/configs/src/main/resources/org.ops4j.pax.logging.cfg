#
# AET
#
# Copyright (C) 2013 Cognifide Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Common pattern layout for appenders
log4j2.pattern = %d{ISO8601} | %-5p | %-16t | %-32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n

# Root logger
log4j2.rootLogger.level = INFO
# uncomment to use asynchronous loggers, which require mvn:com.lmax/disruptor/3.3.2 library
#log4j2.rootLogger.type = asyncRoot
#log4j2.rootLogger.includeLocation = false
log4j2.rootLogger.appenderRef.RollingFile.ref = RollingFile
log4j2.rootLogger.appenderRef.PaxOsgi.ref = PaxOsgi
log4j2.rootLogger.appenderRef.Console.ref = Console
log4j2.rootLogger.appenderRef.Console.filter.threshold.type = ThresholdFilter
log4j2.rootLogger.appenderRef.Console.filter.threshold.level = ${karaf.log.console:-OFF}

# Loggers configuration

# Spifly logger
log4j2.logger.spifly.name = org.apache.aries.spifly
log4j2.logger.spifly.level = WARN

# Security audit logger
log4j2.logger.audit.name = org.apache.karaf.jaas.modules.audit
log4j2.logger.audit.level = INFO
log4j2.logger.audit.additivity = false
log4j2.logger.audit.appenderRef.RollingFile.ref = AuditRollingFile

### AET Loggers

# cleaner logger
log4j2.logger.cleaner.name = com.cognifide.aet.cleaner
log4j2.logger.cleaner.level = DEBUG
log4j2.logger.cleaner.additivity = false
log4j2.logger.cleaner.appenderRef.Cleaner.ref = Cleaner

# runner logger
log4j2.logger.runner.name = com.cognifide.aet.runner
log4j2.logger.runner.level = DEBUG
log4j2.logger.runner.additivity = false
log4j2.logger.runner.appenderRef.Runner.ref = Runner


# worker logger
log4j2.logger.worker1.name = com.cognifide.aet.worker
log4j2.logger.worker1.level = DEBUG
log4j2.logger.worker1.additivity = false
log4j2.logger.worker1.appenderRef.Worker.ref = Worker

log4j2.logger.worker2.name = com.cognifide.aet.job
log4j2.logger.worker2.level = DEBUG
log4j2.logger.worker2.additivity = false
log4j2.logger.worker2.appenderRef.Worker.ref = Worker

log4j2.logger.worker3.name = com.cognifide.aet.report
log4j2.logger.worker3.level = DEBUG
log4j2.logger.worker3.additivity = false
log4j2.logger.worker3.appenderRef.Worker.ref = Worker

log4j2.logger.worker4.name = com.cognifide.aet.proxy
log4j2.logger.worker4.level = DEBUG
log4j2.logger.worker4.additivity = false
log4j2.logger.worker4.appenderRef.Worker.ref = Worker

# Appenders configuration

# Console appender not used by default (see log4j2.rootLogger.appenderRefs)
log4j2.appender.console.type = Console
log4j2.appender.console.name = Console
log4j2.appender.console.layout.type = PatternLayout
log4j2.appender.console.layout.pattern = ${log4j2.pattern}

# Rolling file appender
log4j2.appender.rolling.type = RollingRandomAccessFile
log4j2.appender.rolling.name = RollingFile
log4j2.appender.rolling.fileName = ${karaf.data}/log/karaf.log
log4j2.appender.rolling.filePattern = ${karaf.data}/log/karaf.log.%i
# uncomment to not force a disk flush
#log4j2.appender.rolling.immediateFlush = false
log4j2.appender.rolling.append = true
log4j2.appender.rolling.layout.type = PatternLayout
log4j2.appender.rolling.layout.pattern = ${log4j2.pattern}
log4j2.appender.rolling.policies.type = Policies
log4j2.appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
log4j2.appender.rolling.policies.size.size = 16MB

# Audit file appender
log4j2.appender.audit.type = RollingRandomAccessFile
log4j2.appender.audit.name = AuditRollingFile
log4j2.appender.audit.fileName = ${karaf.data}/security/audit.log
log4j2.appender.audit.filePattern = ${karaf.data}/security/audit.log.%i
log4j2.appender.audit.append = true
log4j2.appender.audit.layout.type = PatternLayout
log4j2.appender.audit.layout.pattern = ${log4j2.pattern}
log4j2.appender.audit.policies.type = Policies
log4j2.appender.audit.policies.size.type = SizeBasedTriggeringPolicy
log4j2.appender.audit.policies.size.size = 8MB

# OSGi appender
log4j2.appender.osgi.type = PaxOsgi
log4j2.appender.osgi.name = PaxOsgi
log4j2.appender.osgi.filter = *

# help with identification of maven-related problems with pax-url-aether
#log4j2.logger.aether.name = shaded.org.eclipse.aether
#log4j2.logger.aether.level = TRACE
#log4j2.logger.http-headers.name = shaded.org.apache.http.headers
#log4j2.logger.http-headers.level = DEBUG
#log4j2.logger.maven.name = org.ops4j.pax.url.mvn
#log4j2.logger.maven.level = TRACE

### AET Appenders

# cleaner file appender
log4j2.appender.cleaner.type = RollingRandomAccessFile
log4j2.appender.cleaner.name = Cleaner
log4j2.appender.cleaner.layout.type = PatternLayout
log4j2.appender.cleaner.layout.pattern = %d{ISO8601} | %-5.5p | %-24.24X{bundle.name} | %-32.32c{1} %4L | %m%n
log4j2.appender.cleaner.fileName = ${karaf.data}/log/cleaner.log
log4j2.appender.cleaner.filePattern = ${karaf.data}/log/cleaner.log.%i
log4j2.appender.cleaner.append = true
log4j2.appender.cleaner.policies.type = Policies
log4j2.appender.cleaner.policies.size.type = SizeBasedTriggeringPolicy
log4j2.appender.cleaner.policies.size.size = 8MB
log4j2.appender.cleaner.strategy.type = DefaultRolloverStrategy
log4j2.appender.cleaner.strategy.max = 5

# runner file appender
log4j2.appender.runner.type = RollingRandomAccessFile
log4j2.appender.runner.name = Runner
log4j2.appender.runner.layout.type = PatternLayout
log4j2.appender.runner.layout.pattern = %d{ISO8601} | %-5.5p | %-24.24X{bundle.name} | %-32.32c{1} %4L | %m%n
log4j2.appender.runner.fileName = ${karaf.data}/log/runner.log
log4j2.appender.runner.filePattern = ${karaf.data}/log/runner.log.%i
log4j2.appender.runner.append = true
log4j2.appender.runner.policies.type = Policies
log4j2.appender.runner.policies.size.type = SizeBasedTriggeringPolicy
log4j2.appender.runner.policies.size.size = 8MB
log4j2.appender.runner.strategy.type = DefaultRolloverStrategy
log4j2.appender.runner.strategy.max = 5

# worker file appender
log4j2.appender.worker.type = RollingRandomAccessFile
log4j2.appender.worker.name = Worker
log4j2.appender.worker.layout.type = PatternLayout
log4j2.appender.worker.layout.pattern = %d{ISO8601} | %-5.5p | %-24.24X{bundle.name} | %-32.32c{1} %4L | %m%n
log4j2.appender.worker.fileName = ${karaf.data}/log/worker.log
log4j2.appender.worker.filePattern = ${karaf.data}/log/worker.log.%i
log4j2.appender.worker.append = true
log4j2.appender.worker.policies.type = Policies
log4j2.appender.worker.policies.size.type = SizeBasedTriggeringPolicy
log4j2.appender.worker.policies.size.size = 8MB
log4j2.appender.worker.strategy.type = DefaultRolloverStrategy
log4j2.appender.worker.strategy.max = 5
