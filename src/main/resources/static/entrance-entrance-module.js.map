{"version":3,"sources":["webpack:///./src/app/main/entrance/entrance.component.css","webpack:///./src/app/main/entrance/entrance.component.html","webpack:///./src/app/main/entrance/entrance.component.ts","webpack:///./src/app/main/entrance/entrance.module.ts","webpack:///./src/app/main/entrance/entrance.routing.ts","webpack:///./src/app/main/entrance/entrance.service.ts","webpack:///./src/app/main/entrance/success/success.component.css","webpack:///./src/app/main/entrance/success/success.component.html","webpack:///./src/app/main/entrance/success/success.component.ts","webpack:///./src/app/main/services/shed.service.ts"],"names":[],"mappings":"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","file":"entrance-entrance-module.js","sourcesContent":["module.exports = \".date, .state, .shed, .taxIdentifier, .policeInvestigation, .eventBulletin {\\n    width: 20%;\\n}\\n\\n.name, .part, .number {\\n    width: 50%;\\n}\\n\\nmat-radio-button {\\n    margin: 0 10px;\\n}\"","module.exports = \"<form [formGroup]=\\\"form\\\" fxLayout=\\\"column\\\">\\n  <mat-expansion-panel [expanded]=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Dados da Apreensão\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <div>\\n      <mat-form-field class=\\\"date\\\">\\n        <input matInput [matDatepicker]=\\\"picker\\\" [max]=\\\"maxDate\\\" placeholder=\\\"Data da Apreensão\\\" formControlName=\\\"date\\\" required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field class=\\\"part\\\">\\n        <mat-select placeholder=\\\"Origem da Apreensão\\\" formControlName=\\\"part\\\" required>\\n          <mat-option *ngFor=\\\"let part of parts\\\" [value]=\\\"part.initials\\\">\\n            {{ part.initials }} - {{ part.description }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field class=\\\"policeInvestigation\\\">\\n        <input matInput placeholder=\\\"Número do Inquérito Policial\\\" formControlName=\\\"policeInvestigation\\\" uppercase/>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field class=\\\"eventBulletin\\\">\\n        <input matInput placeholder=\\\"Número do Boletim de Ocorrência\\\" formControlName=\\\"eventBulletin\\\" uppercase/>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field class=\\\"taxIdentifier\\\">\\n        <input matInput placeholder=\\\"CPF do Apreendedor\\\" [textMask]=\\\"{mask: taxIdentifierMask}\\\" formControlName=\\\"taxIdentifier\\\" required/>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field class=\\\"name\\\">\\n        <input matInput placeholder=\\\"Nome do Apreendedor\\\" formControlName=\\\"name\\\" required uppercase/>\\n      </mat-form-field>\\n    </div>\\n  </mat-expansion-panel>\\n  <br />\\n  <mat-expansion-panel [expanded]=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Dados do Veículo\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Renavam\\\" formControlName=\\\"theyRenamed\\\" required>\\n    </mat-form-field>\\n    <div>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"CPF/CNPJ Proprietário\\\" [textMask]=\\\"{mask: taxIdentifierMask}\\\" formControlName=\\\"ownerTaxIdentifier\\\"\\n          required>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field class=\\\"name\\\">\\n        <input matInput placeholder=\\\"Nome do Proprietário\\\" formControlName=\\\"ownerName\\\" required uppercase>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Marca\\\" formControlName=\\\"brand\\\" required uppercase>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Modelo\\\" formControlName=\\\"model\\\" required uppercase>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Categoria\\\" formControlName=\\\"category\\\" required>\\n          <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n            {{ category.description }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Cor\\\" formControlName=\\\"color\\\" required uppercase>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Combustível\\\" formControlName=\\\"fuel\\\" required>\\n          <mat-option *ngFor=\\\"let fuel of fuels\\\" [value]=\\\"fuel.description\\\">\\n            {{ fuel.description }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Ano de Fabricação\\\" [textMask]=\\\"{mask: yearMask}\\\" formControlName=\\\"factoryYear\\\" required>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Ano do Modelo\\\" [textMask]=\\\"{mask: yearMask}\\\" formControlName=\\\"modelYear\\\" required>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Placa Ostentada\\\" [textMask]=\\\"{mask: plateMask}\\\" formControlName=\\\"sportingPlate\\\" required uppercase>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Placa Original\\\" [textMask]=\\\"{mask: plateMask}\\\" formControlName=\\\"originalPlate\\\" uppercase>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field class=\\\"state\\\">\\n        <mat-select placeholder=\\\"Estado do Chassis\\\" formControlName=\\\"chassisState\\\" required>\\n          <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.description\\\">\\n            {{ state.description }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field class=\\\"number\\\">\\n        <input matInput placeholder=\\\"Número do Chassis\\\" formControlName=\\\"chassis\\\" uppercase>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field class=\\\"state\\\">\\n        <mat-select placeholder=\\\"Estado do Motor\\\" formControlName=\\\"motorState\\\" required>\\n          <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.description\\\">\\n            {{ state.description }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field class=\\\"number\\\">\\n        <input matInput placeholder=\\\"Número do Motor\\\" formControlName=\\\"motor\\\" uppercase>\\n      </mat-form-field>\\n    </div>\\n  </mat-expansion-panel>\\n  <br />\\n  <mat-expansion-panel [expanded]=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Dados da Polícia\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <div fxLayout=\\\"row\\\">\\n      <label>Segurado: </label>\\n      <mat-radio-group formControlName=\\\"insured\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <br />\\n    <div fxLayout=\\\"row\\\">\\n      <label>Financiado: </label>\\n      <mat-radio-group formControlName=\\\"financed\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <br />\\n    <div fxLayout=\\\"row\\\">\\n      <label>Roubado/Furtado: </label>\\n      <mat-radio-group formControlName=\\\"stolen\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <br />\\n    <div fxLayout=\\\"row\\\">\\n      <label>Envolvido com Tráfico de Drogas: </label>\\n      <mat-radio-group formControlName=\\\"drugTrafficking\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <br />\\n    <div fxLayout=\\\"row\\\">\\n      <label>Envolvido com Lavagem de Dinheiro: </label>\\n      <mat-radio-group formControlName=\\\"moneyLaundry\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <br />\\n    <div fxLayout=\\\"row\\\">\\n      <label>Periciado: </label>\\n      <mat-radio-group formControlName=\\\"perquisite\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <br />\\n    <div fxLayout=\\\"row\\\">\\n      <label>Pericia Papiloscópica: </label>\\n      <mat-radio-group formControlName=\\\"papillaryExpertise\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <br />\\n    <div fxLayout=\\\"row\\\">\\n      <label>Proprietário Intimado: </label>\\n      <mat-radio-group formControlName=\\\"ownerIntimate\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <br />\\n    <div fxLayout=\\\"row\\\">\\n      <label>Alienação Autorizada: </label>\\n      <mat-radio-group formControlName=\\\"authorizedAlienation\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n    <br />\\n    <div fxLayout=\\\"row\\\">\\n      <label>Débitos: </label>\\n      <mat-radio-group formControlName=\\\"debits\\\" required>\\n        <mat-radio-button [value]=\\\"trueValue\\\">Sim</mat-radio-button>\\n        <mat-radio-button [value]=\\\"falseValue\\\">Não</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n  </mat-expansion-panel>\\n  <br />\\n  <mat-expansion-panel [expanded]=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Dados do Pátio\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <mat-form-field class=\\\"shed\\\">\\n      <mat-select placeholder=\\\"Barração\\\" formControlName=\\\"shed\\\" required>\\n        <mat-option *ngFor=\\\"let shed of sheds\\\" [value]=\\\"shed.initials\\\">\\n          {{ shed.description }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div>\\n      <mat-form-field class=\\\"amount\\\">\\n        <input matInput placeholder=\\\"Fileira\\\" type=\\\"number\\\" formControlName=\\\"row\\\" required uppercase/>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field class=\\\"amount\\\">\\n        <input matInput placeholder=\\\"Coluna\\\" type=\\\"number\\\" formControlName=\\\"column\\\" required uppercase/>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field class=\\\"amount\\\">\\n        <input matInput placeholder=\\\"Andar\\\" type=\\\"number\\\" formControlName=\\\"floor\\\" required uppercase/>\\n      </mat-form-field>\\n    </div>\\n  </mat-expansion-panel>\\n  <br />\\n  <div fxLayoutAlign=\\\"center\\\">\\n    <button mat-raised-button (click)=\\\"form.reset()\\\" color=\\\"primary\\\">Limpar</button>\\n    <span fxFlex=\\\"2\\\"></span>\\n    <button mat-raised-button (click)=\\\"save()\\\" [disabled]=\\\"!form.valid\\\" color=\\\"primary\\\">Salvar</button>\\n  </div>\\n  <br />\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { EntranceService } from './entrance.service';\nimport { Router } from '@angular/router';\nimport { ShedService } from '../services/shed.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SuccessComponent } from './success/success.component';\n\n@Component({\n  selector: 'app-entrance',\n  templateUrl: './entrance.component.html',\n  styleUrls: ['./entrance.component.css']\n})\nexport class EntranceComponent implements OnInit {\n\n  form: FormGroup;\n\n  public maxDate = new Date();\n  public trueValue = true;\n  public falseValue = false;\n  public taxIdentifierMask = [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\n  public yearMask = [/\\d/, /\\d/, /\\d/, /\\d/];\n  public plateMask = [/[A-Z]/, /[A-Z]/, /[A-Z]/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n  public parts = [\n    { initials: 'PC', description: 'POLÍCIA CIVIL' },\n    { initials: 'PM', description: 'POLÍCIA MILITAR' }\n  ];\n  public sheds: Array<Shed>;\n  public categories = [\n    { id: '1', description: 'OFICIAL' },\n    { id: '2', description: 'DIPLOMÁTICO' },\n    { id: '3', description: 'PARTICULAR' },\n    { id: '4', description: 'ALUGUEL' },\n    { id: '5', description: 'APRENDIZAGEM' }\n  ];\n  public states = [\n    { description: 'ORIGINAL' },\n    { description: 'ADULTERADO' },\n    { description: 'SUPRIMIDO' }\n  ];\n  public fuels = [\n    { description: 'ÁLCOOL' },\n    { description: 'GASOLINA' },\n    { description: 'ÁLCOOL/GASOLINA' },\n    { description: 'DIESEL' },\n    { description: 'GNV' },\n    { description: 'OUTRO' }\n  ];\n\n  constructor(private _formBuilder: FormBuilder,\n              private _successDialog: MatDialog,\n              private _entranceService: EntranceService,\n              private _shedService: ShedService) { }\n\n  ngOnInit() {\n    var date = new Date();\n    var option = false;\n    this.form = this._formBuilder.group({\n      part: ['', Validators.required],\n      date: [date, Validators.required],\n      policeInvestigation: '',\n      eventBulletin: '',\n      taxIdentifier: ['', Validators.required],\n      name: ['', Validators.required],\n      theyRenamed: ['', Validators.required],\n      ownerName: ['', Validators.required],\n      ownerTaxIdentifier: ['', Validators.required],\n      brand: ['', Validators.required],\n      model: ['', Validators.required],\n      category: ['', Validators.required],\n      color: ['', Validators.required],\n      fuel: ['', Validators.required],\n      factoryYear: ['', Validators.required],\n      modelYear: ['', Validators.required],\n      sportingPlate: ['', Validators.required],\n      originalPlate: '',\n      chassisState: ['', Validators.required],\n      chassis: '',\n      motorState: ['', Validators.required],\n      motor: '',\n      insured: [option, Validators.required],\n      financed: [option, Validators.required],\n      stolen: [option, Validators.required],\n      drugTrafficking: [option, Validators.required],\n      moneyLaundry: [option, Validators.required],\n      perquisite: [option, Validators.required],\n      papillaryExpertise: [option, Validators.required],\n      ownerIntimate: [option, Validators.required],\n      authorizedAlienation: [option, Validators.required],\n      debits: [option, Validators.required],\n      shed: ['', Validators.required],\n      row: ['', Validators.required],\n      column: ['', Validators.required],\n      floor: ['', Validators.required]\n    });\n    this.findSheds();\n  }\n\n  save() {\n    this.form.value.date = moment(this.form.value.date).format('YYYY-MM-DD');\n    this.form.value.taxIdentifier = this.form.value.taxIdentifier.replace(/\\D+/g, '');\n    \n    this.form.value.ownerTaxIdentifier = this.form.value.ownerTaxIdentifier.replace(/\\D+/g, '');\n    this.form.value.sportingPlate = this.form.value.sportingPlate.toUpperCase();\n    this.form.value.originalPlate = this.form.value.originalPlate.toUpperCase();\n\n    this._entranceService.save(this.form.value).subscribe(\n      suc=>{\n        this.openSuccessDialog(suc);\n      },\n      err=>{\n        console.log(err);\n        //this.error = err;\n      }\n    );\n  }\n\n  findSheds() {\n    this._shedService.findAll().subscribe(\n      suc => {\n        this.sheds = suc;\n      }\n    );\n  }\n\n  openSuccessDialog(protocol) {\n    this._successDialog.open(SuccessComponent, {\n      data: protocol\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EntranceComponent } from './entrance.component';\nimport { RouterModule } from '@angular/router';\nimport { EntranceRouting } from './entrance.routing';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatNativeDateModule } from '@angular/material';\nimport { MAT_DATE_LOCALE } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { UppercaseDirective } from '../../directives/uppercase.directive';\nimport { SuccessComponent } from './success/success.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ErrorModule } from '../../error/error.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    EntranceRouting,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TextMaskModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,    \n    MatExpansionModule,\n    MatDialogModule,\n    ErrorModule\n  ],\n  providers: [\n    FormBuilder,\n    {provide: MAT_DATE_LOCALE, useValue: 'pt-BR'}\n  ],\n  entryComponents: [\n    SuccessComponent\n  ],\n  declarations: [\n    UppercaseDirective,\n    EntranceComponent,\n    SuccessComponent\n  ]\n})\nexport class EntranceModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EntranceComponent } from './entrance.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n        { \n            path: '', \n            component: EntranceComponent  \n        }\n    ])\n  ]\n})\nexport class EntranceRouting { }","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntranceService {\n\n  private url = environment.url + \"/api/v1/entrance\";\n\n  constructor(private _httpCliente: HttpClient) { }\n\n  public save(data) {\n    const HEADERS = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._httpCliente.post<string>(this.url,\n      data,\n      {\n        headers: HEADERS\n      }\n    );\n  }\n\n}\n","module.exports = \".mat-raised-button {\\n    width: 145px;\\n}\"","module.exports = \"<h2 mat-dialog-title>Protocolo {{ data.protocol }} gerado com sucesso.</h2>\\n<div>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"printProtocol(data.protocol)\\\">Imprimir Protocolo</button>\\n  <span fxFlex=\\\"2\\\"></span>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"printSeal(data.protocol)\\\">Imprimir Lacres</button>\\n  <span fxFlex=\\\"2\\\"></span>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"search()\\\" [mat-dialog-close]=\\\"true\\\">Consultar</button>\\n</div>\"","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PrintService } from '../../services/print.service';\nimport { saveAs } from 'file-saver';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n              private _router: Router,\n              private _printService: PrintService) { }\n\n  ngOnInit() {\n  }\n\n  printProtocol(protocol) {\n    this._printService.printProcol(protocol).subscribe(\n      suc => {\n        saveAs(suc.body, 'protocolo.pdf')\n      }\n    );\n  }\n\n  printSeal(protocol) {\n    this._printService.printSeal(protocol).subscribe(\n      suc => {\n        saveAs(suc.body, 'lacre.pdf')\n      }\n    );\n  }\n\n  search() {\n    this._router.navigate([\"/main/search\"]);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShedService {\n\n  private url = environment.url + \"/api/v1/shed\";\n\n  constructor(private _httpClient: HttpClient, private _router: Router) { }\n\n  public findAll() {\n    const HEADERS = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._httpClient.get<Array<Shed>>(this.url,\n      {\n        headers: HEADERS\n      }\n    );\n  }\n  \n}\n"],"sourceRoot":""}