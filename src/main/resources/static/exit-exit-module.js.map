{"version":3,"sources":["webpack:///./src/app/main/exit/exit.component.css","webpack:///./src/app/main/exit/exit.component.html","webpack:///./src/app/main/exit/exit.component.ts","webpack:///./src/app/main/exit/exit.module.ts","webpack:///./src/app/main/exit/exit.routing.ts","webpack:///./src/app/main/exit/exit.service.ts","webpack:///./src/app/main/exit/success/success.component.css","webpack:///./src/app/main/exit/success/success.component.html","webpack:///./src/app/main/exit/success/success.component.ts"],"names":[],"mappings":"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","file":"exit-exit-module.js","sourcesContent":["module.exports = \".date, .taxIdentifier, .protocol {\\n    width: 20%;\\n}\\n\\n.name {\\n    width: 50%;\\n}\"","module.exports = \"<form [formGroup]=\\\"form\\\" fxLayout=\\\"column\\\">\\n  <mat-expansion-panel [expanded]=\\\"true\\\" hideToggle>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Dados da Saída\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <div>\\n      <mat-form-field class=\\\"protocol\\\">\\n        <input matInput formControlName=\\\"protocol\\\" placeholder=\\\"Protocolo\\\" required uppercase>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field class=\\\"date\\\">\\n        <input matInput [matDatepicker]=\\\"picker\\\" [max]=\\\"maxDate\\\" placeholder=\\\"Data da Saída\\\" formControlName=\\\"date\\\" required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-form-field class=\\\"taxIdentifier\\\">\\n        <input matInput placeholder=\\\"CPF do Retirador\\\" [textMask]=\\\"{mask: taxIdentifierMask}\\\" formControlName=\\\"taxIdentifier\\\" required/>\\n      </mat-form-field>\\n      <span fxFlex=\\\"2\\\"></span>\\n      <mat-form-field class=\\\"name\\\">\\n        <input matInput placeholder=\\\"Nome do Retirador\\\" formControlName=\\\"name\\\" required uppercase/>\\n      </mat-form-field>\\n    </div>\\n  </mat-expansion-panel>\\n  <br />\\n  <div fxLayoutAlign=\\\"center\\\">\\n    <button mat-raised-button (click)=\\\"form.reset()\\\" color=\\\"primary\\\">Limpar</button>\\n    <span fxFlex=\\\"2\\\"></span>\\n    <button mat-raised-button (click)=\\\"save()\\\" [disabled]=\\\"!form.valid\\\" color=\\\"primary\\\">Salvar</button>\\n  </div>\\n  <br />\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport * as moment from 'moment';\nimport { MatDialog } from '@angular/material';\nimport { SuccessComponent } from './success/success.component';\nimport { ExitService } from './exit.service';\n\n@Component({\n  selector: 'app-exit',\n  templateUrl: './exit.component.html',\n  styleUrls: ['./exit.component.css']\n})\nexport class ExitComponent implements OnInit {\n\n  protocol: string;\n  form: FormGroup;\n  taxIdentifierMask = [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\n  \n  constructor(private _activateRoute: ActivatedRoute,\n              private _formBuilder: FormBuilder,\n              private _successDialog: MatDialog,\n              private _exitService: ExitService) { }\n\n  ngOnInit() {\n    this._activateRoute.params.subscribe(params=>{\n      this.protocol = params['protocol'];\n    });\n    this.form = this._formBuilder.group({\n      protocol: [{value: this.protocol, disabled: true}, Validators.required],\n      date: ['', Validators.required],\n      taxIdentifier: ['', Validators.required],\n      name: ['', Validators.required]\n    });\n  }\n\n  save() {\n    this.form.value.date = moment(this.form.value.date).format('YYYY-MM-DD');\n    this.form.value.taxIdentifier = this.form.value.taxIdentifier.replace(/\\D+/g, '');\n    this.form.value.protocol = this.protocol;\n    console.log(this.form.value);\n    this._exitService.save(this.form.value).subscribe(\n      suc=>{\n        this.openSuccessDialog();\n      }\n    );\n  }\n\n  openSuccessDialog() {\n    this._successDialog.open(SuccessComponent, {\n      data: {\n        protocol: this.protocol\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExitComponent } from './exit.component';\nimport { RouterModule } from '@angular/router';\nimport { ExitRouting } from './exit.routing';\nimport { SuccessComponent } from './success/success.component';\nimport { UppercaseDirective } from '../../directives/uppercase.directive';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material';\nimport { MAT_DATE_LOCALE } from '@angular/material';\nimport { MatDatepickerModule } from '@angular/material';\nimport { MatDialogModule } from '@angular/material';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { ErrorComponent } from '../../error/error.component';\nimport { ErrorModule } from '../../error/error.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ExitRouting,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatDialogModule,\n    TextMaskModule,\n    ErrorModule\n  ],\n  providers: [\n    FormBuilder,\n    {provide: MAT_DATE_LOCALE, useValue: 'pt-BR'}\n  ],\n  entryComponents: [\n    SuccessComponent,\n    ErrorComponent\n  ],\n  declarations: [\n    UppercaseDirective,\n    ExitComponent,\n    SuccessComponent\n  ]\n})\nexport class ExitModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ExitComponent } from './exit.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n        { \n            path: ':protocol', \n            component: ExitComponent  \n        }\n    ])\n  ]\n})\nexport class ExitRouting { }","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExitService {\n\n  private url = environment.url + \"/api/v1/exit\";\n\n  constructor(private _httpCliente: HttpClient) { }\n\n  public save(data) {\n    const HEADERS = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._httpCliente.post<string>(this.url,\n      data,\n      {\n        headers: HEADERS\n      }\n    );\n  }\n  \n}\n","module.exports = \".mat-raised-button {\\n    width: 145px;\\n}\"","module.exports = \"<h2 mat-dialog-title>Protocolo {{ data.protocol }} atualizado com sucesso.</h2>\\n<div>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"printProtocol(data.protocol)\\\">Imprimir Protocolo</button>\\n  <span fxFlex=\\\"2\\\"></span>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"search()\\\" [mat-dialog-close]=\\\"true\\\">Consultar</button>\\n</div>\"","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PrintService } from '../../services/print.service';\nimport { saveAs } from 'file-saver';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n              private _router: Router,\n              private _printService: PrintService) { }\n\n  ngOnInit() {\n  }\n\n  printProtocol(protocol) {\n    this._printService.printProcol(protocol).subscribe(\n      suc => {\n        saveAs(suc.body, 'protocolo.pdf')\n      }\n    );\n  }\n\n  search() {\n    this._router.navigate([\"/main/search\"]);\n  }\n\n}\n"],"sourceRoot":""}