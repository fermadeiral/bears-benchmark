package org.projog.content_generated_at_runtime;
import org.projog.core.udp.compiler.*;
import org.projog.core.udp.interpreter.*;
import org.projog.core.udp.*;
import org.projog.core.term.*;
import org.projog.core.*;
import static org.projog.core.term.NumericTermComparator.NUMERIC_TERM_COMPARATOR;
// testCutSingleRuleSingleResult
public final class %CLASS_NAME% implements CompiledPredicate {
   private static final boolean initRule0() {
      if (NUMERIC_TERM_COMPARATOR.compare(INTEGER_1, INTEGER_2, c)!=-1) {
         return false;
      }
      if (NUMERIC_TERM_COMPARATOR.compare(INTEGER_2, INTEGER_1, c)!=1) {
         return false;
      }
      return true;
   }
   public %CLASS_NAME%(final KnowledgeBase _kb) {
     c = KnowledgeBaseUtils.getCalculatables(_kb);
   }
   public final boolean evaluate(final Term... args) {
      return staticEvaluate();
   }
   static final boolean staticEvaluate() {
      return initRule0();
   }
   public final boolean isRetryable() {
      return false;
   }
   public final boolean couldReevaluationSucceed() {
      return false;
   }
   public final void setKnowledgeBase(KnowledgeBase kb) {
      throw new RuntimeException();
   }
   public final Predicate getPredicate(final Term... termArgs) {
      return this;
   }
   private static final Term INTEGER_1 = new IntegerNumber(1L);
   private static final Term INTEGER_2 = new IntegerNumber(2L);
   private static Calculatables c;
}
