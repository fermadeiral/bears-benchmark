package org.projog.content_generated_at_runtime;
import org.projog.core.udp.compiler.*;
import org.projog.core.udp.interpreter.*;
import org.projog.core.udp.*;
import org.projog.core.term.*;
import org.projog.core.*;
import static org.projog.core.term.NumericTermComparator.NUMERIC_TERM_COMPARATOR;
// testMultipleRulesWithSingleImmutableArgument/2
public final class %CLASS_NAME% implements CompiledPredicate {
   private final boolean initRule0() {
      v0_X = a0;
      v0_RuleNo = a1;
      return true;
   }
   private final boolean retryRule0() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr0!=0) {
               v0_X = _1;
               v0_RuleNo = _2;
               _0.backtrack();
            } else {
               _0 = v0_X.getTerm();
            }
            if (inlinedCtr0==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v0_X});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v0_X});
               }
            }
            do {
               if (inlinedCtr0>2) {
                  inlinedCtr0 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v0_X});
                  }
                  return false;
               }
               if (_0.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr0++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v0_X});
                  }
                  break;
               } else {
                  _0.backtrack();
               }
            } while (true);
            _1 = v0_X;
            v0_X = v0_X.getTerm();
            _2 = v0_RuleNo;
            v0_RuleNo = v0_RuleNo.getTerm();
            if (!v0_RuleNo.unify(INTEGER_1)) {
               if (v0_RuleNo!=null) v0_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v0_RuleNo!=null) v0_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule1() {
      final Term v1_X;
      v1_RuleNo = a1;
      return true;
   }
   private final boolean retryRule1() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr1!=0) {
               v1_RuleNo = _3;
            } else {
            }
            if (inlinedCtr1==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM});
               }
            }
            do {
               if (inlinedCtr1>2) {
                  inlinedCtr1 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM});
                  }
                  return false;
               }
               if (ATOM.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr1++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM});
                  }
                  break;
               }
            } while (true);
            _3 = v1_RuleNo;
            v1_RuleNo = v1_RuleNo.getTerm();
            case 1:
            if (inlinedCtr2!=0) {
               v1_RuleNo = _4;
            } else {
            }
            if (inlinedCtr2==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_0});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_0});
               }
            }
            do {
               if (inlinedCtr2>2) {
                  inlinedCtr2 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_0});
                  }
                  conjunctionCtr = 0;
                  break mainloop;
               }
               if (ATOM_0.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr2++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_0});
                  }
                  break;
               }
            } while (true);
            _4 = v1_RuleNo;
            v1_RuleNo = v1_RuleNo.getTerm();
            conjunctionCtr = 1;
            case 2:
            if (inlinedCtr3!=0) {
               v1_RuleNo = _5;
            } else {
            }
            if (inlinedCtr3==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_1});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_1});
               }
            }
            do {
               if (inlinedCtr3>2) {
                  inlinedCtr3 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_1});
                  }
                  conjunctionCtr = 1;
                  break mainloop;
               }
               if (ATOM_1.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr3++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_1});
                  }
                  break;
               }
            } while (true);
            _5 = v1_RuleNo;
            v1_RuleNo = v1_RuleNo.getTerm();
            conjunctionCtr = 2;
            if (!v1_RuleNo.unify(INTEGER_2)) {
               if (v1_RuleNo!=null) v1_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 3;
            return true;
            case 3:
            conjunctionCtr = 2;
            if (v1_RuleNo!=null) v1_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule2() {
      final Term v2_X;
      v2_RuleNo = a1;
      return true;
   }
   private final boolean retryRule2() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr4!=0) {
               v2_RuleNo = _6;
            } else {
            }
            if (inlinedCtr4==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_2});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_2});
               }
            }
            do {
               if (inlinedCtr4>2) {
                  inlinedCtr4 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_2});
                  }
                  return false;
               }
               if (ATOM_2.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr4++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{ATOM_2});
                  }
                  break;
               }
            } while (true);
            _6 = v2_RuleNo;
            v2_RuleNo = v2_RuleNo.getTerm();
            if (!v2_RuleNo.unify(INTEGER_3)) {
               if (v2_RuleNo!=null) v2_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v2_RuleNo!=null) v2_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule3() {
      final Term v3_X;
      v3_RuleNo = a1;
      return true;
   }
   private final boolean retryRule3() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr5!=0) {
               v3_RuleNo = _7;
            } else {
            }
            if (inlinedCtr5==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{STRUCTURE});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{STRUCTURE});
               }
            }
            do {
               if (inlinedCtr5>2) {
                  inlinedCtr5 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{STRUCTURE});
                  }
                  return false;
               }
               if (STRUCTURE.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr5++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{STRUCTURE});
                  }
                  break;
               }
            } while (true);
            _7 = v3_RuleNo;
            v3_RuleNo = v3_RuleNo.getTerm();
            if (!v3_RuleNo.unify(INTEGER_4)) {
               if (v3_RuleNo!=null) v3_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v3_RuleNo!=null) v3_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule4() {
      v4_X = a0;
      v4_RuleNo = a1;
      return true;
   }
   private final boolean retryRule4() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr6==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v4_Y});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v4_Y});
               }
            }
            if (inlinedCtr6>2) {
               inlinedCtr6 = 0;
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v4_Y});
               }
               return false;
            }
            v4_Y = CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr6++];
            if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
               CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v4_Y});
            }
            if (!v4_Y.unify(v4_X)) {
               if (v4_X!=null) v4_X.backtrack();
               if (v4_Y!=null) v4_Y.backtrack();
               break mainloop;
            }
            if (!v4_RuleNo.unify(INTEGER_5)) {
               if (v4_X!=null) v4_X.backtrack();
               if (v4_Y!=null) v4_Y.backtrack();
               if (v4_RuleNo!=null) v4_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v4_X!=null) v4_X.backtrack();
            if (v4_Y!=null) v4_Y.backtrack();
            if (v4_RuleNo!=null) v4_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule5() {
      v5_X = a0;
      v5_RuleNo = a1;
      return true;
   }
   private final boolean retryRule5() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr7==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v5_Y});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v5_Y});
               }
            }
            if (inlinedCtr7>2) {
               inlinedCtr7 = 0;
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v5_Y});
               }
               return false;
            }
            v5_Y = CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr7++];
            if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
               CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v5_Y});
            }
            if (!v5_X.unify(v5_Y)) {
               if (v5_Y!=null) v5_Y.backtrack();
               if (v5_X!=null) v5_X.backtrack();
               break mainloop;
            }
            if (!v5_RuleNo.unify(INTEGER_6)) {
               if (v5_Y!=null) v5_Y.backtrack();
               if (v5_X!=null) v5_X.backtrack();
               if (v5_RuleNo!=null) v5_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v5_Y!=null) v5_Y.backtrack();
            if (v5_X!=null) v5_X.backtrack();
            if (v5_RuleNo!=null) v5_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule6() {
      final Term v6_X;
      v6_X = a0;
      v6_RuleNo = a1;
      v6_Y = v6_X;
      return true;
   }
   private final boolean retryRule6() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr8!=0) {
               v6_RuleNo = _9;
               v6_Y = _10;
               _8.backtrack();
            } else {
               _8 = v6_Y.getTerm();
            }
            if (inlinedCtr8==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v6_Y});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v6_Y});
               }
            }
            do {
               if (inlinedCtr8>2) {
                  inlinedCtr8 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v6_Y});
                  }
                  return false;
               }
               if (_8.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr8++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v6_Y});
                  }
                  break;
               } else {
                  _8.backtrack();
               }
            } while (true);
            _9 = v6_RuleNo;
            v6_RuleNo = v6_RuleNo.getTerm();
            _10 = v6_Y;
            v6_Y = v6_Y.getTerm();
            if (!v6_RuleNo.unify(INTEGER_7)) {
               if (v6_RuleNo!=null) v6_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v6_RuleNo!=null) v6_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule7() {
      final Term v7_X;
      v7_X = a0;
      v7_RuleNo = a1;
      if (v7_Y==null) {
         v7_Y = new Variable("Y");
      }
      if (!v7_X.unify(v7_Y)) {
         return false;
      }
      return true;
   }
   private final boolean retryRule7() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr9!=0) {
               v7_RuleNo = _12;
               v7_Y = _13;
               _11.backtrack();
            } else {
               _11 = v7_Y.getTerm();
            }
            if (inlinedCtr9==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v7_Y});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v7_Y});
               }
            }
            do {
               if (inlinedCtr9>2) {
                  inlinedCtr9 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v7_Y});
                  }
                  return false;
               }
               if (_11.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr9++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v7_Y});
                  }
                  break;
               } else {
                  _11.backtrack();
               }
            } while (true);
            _12 = v7_RuleNo;
            v7_RuleNo = v7_RuleNo.getTerm();
            _13 = v7_Y;
            v7_Y = v7_Y.getTerm();
            if (!v7_RuleNo.unify(INTEGER_8)) {
               if (v7_RuleNo!=null) v7_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v7_RuleNo!=null) v7_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule8() {
      v8_X = a0;
      v8_RuleNo = a1;
      return true;
   }
   private final boolean retryRule8() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr10!=0) {
               v8_X = _15;
               v8_RuleNo = _16;
               _14.backtrack();
            } else {
               _14 = v8_X.getTerm();
            }
            if (inlinedCtr10==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v8_X});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v8_X});
               }
            }
            do {
               if (inlinedCtr10>2) {
                  inlinedCtr10 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v8_X});
                  }
                  return false;
               }
               if (_14.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr10++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v8_X});
                  }
                  break;
               } else {
                  _14.backtrack();
               }
            } while (true);
            _15 = v8_X;
            v8_X = v8_X.getTerm();
            _16 = v8_RuleNo;
            v8_RuleNo = v8_RuleNo.getTerm();
            case 1:
            if (inlinedCtr11!=0) {
               v8_X = _18;
               v8_RuleNo = _19;
               _17.backtrack();
            } else {
               _17 = v8_X.getTerm();
            }
            if (inlinedCtr11==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v8_X});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v8_X});
               }
            }
            do {
               if (inlinedCtr11>2) {
                  inlinedCtr11 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v8_X});
                  }
                  conjunctionCtr = 0;
                  break mainloop;
               }
               if (_17.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr11++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v8_X});
                  }
                  break;
               } else {
                  _17.backtrack();
               }
            } while (true);
            _18 = v8_X;
            v8_X = v8_X.getTerm();
            _19 = v8_RuleNo;
            v8_RuleNo = v8_RuleNo.getTerm();
            conjunctionCtr = 1;
            if (!v8_RuleNo.unify(INTEGER_9)) {
               if (v8_RuleNo!=null) v8_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 2;
            return true;
            case 2:
            conjunctionCtr = 1;
            if (v8_RuleNo!=null) v8_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule9() {
      v9_X = a0;
      v9_RuleNo = a1;
      if (!v9_X.unify(ATOM_0)) {
         return false;
      }
      return true;
   }
   private final boolean retryRule9() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr12!=0) {
               v9_X = _21;
               v9_RuleNo = _22;
               _20.backtrack();
            } else {
               _20 = v9_X.getTerm();
            }
            if (inlinedCtr12==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v9_X});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v9_X});
               }
            }
            do {
               if (inlinedCtr12>2) {
                  inlinedCtr12 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v9_X});
                  }
                  return false;
               }
               if (_20.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr12++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v9_X});
                  }
                  break;
               } else {
                  _20.backtrack();
               }
            } while (true);
            _21 = v9_X;
            v9_X = v9_X.getTerm();
            _22 = v9_RuleNo;
            v9_RuleNo = v9_RuleNo.getTerm();
            if (!v9_RuleNo.unify(INTEGER_10)) {
               if (v9_RuleNo!=null) v9_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v9_RuleNo!=null) v9_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule10() {
      v10_X = a0;
      v10_RuleNo = a1;
      if (!v10_X.unify(ATOM)) {
         return false;
      }
      return true;
   }
   private final boolean retryRule10() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr13!=0) {
               v10_X = _24;
               v10_RuleNo = _25;
               _23.backtrack();
            } else {
               _23 = v10_X.getTerm();
            }
            if (inlinedCtr13==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v10_X});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v10_X});
               }
            }
            do {
               if (inlinedCtr13>2) {
                  inlinedCtr13 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v10_X});
                  }
                  return false;
               }
               if (_23.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr13++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v10_X});
                  }
                  break;
               } else {
                  _23.backtrack();
               }
            } while (true);
            _24 = v10_X;
            v10_X = v10_X.getTerm();
            _25 = v10_RuleNo;
            v10_RuleNo = v10_RuleNo.getTerm();
            if (!v10_RuleNo.unify(INTEGER_11)) {
               if (v10_RuleNo!=null) v10_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v10_RuleNo!=null) v10_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule11() {
      v11_X = a0;
      v11_RuleNo = a1;
      if (!v11_X.unify(ATOM_1)) {
         return false;
      }
      return true;
   }
   private final boolean retryRule11() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr14!=0) {
               v11_X = _27;
               v11_RuleNo = _28;
               _26.backtrack();
            } else {
               _26 = v11_X.getTerm();
            }
            if (inlinedCtr14==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v11_X});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v11_X});
               }
            }
            do {
               if (inlinedCtr14>2) {
                  inlinedCtr14 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v11_X});
                  }
                  return false;
               }
               if (_26.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr14++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v11_X});
                  }
                  break;
               } else {
                  _26.backtrack();
               }
            } while (true);
            _27 = v11_X;
            v11_X = v11_X.getTerm();
            _28 = v11_RuleNo;
            v11_RuleNo = v11_RuleNo.getTerm();
            if (!v11_RuleNo.unify(INTEGER_12)) {
               if (v11_RuleNo!=null) v11_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v11_RuleNo!=null) v11_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule12() {
      v12_X = a0;
      v12_RuleNo = a1;
      if (!v12_X.unify(ATOM_2)) {
         return false;
      }
      return true;
   }
   private final boolean retryRule12() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr15!=0) {
               v12_X = _30;
               v12_RuleNo = _31;
               _29.backtrack();
            } else {
               _29 = v12_X.getTerm();
            }
            if (inlinedCtr15==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v12_X});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v12_X});
               }
            }
            do {
               if (inlinedCtr15>2) {
                  inlinedCtr15 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v12_X});
                  }
                  return false;
               }
               if (_29.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr15++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v12_X});
                  }
                  break;
               } else {
                  _29.backtrack();
               }
            } while (true);
            _30 = v12_X;
            v12_X = v12_X.getTerm();
            _31 = v12_RuleNo;
            v12_RuleNo = v12_RuleNo.getTerm();
            if (!v12_RuleNo.unify(INTEGER_13)) {
               if (v12_RuleNo!=null) v12_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v12_RuleNo!=null) v12_RuleNo.backtrack();
         }
      } while (true);
   }
   private final boolean initRule13() {
      v13_X = a0;
      v13_RuleNo = a1;
      if (!v13_X.unify(STRUCTURE)) {
         return false;
      }
      return true;
   }
   private final boolean retryRule13() {
      do {
         mainloop:
         switch (conjunctionCtr) {
            case 0:
            if (inlinedCtr16!=0) {
               v13_X = _33;
               v13_RuleNo = _34;
               _32.backtrack();
            } else {
               _32 = v13_X.getTerm();
            }
            if (inlinedCtr16==0) {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logCall(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v13_X});
               }
            } else {
               if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                  CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logRedo(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v13_X});
               }
            }
            do {
               if (inlinedCtr16>2) {
                  inlinedCtr16 = 0;
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logFail(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v13_X});
                  }
                  return false;
               }
               if (_32.unify(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.data[inlinedCtr16++])) {
                  if (CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.isEnabled()) {
                     CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1.spyPoint.logExit(CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1, new Term[]{v13_X});
                  }
                  break;
               } else {
                  _32.backtrack();
               }
            } while (true);
            _33 = v13_X;
            v13_X = v13_X.getTerm();
            _34 = v13_RuleNo;
            v13_RuleNo = v13_RuleNo.getTerm();
            if (!v13_RuleNo.unify(INTEGER_14)) {
               if (v13_RuleNo!=null) v13_RuleNo.backtrack();
               break mainloop;
            }
            conjunctionCtr = 1;
            return true;
            case 1:
            conjunctionCtr = 0;
            if (v13_RuleNo!=null) v13_RuleNo.backtrack();
         }
      } while (true);
   }
   public %CLASS_NAME%(final KnowledgeBase _kb) {
      s = KnowledgeBaseUtils.getSpyPoints(_kb).getSpyPoint(new PredicateKey("testMultipleRulesWithSingleImmutableArgument", 2));
      d = false;
      CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1 = (org.projog.core.udp.MultipleRulesWithSingleImmutableArgumentPredicate)((StaticUserDefinedPredicateFactory)_kb.getPredicateFactory(new PredicateKey("multiple_rules_with_single_immutable_argument", 1))).getActualPredicateFactory();
   }
   %CLASS_NAME%(final Term in0, final Term in1) {
      a0 = in0.getTerm();
      a1 = in1.getTerm();
      d = s.isEnabled();
   }
   private final void backtrack() {
      a0.backtrack();
      a1.backtrack();
   }
   public final boolean evaluate(final Term... args) {
      if (d) {
         if (clauseCtr==0 && !isRetrying) {
            if (d) {
               s.logCall(this, new Term[]{a0, a1});
            }
         } else {
            if (d) {
               s.logRedo(this, new Term[]{a0, a1});
            }
         }
      }
      switch (clauseCtr) {
         case 0:
         if (isRetrying) {
            if (retryRule0()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            if (initRule0() && retryRule0()) {
               isRetrying = true;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 1:
         if (isRetrying) {
            if (retryRule1()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule1() && retryRule1()) {
               isRetrying = true;
               clauseCtr = 1;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 2:
         if (isRetrying) {
            if (retryRule2()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule2() && retryRule2()) {
               isRetrying = true;
               clauseCtr = 2;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 3:
         if (isRetrying) {
            if (retryRule3()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule3() && retryRule3()) {
               isRetrying = true;
               clauseCtr = 3;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 4:
         if (isRetrying) {
            if (retryRule4()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule4() && retryRule4()) {
               isRetrying = true;
               clauseCtr = 4;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 5:
         if (isRetrying) {
            if (retryRule5()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule5() && retryRule5()) {
               isRetrying = true;
               clauseCtr = 5;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 6:
         if (isRetrying) {
            if (retryRule6()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule6() && retryRule6()) {
               isRetrying = true;
               clauseCtr = 6;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 7:
         if (isRetrying) {
            if (retryRule7()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule7() && retryRule7()) {
               isRetrying = true;
               clauseCtr = 7;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 8:
         if (isRetrying) {
            if (retryRule8()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule8() && retryRule8()) {
               isRetrying = true;
               clauseCtr = 8;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 9:
         if (isRetrying) {
            if (retryRule9()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule9() && retryRule9()) {
               isRetrying = true;
               clauseCtr = 9;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 10:
         if (isRetrying) {
            if (retryRule10()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule10() && retryRule10()) {
               isRetrying = true;
               clauseCtr = 10;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 11:
         if (isRetrying) {
            if (retryRule11()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule11() && retryRule11()) {
               isRetrying = true;
               clauseCtr = 11;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 12:
         if (isRetrying) {
            if (retryRule12()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule12() && retryRule12()) {
               isRetrying = true;
               clauseCtr = 12;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
         case 13:
         if (isRetrying) {
            if (retryRule13()) {
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
            isRetrying = false;
         } else {
            backtrack();
            if (initRule13() && retryRule13()) {
               isRetrying = true;
               clauseCtr = 13;
               if (d) {
                  s.logExit(this, new Term[]{a0, a1});
               }
               return true;
            }
         }
      }
      clauseCtr = 14;
      backtrack();
      if (d) {
         s.logFail(this, new Term[]{a0, a1});
      }
      return false;
   }
   public final boolean isRetryable() {
      return true;
   }
   public final boolean couldReevaluationSucceed() {
      if (clauseCtr<13) {
         return true;
      }
      if (inlinedCtr0<3) {
         return true;
      }
      return false;
   }
   public final void setKnowledgeBase(KnowledgeBase kb) {
      throw new RuntimeException();
   }
   public final Predicate getPredicate(final Term... termArgs) {
      return new %CLASS_NAME%(termArgs[0], termArgs[1]);
   }
   private static final Term INTEGER_1 = new IntegerNumber(1L);
   private static final Term ATOM = new Atom("s");
   private static final Term ATOM_0 = new Atom("d");
   private static final Term ATOM_1 = new Atom("a");
   private static final Term INTEGER_2 = new IntegerNumber(2L);
   private static final Term ATOM_2 = new Atom("q");
   private static final Term INTEGER_3 = new IntegerNumber(3L);
   private static final Term STRUCTURE = Structure.createStructure("s", new Term[]{new Atom("a")});
   private static final Term INTEGER_4 = new IntegerNumber(4L);
   private static final Term INTEGER_5 = new IntegerNumber(5L);
   private static final Term INTEGER_6 = new IntegerNumber(6L);
   private static final Term INTEGER_7 = new IntegerNumber(7L);
   private static final Term INTEGER_8 = new IntegerNumber(8L);
   private static final Term INTEGER_9 = new IntegerNumber(9L);
   private static final Term INTEGER_10 = new IntegerNumber(10L);
   private static final Term INTEGER_11 = new IntegerNumber(11L);
   private static final Term INTEGER_12 = new IntegerNumber(12L);
   private static final Term INTEGER_13 = new IntegerNumber(13L);
   private static final Term INTEGER_14 = new IntegerNumber(14L);
   private static org.projog.core.udp.MultipleRulesWithSingleImmutableArgumentPredicate CompiledPredicateSourceGeneratorTest$DummyUserDefinedPredicateFactory_1;
   private static SpyPoints.SpyPoint s;
   private final boolean d;
   private boolean isRetrying;
   private int clauseCtr;
   private int conjunctionCtr;
   private Term a0;
   private Term a1;
   private Term v0_X;
   private Term v0_RuleNo;
   private Term v1_RuleNo;
   private Term v2_RuleNo;
   private Term v3_RuleNo;
   private Term v4_Y;
   private Term v4_X;
   private Term v4_RuleNo;
   private Term v5_Y;
   private Term v5_X;
   private Term v5_RuleNo;
   private Term v6_Y;
   private Term v6_RuleNo;
   private Term v7_Y;
   private Term v7_RuleNo;
   private Term v8_X;
   private Term v8_RuleNo;
   private Term v9_X;
   private Term v9_RuleNo;
   private Term v10_X;
   private Term v10_RuleNo;
   private Term v11_X;
   private Term v11_RuleNo;
   private Term v12_X;
   private Term v12_RuleNo;
   private Term v13_X;
   private Term v13_RuleNo;
   private Term _0;
   private Term _1;
   private Term _2;
   private Term _3;
   private Term _4;
   private Term _5;
   private Term _6;
   private Term _7;
   private Term _8;
   private Term _9;
   private Term _10;
   private Term _11;
   private Term _12;
   private Term _13;
   private Term _14;
   private Term _15;
   private Term _16;
   private Term _17;
   private Term _18;
   private Term _19;
   private Term _20;
   private Term _21;
   private Term _22;
   private Term _23;
   private Term _24;
   private Term _25;
   private Term _26;
   private Term _27;
   private Term _28;
   private Term _29;
   private Term _30;
   private Term _31;
   private Term _32;
   private Term _33;
   private Term _34;
   private int inlinedCtr0;
   private int inlinedCtr1;
   private int inlinedCtr2;
   private int inlinedCtr3;
   private int inlinedCtr4;
   private int inlinedCtr5;
   private int inlinedCtr6;
   private int inlinedCtr7;
   private int inlinedCtr8;
   private int inlinedCtr9;
   private int inlinedCtr10;
   private int inlinedCtr11;
   private int inlinedCtr12;
   private int inlinedCtr13;
   private int inlinedCtr14;
   private int inlinedCtr15;
   private int inlinedCtr16;
}
