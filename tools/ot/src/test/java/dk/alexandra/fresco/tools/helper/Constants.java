package dk.alexandra.fresco.tools.helper;

import java.lang.reflect.Field;
import java.lang.reflect.Modifier;

public class Constants {
  public static final byte[] seedOne = new byte[] { 0x42, 0x42, 0x42, 0x42,
      0x42,
      0x42,
      0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42,
      0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42,
      0x42, 0x42 };
  public static final byte[] seedTwo = new byte[] { 0x42, 0x00, 0x42, 0x42,
      0x42,
      0x42,
      0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42,
      0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42,
      0x42, 0x42 };
  public static final byte[] seedThree = new byte[] { 0x54, 0x00, 0x42, 0x42,
      0x42,
      0x42,
      0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42,
      0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42,
      0x42, 0x42 };

  /**
   * Helper method which uses reflection to change a private and final field
   * variable to a desired value.
   * 
   * @param field
   *          The field of the class to change
   * @param newValue
   *          The new value the field should take
   * @param objectToWorkOn
   *          The object of which the field should be changed
   * @throws Exception
   *           Thrown if something goes wrong
   */
  public static void setFinalStatic(Field field, Object newValue,
      Object objectToWorkOn)
      throws Exception {
    field.setAccessible(true);

    Field modifiersField = Field.class.getDeclaredField("modifiers");
    modifiersField.setAccessible(true);
    modifiersField.setInt(field, field.getModifiers() & ~Modifier.FINAL);

    field.set(objectToWorkOn, newValue);
  }
}
